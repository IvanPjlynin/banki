"use strict";

var acym_helperBlockSeparator = {
  $container: '',
  onePartContainer: '',
  rightBorder: '',
  leftBorder: '',
  xAxis: 10,
  maxXAxis: 10,
  newXAxis: '',
  distanceMax: 5,
  blockName: {
    0: 'A',
    1: 'B',
    2: 'C',
    3: 'D'
  },
  initBlockSeparator: function initBlockSeparator() {
    acym_helperBlockSeparator.$container = jQuery('.acym__wysid__context__modal__container__block-settings');
    if (acym_helperBlockSeparator.$container.length < 1) return true;
    acym_helperBlockSeparator.$container.html(acym_helperBlockSeparator.areaGrid());
    setTimeout(function () {
      acym_helperBlockSeparator.initRows();
      acym_helperBlockSeparator.onePartContainer = acym_helperBlockSeparator.$container[0].offsetWidth / 12;
      acym_helperBlockSeparator.initMouseDown();
    }, 500);
  },
  initRows: function initRows() {
    var $row = jQuery('.acym__wysid__row__element--focus');
    var $th = $row.find('.acym__wysid__row__element__th');
    var $modalContainerStructure = jQuery('.acym__wysid__context__modal__container--structure');

    if ($th.length <= 1) {
      $modalContainerStructure.hide();
      return true;
    }

    acym_helperBlockSeparator.initPadding();
    acym_helperBlockSeparator.initBackgroundColor();
    $modalContainerStructure.show();
    $th.each(function (index) {
      var classValue = acym_helperBlockSeparator.getLargeClass(jQuery(this));
      var needRight = $th[index + 1] !== undefined;
      var needLeft = $th[index - 1] !== undefined;
      acym_helperBlockSeparator.$container.append(acym_helperBlockSeparator.generateArea(classValue[1], needRight, needLeft, index));
    });
  },
  elasticSVG: function elasticSVG(event) {
    var $path = jQuery('.separator_grabbed').find('path');
    var posLeftPath = $path.offset().left;
    var grabbingRight = event.clientX > posLeftPath;
    var distance = grabbingRight ? event.clientX - posLeftPath : posLeftPath - event.clientX;
    var plusOnX = distance > acym_helperBlockSeparator.distanceMax ? acym_helperBlockSeparator.maxXAxis : distance * acym_helperBlockSeparator.maxXAxis / acym_helperBlockSeparator.distanceMax;
    acym_helperBlockSeparator.newXAxis = grabbingRight ? acym_helperBlockSeparator.xAxis + plusOnX : acym_helperBlockSeparator.xAxis - plusOnX;
    $path.attr('d', 'M 10,10 C 10 10, ' + acym_helperBlockSeparator.newXAxis + ' 50, 10 90');
  },
  releaseSVG: function releaseSVG() {
    var beforeResetAxis = acym_helperBlockSeparator.newXAxis > acym_helperBlockSeparator.xAxis ? acym_helperBlockSeparator.xAxis - 6 : acym_helperBlockSeparator.xAxis + 6;
    var $separatorGrabbed = jQuery('.separator_grabbed');
    $separatorGrabbed.find('path').attr('d', 'M 10,10 C 10 10, ' + beforeResetAxis + ' 50, 10 90');
    setTimeout(function () {
      $separatorGrabbed.find('path').attr('d', 'M 10,10 C 10 10, ' + acym_helperBlockSeparator.xAxis + ' 50, 10 90');
    }, 150);
  },
  initMouseDown: function initMouseDown() {
    jQuery('.separator_right, .separator_left').off('mousedown').on('mousedown', function (event) {
      jQuery('.acym__wysid__row__selector, .acym__wysid__element__toolbox').remove();
      var $separator = jQuery(this);
      $separator.addClass('separator_grabbed');
      acym_helperBlockSeparator.$container.find('.acym__wysid__context__modal__container__block-settings--grid').addClass('grid-visible');
      var $parent = jQuery(this).closest('.cell');
      var $parentSiblings = $parent.next();
      var $parentSiblingsBefore = $parent.prev('.acym__block__separator__area');
      acym_helperBlockSeparator.initMouseMove($parent, $parentSiblings, $parentSiblingsBefore, $separator.attr('class').indexOf('left') !== -1);
      acym_helperBlockSeparator.setMouseUp($separator);
    });
  },
  setMouseUp: function setMouseUp($separator) {
    jQuery(document).off('mouseup').on('mouseup', function () {
      jQuery(document).off('mousemove');
      acym_helperBlockSeparator.releaseSVG();
      $separator.removeClass('separator_grabbed');
      acym_helperBlockSeparator.$container.find('.grid-visible').removeClass('grid-visible');
      acym_editorWysidRowSelector.setZoneAndBlockOverlays();
    });
  },
  setRightBorder: function setRightBorder($parent) {
    acym_helperBlockSeparator.rightBorder = parseInt($parent.offset().left) + parseInt($parent.width()) - 20;
  },
  setLeftBorder: function setLeftBorder($parent) {
    acym_helperBlockSeparator.leftBorder = parseInt($parent.offset().left);
  },
  changeLength: function changeLength($el, number) {
    $el.find('.area__length').html(number);
  },
  getLargeClass: function getLargeClass($el) {
    var className = $el.attr('class').match(/(large\-)([0-9]*)/);

    if (null !== className) {
      return [className[1], parseInt(className[2])];
    }

    return false;
  },
  initMouseMove: function initMouseMove($parent, $parentSiblings, $parentSiblingsBefore, isLeft) {
    acym_helperBlockSeparator.setRightBorder($parent);
    acym_helperBlockSeparator.setLeftBorder($parent);
    jQuery(document).off('mousemove').on('mousemove', function (event) {
      acym_helperBlockSeparator.elasticSVG(event);
      var cursor = event.clientX;

      if (cursor > acym_helperBlockSeparator.rightBorder) {
        if (!isLeft && acym_helperBlockSeparator.rightBorder + acym_helperBlockSeparator.onePartContainer < cursor) {
          acym_helperBlockSeparator.up($parent, $parentSiblings, $parentSiblingsBefore, false);
        }
      } else if (cursor < acym_helperBlockSeparator.rightBorder) {
        if (!isLeft && acym_helperBlockSeparator.rightBorder - acym_helperBlockSeparator.onePartContainer > cursor) {
          acym_helperBlockSeparator.down($parent, $parentSiblings, $parentSiblingsBefore, false);
        }
      }

      if (cursor > acym_helperBlockSeparator.leftBorder) {
        if (isLeft && acym_helperBlockSeparator.leftBorder + acym_helperBlockSeparator.onePartContainer < cursor) {
          acym_helperBlockSeparator.down($parent, $parentSiblings, $parentSiblingsBefore, true);
        }
      } else if (cursor < acym_helperBlockSeparator.leftBorder) {
        if (isLeft && acym_helperBlockSeparator.leftBorder - acym_helperBlockSeparator.onePartContainer > cursor) {
          acym_helperBlockSeparator.up($parent, $parentSiblings, $parentSiblingsBefore, true);
        }
      }
    });
  },
  up: function up($parent, $parentSib, $parentSiblingsBefore, isLeft) {
    //we get the div to change
    var $parentSibToChange = isLeft ? $parentSiblingsBefore : $parentSib;
    var parentClass = acym_helperBlockSeparator.getLargeClass($parent);
    var parentSibClass = acym_helperBlockSeparator.getLargeClass($parentSibToChange); //if we are at the minimum we stop

    if (parentSibClass[1] === 1) return true; //we change the class values

    parentClass[1]++;
    parentSibClass[1]--;
    var newParentClass = parentClass[0] + parentClass[1];
    var newParentSibClass = parentSibClass[0] + parentSibClass[1];
    $parent.attr('class', 'cell acym__block__separator__area ' + newParentClass);
    $parentSibToChange.attr('class', 'cell acym__block__separator__area ' + newParentSibClass);
    acym_helperBlockSeparator.changeLength($parent, parentClass[1]);
    acym_helperBlockSeparator.changeLength($parentSibToChange, parentSibClass[1]);
    acym_helperBlockSeparator.changeInTemplate(); //we stop and call back the mousemove event

    acym_helperBlockSeparator.initMouseMove($parent, $parentSib, $parentSiblingsBefore, isLeft);
  },
  down: function down($parent, $parentSib, $parentSiblingsBefore, isLeft) {
    //we get the div to change
    var $parentSibToChange = isLeft ? $parentSiblingsBefore : $parentSib;
    var parentClass = acym_helperBlockSeparator.getLargeClass($parent);
    var parentSibClass = acym_helperBlockSeparator.getLargeClass($parentSibToChange); //if we are at the minimum we stop

    if (parentClass[1] === 1) return true; //we change the class values

    parentClass[1]--;
    parentSibClass[1]++;
    var newParentClass = parentClass[0] + parentClass[1];
    var newParentSibClass = parentSibClass[0] + parentSibClass[1];
    $parent.attr('class', 'cell acym__block__separator__area ' + newParentClass);
    $parentSibToChange.attr('class', 'cell  acym__block__separator__area ' + newParentSibClass);
    acym_helperBlockSeparator.changeLength($parent, parentClass[1]);
    acym_helperBlockSeparator.changeLength($parentSibToChange, parentSibClass[1]);
    acym_helperBlockSeparator.changeInTemplate(); //we stop and call back the mousemove event

    acym_helperBlockSeparator.initMouseMove($parent, $parentSib, $parentSiblingsBefore, isLeft);
  },
  generateArea: function generateArea(number, needRight, needLeft, indexTh) {
    var svg = '<svg width="20" height="100" class="sidebar" viewBox="0 0 20 100"><path class="s-path" fill="none" d="M 10,10 C 10 10, 10 50, 10 90" stroke-linecap="round"/></svg>';
    var rightSeparator = needRight ? "<div class=\"separator_right\">".concat(svg, "</div>") : '';
    var leftSeparator = needLeft ? "<div class=\"separator_left\">".concat(svg, "</div>") : '';
    return "<div class=\"cell large-".concat(number, " acym__block__separator__area\"><p class=\"area__name\">").concat(acym_helperBlockSeparator.blockName[indexTh], "</p><p class=\"area__length\">").concat(number, "</p>").concat(rightSeparator).concat(leftSeparator, "</div>");
  },
  changeInTemplate: function changeInTemplate() {
    var $row = jQuery('.acym__wysid__row__element--focus');
    var $th = $row.find('.acym__wysid__row__element__th');
    var classes = {};
    acym_helperBlockSeparator.$container.find(' > .acym__block__separator__area').each(function (index) {
      var largeClass = acym_helperBlockSeparator.getLargeClass(jQuery(this));
      classes[index] = largeClass[0] + largeClass[1];
    });
    $th.each(function (index) {
      var largeClass = acym_helperBlockSeparator.getLargeClass(jQuery(this));
      jQuery(this).removeClass(largeClass[0] + largeClass[1]);
      jQuery(this).addClass(classes[index]);
    });
  },
  areaGrid: function areaGrid() {
    var gridArea = '<div class="cell grid-x acym-grid-margin-x acym__wysid__context__modal__container__block-settings--grid">';

    for (var i = 0; i < 12; i++) {
      gridArea += '<div class="cell large-1"></div>';
    }

    gridArea += '</div>';
    return gridArea;
  },
  initPadding: function initPadding() {
    var $th = jQuery('.acym__wysid__row__element--focus .acym__wysid__row__element__th');
    var $paddingContainer = jQuery('.acym__wysid__context__modal__block-padding');
    var html = "<h6 class=\"cell margin-top-1 acym__wysid__context__block__padding__title\">".concat(ACYM_JS_TXT.ACYM_SPACE_BETWEEN_BLOCK, "</h6>");
    $paddingContainer.html(html);
    var horizontalPadding = '';
    var verticalPadding = '';

    for (var i = 0; i < $th.length - 1; i++) {
      //get the padding of the current and next element and calculate the global
      var paddingElementLeft = acym_helper.getIntValueWithoutPixel($th[i].style.paddingRight);
      var paddingElementRight = acym_helper.getIntValueWithoutPixel($th[i + 1].style.paddingLeft);
      var paddingGlobal = paddingElementRight + paddingElementLeft; //blocks

      var blockLeft = acym_helperBlockSeparator.blockName[i];
      var blockRight = acym_helperBlockSeparator.blockName[i + 1]; //text

      var textToDisplay = acym_helper.sprintf(ACYM_JS_TXT.ACYM_X1_AND_X2, blockLeft, blockRight); //add the input to change this value

      var content = "<div class=\"cell grid-x acym_vcenter margin-bottom-1\"><p class=\"cell shrink\">".concat(textToDisplay, "</p>");
      content += "<input type=\"number\" min=\"0\" id=\"acym__wysid__context__block__padding-".concat(i, "\" value=\"").concat(paddingGlobal, "\" class=\"cell margin-bottom-0 small-4 margin-left-1 acym__wysid__context__block__padding--input\">");
      content += '</div>';
      horizontalPadding += content; //add the input to change this value

      var contentVertical = "<div class=\"cell grid-x acym_vcenter margin-bottom-1\"><p class=\"cell shrink\">".concat(textToDisplay, "</p>");
      contentVertical += "<input type=\"number\" min=\"0\" id=\"acym__wysid__context__block__vertical__padding-".concat(i, "\" value=\"0\" class=\"cell margin-bottom-0 small-4 margin-left-1 acym__wysid__context__block__vertical__padding--input\">");
      contentVertical += '</div>';
      verticalPadding += contentVertical;
    }

    html += "<div class=\"cell grid-x small-6 acym__wysid__context__block__padding__horizontal\">";
    html += "<p class=\"cell margin-bottom-1\">".concat(ACYM_JS_TXT.ACYM_HORIZONTAL_PADDING, " ").concat(acym_helperTooltip.addInfo(ACYM_JS_TXT.ACYM_HORIZONTAL_PADDING_DESC), "</p>");
    html += horizontalPadding;
    html += "</div>";
    html += "<div class=\"cell grid-x small-6\">";
    html += "<p class=\"cell margin-bottom-1\">".concat(ACYM_JS_TXT.ACYM_VERTICAL_PADDING, " ").concat(acym_helperTooltip.addInfo(ACYM_JS_TXT.ACYM_VERTICAL_PADDING_DESC), "</p>");
    html += verticalPadding;
    html += "</div>";
    $paddingContainer.html(html);
    acym_helperTooltip.setTooltip();
    acym_helperBlockSeparator.setPadding($th);
    acym_helperBlockSeparator.setVerticalPadding($th);
  },
  setPadding: function setPadding($th) {
    jQuery('.acym__wysid__context__block__padding--input').off('change').on('change', function (e) {
      //get the input him self
      var $self = jQuery(this);
      var valueEntered = $self.val(); //check the value

      if (valueEntered < 0) {
        $self.val(0);
      } //if value ok then set it


      var idSplit = $self.attr('id').split('-');
      if (undefined === idSplit[1]) return false;
      var newValue = Math.round(valueEntered / 2);
      idSplit[1] = parseInt(idSplit[1]);
      jQuery($th[idSplit[1]]).css('padding-right', newValue + 'px');
      jQuery($th[idSplit[1] + 1]).css('padding-left', newValue + 'px');
    });
  },
  setVerticalPadding: function setVerticalPadding($th) {
    var $parentTable = jQuery($th[0]).closest('.acym__wysid__row__element');

    if ($parentTable.attr('id') === '' || $parentTable.attr('id') === undefined) {
      $parentTable.attr('id', this.generatedNewIdParentTable());
    }

    var $styleTag = jQuery("[data-vertical-padding=\"".concat($parentTable.attr('id'), "\"]"));

    for (var i = 0; i < $th.length; i++) {
      if (jQuery($th[i]).attr('class').indexOf('acym__wysid__row__element__th__vertical__padding') === -1) {
        jQuery($th[i]).addClass('acym__wysid__row__element__th__vertical__padding-' + i);
      } else if ($styleTag.length > 0) {
        var styleTagText = $styleTag.html();
        var rulePaddingTop = "acym__wysid__row__element__th__vertical__padding-".concat(i, "{padding-top: ([0-9]*)px");
        var rulePaddingBottom = "acym__wysid__row__element__th__vertical__padding-".concat(i, "{padding-bottom: ([0-9]*)px");
        var topRegex = new RegExp(rulePaddingTop, 'g');
        var bottomRegex = new RegExp(rulePaddingBottom, 'g');
        var topPadding = topRegex.exec(styleTagText);
        var bottomPadding = bottomRegex.exec(styleTagText);

        if (topPadding !== null) {
          var $previousInput = jQuery("#acym__wysid__context__block__vertical__padding-".concat(i - 1));
          $previousInput.val(parseInt($previousInput.val()) + parseInt(topPadding[1]));
        }

        if (bottomPadding !== null) {
          var $currentInput = jQuery("#acym__wysid__context__block__vertical__padding-".concat(i));
          $currentInput.val(parseInt($currentInput.val()) + parseInt(bottomPadding[1]));
        }
      }
    }

    jQuery('.acym__wysid__context__block__vertical__padding--input').off('change').on('change', function () {
      var $self = jQuery(this);
      var valueEntered = $self.val();

      if (valueEntered < 0) {
        $self.val(0);
        return;
      }

      $styleTag = jQuery("[data-vertical-padding=\"".concat($parentTable.attr('id'), "\"]"));
      if ($styleTag.length > 0) $styleTag.remove();
      var style = '';
      jQuery('.acym__wysid__context__block__vertical__padding--input').each(function (index, $input) {
        $input = jQuery($input);
        var indexUp = index + 1;
        var inputValue = Math.round($input.val() / 2);
        style += "#".concat($parentTable.attr('id'), " .acym__wysid__row__element__th__vertical__padding-").concat(index, "{padding-bottom: ").concat(inputValue, "px !important}");
        style += "#".concat($parentTable.attr('id'), " .acym__wysid__row__element__th__vertical__padding-").concat(indexUp, "{padding-top: ").concat(inputValue, "px !important}");
      });
      $parentTable.prepend("<style data-vertical-padding=\"".concat($parentTable.attr('id'), "\">\n                                            @media screen and (max-width: 480px){\n                                                ").concat(style, "\n                                            }\n                                         </style>"));
    });
  },
  generatedNewIdParentTable: function generatedNewIdParentTable() {
    var id = 'acym__wysid__row__element' + Math.floor(Math.random() * Math.floor(9999999));

    if (jQuery("#".concat(id)).length > 0) {
      return this.generatedNewIdParentTable();
    } else {
      return id;
    }
  },
  changeIdOnduplicate: function changeIdOnduplicate($element) {
    var newId = this.generatedNewIdParentTable();
    var formerId = $element.attr('id');
    if (formerId === undefined) return $element;
    $element.attr('id', newId);
    var $styleTag = $element.find('[data-vertical-padding]');
    if ($styleTag.length === 0) return $element;
    var styleTagHtml = $styleTag.html();
    $styleTag.attr('data-vertical-padding', newId);
    var formerIdRegex = new RegExp(formerId, 'g');
    $styleTag.html(styleTagHtml.replace(formerIdRegex, newId));
    return $element;
  },
  initBackgroundColor: function initBackgroundColor() {
    var $th = jQuery('.acym__wysid__row__element--focus .acym__wysid__row__element__th');
    var $paddingContainer = jQuery('.acym__wysid__context__modal__block-background');
    var html = "<h6 class=\"cell shrink acym__wysid__context__block__background__title margin-right-1\">\n                        ".concat(ACYM_JS_TXT.ACYM_BACKGROUND_COLOR).concat(acym_helperTooltip.addInfo(ACYM_JS_TXT.ACYM_BACKGROUND_COLOR_DESC), ":\n                    </h6>");

    for (var i = 0; i < $th.length; i++) {
      html += "<div class=\"cell large-2 grid-x acym_vcenter\">\n                        <span class=\"cell shrink\">".concat(this.blockName[i], ":</span>\n                        <input class=\"cell shrink acym__wysid__context__block__background__color-picker\" data-acym-block=\"").concat(i, "\">\n                      </div>");
    }

    $paddingContainer.html(html);
    acym_helperTooltip.setTooltip();
    this.setBackgroundColor($th);
  },
  setBackgroundColor: function setBackgroundColor($th) {
    var $inputsColor = jQuery('.acym__wysid__context__block__background__color-picker');
    $inputsColor.each(function () {
      var $table = jQuery($th[jQuery(this).attr('data-acym-block')]);
      acym_editorWysidColorPicker.setColorPickerForContextModal(jQuery(this), 'background', $table, $table, 'background', true);
    });
  }
};
var acym_editorWysidColorPicker = {
  setColorPickerForContextModal: function setColorPickerForContextModal($element, cssPropertyPrevious, $elementFocus, $previousElement, cssPropertyNew) {
    var allowEmpty = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;
    var showAlpha = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;
    var palette = acym_editorWysidColorPicker.getMainColors();
    $element.spectrum({
      color: $previousElement.css(cssPropertyPrevious),
      preferredFormat: 'hex',
      showButtons: false,
      showInput: true,
      allowEmpty: allowEmpty,
      showAlpha: showAlpha,
      showPalette: true,
      palette: palette,
      move: function move(color) {
        $elementFocus.css(cssPropertyNew, acym_editorWysidColorPicker.getHexStringFromColor(color, showAlpha));
      },
      change: function change(color) {
        $elementFocus.css(cssPropertyNew, acym_editorWysidColorPicker.getHexStringFromColor(color, showAlpha));
      },
      containerClassName: 'acym__context__color__picker'
    });
  },
  getHexStringFromColor: function getHexStringFromColor(color, showAlpha) {
    if (color === null) return 'rgba(0,0,0,0)';
    if (showAlpha) return color.toRgbString();
    return color.toHexString();
  },
  setRowColorPickerWYSID: function setRowColorPickerWYSID($current) {
    var $colorPicker = jQuery('#acym__wysid__context__block__background-color');
    var palette = acym_editorWysidColorPicker.getMainColors();
    $colorPicker.spectrum({
      color: $current.css('background-color'),
      preferredFormat: 'hex',
      showButtons: false,
      showInput: true,
      showInitial: true,
      showPalette: true,
      palette: palette,
      maxSelectionSize: 1,
      move: function move(color) {
        $current.css('background-color', color.toHexString()).attr('bgcolor', color.toHexString());
        $current.css('background-image', '');
      },
      change: function change(color) {
        $current.css('background-color', color.toHexString()).attr('bgcolor', color.toHexString());
        $current.css('background-image', '');
      }
    });
  },
  setMainColorPickerWYSID: function setMainColorPickerWYSID() {
    var $template = jQuery('.acym__wysid__template__content');
    var mainColors = jQuery('#main_colors');
    var $mainColorPicker1 = jQuery('#acym__wysid__maincolor-colorpicker1');
    var $mainColorPicker2 = jQuery('#acym__wysid__maincolor-colorpicker2');
    var $mainColorPicker3 = jQuery('#acym__wysid__maincolor-colorpicker3');
    var $generalColorPicker = jQuery('#acym__wysid__background-colorpicker');
    var $settingsColorPicker = jQuery('#acym__wysid__right__toolbar__settings__color');
    var palette = acym_editorWysidColorPicker.getMainColors('saved');
    var tmplColor = $template.css('background-color');
    palette.push([tmplColor]);
    var optionsMainColorPickers = {
      preferredFormat: 'hex',
      showButtons: false,
      showInput: true,
      showPalette: true,
      palette: palette,
      maxSelectionSize: 6,
      change: function change(color) {
        palette.push([color.toHexString()]);

        if (palette.length > 6) {
          palette = palette.slice(-6);
        }

        $generalColorPicker.spectrum('option', 'palette', palette);
        $settingsColorPicker.spectrum('option', 'palette', palette);
      }
    };
    var color1, color2, color3;

    if (mainColors.val().length > 0) {
      var colors = mainColors.val().split(',');
      color1 = colors[0];
      color2 = colors[1];
      color3 = colors[2];
    } else {
      color1 = color2 = color3 = tmplColor;
    }

    optionsMainColorPickers.color = color1;
    $mainColorPicker1.spectrum(optionsMainColorPickers);
    optionsMainColorPickers.color = color2;
    $mainColorPicker2.spectrum(optionsMainColorPickers);
    optionsMainColorPickers.color = color3;
    $mainColorPicker3.spectrum(optionsMainColorPickers);
  },
  getMainColors: function getMainColors() {
    var source = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'colorpicker';
    var palette = [];
    var mainColors = '';

    if (source == 'colorpicker') {
      var mainColor1 = jQuery('#acym__wysid__maincolor-colorpicker1').spectrum('get').toHexString();
      var mainColor2 = jQuery('#acym__wysid__maincolor-colorpicker2').spectrum('get').toHexString();
      var mainColor3 = jQuery('#acym__wysid__maincolor-colorpicker3').spectrum('get').toHexString();
      mainColors = mainColor1 + ',' + mainColor2 + ',' + mainColor3;
    } else {
      mainColors = jQuery('#main_colors').val();
    }

    if (mainColors.length > 0) {
      var colors = mainColors.split(',');
      colors.forEach(function (item) {
        palette.push([item]);
      });
    }

    if (acym_helper.empty(palette)) {
      palette = [['#fff'], ['#000']];
    }

    return palette;
  },
  setGeneralColorPickerWYSID: function setGeneralColorPickerWYSID() {
    var $template = jQuery('.acym__wysid__template__content');
    var $generalColorPicker = jQuery('#acym__wysid__background-colorpicker');
    var palette = acym_editorWysidColorPicker.getMainColors();
    /**
     * color: Add current template's background color in the color picker
     * move/change: Modify template's background color on move / change
     */

    $generalColorPicker.spectrum({
      color: $template.css('background-color'),
      preferredFormat: 'hex',
      showButtons: false,
      showInput: true,
      showPalette: true,
      palette: palette,
      maxSelectionSize: 1,
      move: function move(color) {
        acym_editorWysidFontStyle.saveAndApplyPropertyOnOneType('#acym__wysid__background-colorpicker', 'background-color', color.toHexString());
      },
      change: function change(color) {
        acym_editorWysidFontStyle.saveAndApplyPropertyOnOneType('#acym__wysid__background-colorpicker', 'background-color', color.toHexString());
      }
    });
  },
  setSettingsColorPickerWYSID: function setSettingsColorPickerWYSID() {
    var selectedHtmlElementType = acym_editorWysidFontStyle.currentlySelectedType;
    var colorHex = acym_editorWysidFontStyle.getPropertyOfOneType(selectedHtmlElementType, 'color');
    var palette = acym_editorWysidColorPicker.getMainColors();
    jQuery('#acym__wysid__right__toolbar__settings__color').spectrum({
      color: colorHex != '' ? colorHex : 'black',
      preferredFormat: 'hex',
      showButtons: false,
      showInput: true,
      showPalette: true,
      palette: palette,
      maxSelectionSize: 1,
      move: function move(color) {
        acym_editorWysidFontStyle.saveAndApplyPropertyOnOneType(selectedHtmlElementType, 'color', color.toHexString());
      },
      change: function change(color) {
        acym_editorWysidFontStyle.saveAndApplyPropertyOnOneType(selectedHtmlElementType, 'color', color.toHexString());
      }
    });
  }
};
var acym_editorWysidContextModal = {
  clickedOnRightToolbar: function clickedOnRightToolbar(event) {
    var $rightMenu = jQuery('#acym__wysid__right-toolbar');
    var offset = $rightMenu.offset();
    var left = Math.round(offset.left);
    var clickedBetweenLeftAndRightBorders = offset.left <= event.clientX && event.clientX <= left + $rightMenu.width();
    if (!clickedBetweenLeftAndRightBorders) return false;
    var tabIds = ['acym__wysid__right__toolbar__design__tab', 'acym__wysid__right__toolbar__settings__tab'];
    var clickedElement = jQuery(event.target);
    var clickedElementId = clickedElement.attr('id');

    if (clickedElementId) {
      // If the clicked element is one of the main tabs, return false
      return tabIds.indexOf(clickedElementId) === -1;
    } // If we clicked on an icon of the main tabs, return false


    if (clickedElement.closest('#acym__wysid__right__toolbar__design__tab').length === 1) return false;
    if (clickedElement.closest('#acym__wysid__right__toolbar__settings__tab').length === 1) return false; // We clicked between the left and right borders of the toolbar, and we didn't click on the design or settings tabs

    return true;
  },
  hideBlockOptions: function hideBlockOptions($contextModal, $element) {
    $contextModal.hide();
    jQuery('.acym__wysid__right__toolbar__current-block__empty').show();

    if ($element === undefined || !acym_editorWysidContextModal.isZoneOrBlock($element)) {
      jQuery('#acym__wysid__right__toolbar__design__tab').trigger('click');
    }
  },
  isZoneOrBlock: function isZoneOrBlock($element) {
    var isOpening = false;
    var classesOpeningContext = ['acymailing_content', 'acym__wysid__tinymce--image', 'acym__wysid__column__element__separator', 'acym__wysid__column__element__share', 'acym__wysid__column__element__follow', 'acy-editor__space', 'acym__wysid__column__element__button', 'acym__wysid__row__selector', 'acym__wysid__right__toolbar__tabs', 'acym__wysid__tinymce--text'];
    jQuery.each(classesOpeningContext, function (index, value) {
      if ($element.closest('.' + value).length > 0) isOpening = true;
    });
    return isOpening;
  },
  showBlockOptions: function showBlockOptions($blockOptions) {
    jQuery('.acym__wysid__context__modal').hide();
    jQuery('#acym__wysid__right__toolbar__block__tab').trigger('click');
    $blockOptions.show();
    jQuery('.acym__wysid__right__toolbar__current-block__empty').hide();
    jQuery('#acym__wysid__right__toolbar__current-block').off('mousedown').on('mousedown', function (event) {
      event.stopPropagation();
    });
  },
  setZoneOptions: function setZoneOptions() {
    jQuery('.acym__wysid__row__selector').off('click').on('click', function (e) {
      e.stopPropagation();
      e.preventDefault();
      var previousColor = '#ffffff';
      jQuery('.acym__wysid__row__selector--focus').removeClass('acym__wysid__row__selector--focus');
      jQuery('.acym__wysid__row__element--focus').removeClass('acym__wysid__row__element--focus');
      var $table = jQuery(this).closest('.acym__wysid__row__element');
      var $selector = jQuery(this);
      $selector.addClass('acym__wysid__row__selector--focus');
      $selector.closest('.acym__wysid__row__element').addClass('acym__wysid__row__element--focus');
      acym_editorWysidColorPicker.setColorPickerForContextModal(jQuery('#acym__wysid__context__block__background-color'), 'background-color', $table, $table, 'background-color');
      acym_editorWysidColorPicker.setColorPickerForContextModal(jQuery('#acym__wysid__context__block__border__color'), 'border-color', $table, $table, 'border-color');
      acym_editorWysidColorPicker.setRowColorPickerWYSID($table);
      acym_editorWysidImage.addBackgroundImgToRows($table);

      if ($table.css('background-color') === 'transparent') {
        jQuery('.acym__wysid__context__block__transparent__bg').trigger('click');
      }

      jQuery('[name="transparent_background"]').next().off('change').on('change', function () {
        if (jQuery(this).is(':checked')) {
          previousColor = $table.css('background-color');
          $table.css('background-color', 'transparent').attr('bgcolor', 'transparent');
        } else {
          $table.css('background-color', previousColor).attr('bgcolor', previousColor);
        }
      });
      acym_helperBlockSeparator.initBlockSeparator();
      var $idInput = jQuery('#acym__wysid__context__block__custom_id');
      $idInput.val($table.attr('id'));
      $idInput.off('keyup').on('keyup', function (event) {
        if (event.key === ' ') event.preventDefault();
        $table.attr('id', jQuery(this).val());
      });
      jQuery('[data-block-padding]').each(function () {
        jQuery(this).val($table.css('padding-' + jQuery(this).attr('data-block-padding')).replace(/[^-\d\.]/g, ''));
        jQuery(this).off('change').on('change', function (event) {
          $table.css('padding-' + jQuery(this).attr('data-block-padding'), jQuery(this).val() + 'px');

          if (jQuery(this).attr('data-block-padding') === 'top' || jQuery(this).attr('data-block-padding') === 'bottom') {
            $selector.css('height', $table.height() + parseInt($table.css('padding-top').replace(/[^-\d\.]/g, '')) + parseInt($table.css('padding-bottom').replace(/[^-\d\.]/g, '')) + 'px');
          }
        });
      });
      jQuery('.acym__wysid__context__block__border__actions').each(function () {
        jQuery(this).val($table.css(jQuery(this).attr('data-css')).replace(/[^-\d\.]/g, ''));
        jQuery(this).off('change').on('change', function (event) {
          if (jQuery(this).val() > parseInt(jQuery(this).attr('max'))) {
            jQuery(this).val(parseInt(jQuery(this).attr('max')));
            event.stopPropagation();
          }

          $table.css(jQuery(this).attr('data-css'), jQuery(this).val() + 'px');

          if (jQuery(this).attr('data-css') === 'border-width') {
            $table.css('border-style', jQuery(this).val() === 0 ? 'none' : 'solid');
            var offsetTemplate = jQuery('.acym__wysid__template__content').offset();
            var offsetTable = $selector.closest('.acym__wysid__row__element').offset();
            var heightSelector = $table.height() + parseInt($table.css('padding-top').replace(/[^-\d\.]/g, '')) + parseInt($table.css('padding-bottom').replace(/[^-\d\.]/g, '')) + parseInt($table.css('border-width').replace(/[^-\d\.]/g, '')) * 2;
            $selector.css({
              'left': '-' + (offsetTable.left - offsetTemplate.left + parseInt($selector.closest('.acym__wysid__row__element').css('border-width').replace(/[^-\d\.]/g, ''))) + 'px',
              'height': heightSelector,
              'top': 0 - parseInt($table.css('border-width').replace(/[^-\d\.]/g, '')) + 'px'
            });
          }
        });
      });
      jQuery('#acym__wysid__context__block__edit-html').off('click').on('click', function () {
        var event = new Event('editor_change');
        var contentInput = document.getElementById('acym__wysid__block__html__content');
        var $tbody = $table.find('> tbody');
        $tbody.find('.acym__wysid__element__toolbox').remove();
        contentInput.value = $tbody.html();
        contentInput.dispatchEvent(event);
        jQuery('#acym__wysid__editor__source, #acym__wysid__right-toolbar__overlay').addClass('acym__wysid__visible');
      });
      var $contextBlock = jQuery('#acym__wysid__context__block');
      acym_editorWysidContextModal.showBlockOptions($contextBlock);
      $contextBlock.off('mousedown').on('mousedown', function (event) {
        jQuery('.sp-container').addClass('sp-hidden').attr('style', '');
        event.stopPropagation();
      });
      jQuery(window).off('mousedown').on('mousedown', function (event) {
        if (acym_editorWysidContextModal.clickedOnRightToolbar(event)) return true;
        var target = jQuery(event.target);
        if (target.hasClass('acym__wysid__row__selector')) return true;
        if (jQuery('.sp-container').is(':visible')) return true;
        if (target.closest('#acym__wysid__editor__source').length > 0) return true;
        if (target.closest('#acym__wysid__modal').length > 0) return true;
        jQuery('#acym__wysid__editor__source, #acym__wysid__right-toolbar__overlay').removeClass('acym__wysid__visible');
        jQuery('.acym__wysid__row__selector--focus').removeClass('acym__wysid__row__selector--focus');
        jQuery('.acym__wysid__row__element--focus').removeClass('acym__wysid__row__element--focus');
        previousColor = '#ffffff';
        jQuery(this).off('mousedown');
        acym_editorWysidContextModal.hideBlockOptions($contextBlock, target);
        jQuery('.acym__wysid__context__modal__container--structure').hide();

        if (!target.parent().hasClass('acym__wysid__tinymce--text')) {
          acym_helperEditorWysid.setColumnRefreshUiWYSID(false);
        }

        acym_editorWysidVersioning.setUndoAndAutoSave();
      });
    });
  },
  showImageOptions: function showImageOptions($img) {
    var insertedImage = jQuery('.acym__wysid__media__inserted--selected');
    insertedImage.removeClass('acym__wysid__media__inserted--selected');
    $img.addClass('acym__wysid__media__inserted--selected');
    var $contextImage = jQuery('#acym__wysid__context__image');
    var $alignments = jQuery('.acym__wysid__context__image__align');
    var $linkInput = jQuery('#acym__wysid__context__image__link');
    var $urlInput = jQuery('#acym__wysid__context__image__url');
    var $altInput = jQuery('#acym__wysid__context__image__alt');
    var $titleInput = jQuery('#acym__wysid__context__image__title');
    var $captionInput = jQuery('#acym__wysid__context__image__caption');
    var $aTag = $img.closest('.acym__wysid__link__image');
    var $widthInput = jQuery('#acym__wysid__context__image__width');
    var $heightInput = jQuery('#acym__wysid__context__image__height'); // Initialize input value

    var $imgSelected = jQuery('.acym__wysid__media__inserted--selected');
    $widthInput.val(Math.trunc($imgSelected.width()));
    $heightInput.val(Math.trunc($imgSelected.height()));
    $alignments.css('background-color', 'inherit');
    jQuery('[data-float="' + insertedImage.css('float') + '"]').css('background-color', '');
    $alignments.each(function () {
      jQuery(this).off('click').on('click', function () {
        var $imgSelected = jQuery('.acym__wysid__media__inserted--selected');
        var cssToApply = acym_helper.parseJson(jQuery(this).attr('data-css'));
        var alignmentPosition = jQuery(this).attr('data-float') === 'none' ? 'center' : jQuery(this).attr('data-float');
        $imgSelected.css(cssToApply);
        $imgSelected.closest('div').find('.acym__wysid__media_caption').css(cssToApply);
        $imgSelected.closest('div').css('text-align', alignmentPosition);
        jQuery('.acym__wysid__context__image__align').css('background-color', 'inherit');
        jQuery(this).css('background-color', '');
      });
    });
    $linkInput.val($aTag.length > 0 ? $aTag.attr('href') : '');
    $urlInput.val($img.attr('src'));
    jQuery('#acym__wysid__context__image__change').off('click').on('click', function () {
      var $selectedImg = jQuery('.acym__wysid__media__inserted--selected');

      if ($selectedImg.hasClass('acym__wysid__media__giphy')) {
        acym_editorWysidNewContent.addGiphyWYSID($selectedImg.closest('.acym__wysid__column__element'));
      } else {
        acym_editorWysidImage.openMediaManager($selectedImg.closest('.acym__wysid__column__element'));
      }
    });
    $urlInput.off('keyup').on('keyup', function () {
      jQuery('.acym__wysid__media__inserted--selected').attr('src', this.value);
    });
    $altInput.val($img.attr('alt'));
    $altInput.off('keyup').on('keyup', function () {
      jQuery('.acym__wysid__media__inserted--selected').attr('alt', this.value);
    });
    $titleInput.val($img.attr('title'));
    $titleInput.off('keyup').on('keyup', function () {
      jQuery('.acym__wysid__media__inserted--selected').attr('title', this.value);
    });
    var $captionElement = $img.closest('div').find('.acym__wysid__media_caption');

    if ($captionElement.length === 1) {
      $captionInput.val($captionElement.text());
    } else {
      $captionInput.val('');
    }

    $captionInput.off('keyup').on('keyup', function () {
      var $selectedImg = jQuery('.acym__wysid__media__inserted--selected');
      var $captionElement = $selectedImg.closest('div').find('.acym__wysid__media_caption');

      if (this.value.length > 0) {
        if ($captionElement.length === 1) {
          $captionElement.text(this.value);
        } else {
          $selectedImg.closest('div').append(acym_editorWysidContextModal.getImageCaptionDiv(this.value));
        }
      } else if ($captionElement.length === 1) {
        $captionElement.remove();
      }
    });
    $linkInput.off('keyup').on('keyup', function () {
      var $selectedImg = jQuery('.acym__wysid__media__inserted--selected');
      var $link = $selectedImg.closest('.acym__wysid__link__image');

      if (this.value.length > 0) {
        if ($link.length === 1) {
          $link.attr('href', this.value);
        } else {
          $selectedImg.replaceWith('<a href="' + this.value + '" target="_blank" class="acym__wysid__link__image">' + $selectedImg.prop('outerHTML') + '</a>');
        }
      } else if ($link.length === 1) {
        $link.replaceWith($selectedImg.prop('outerHTML'));
      }
    });
    acym_editorWysidContextModal.showBlockOptions($contextImage);
    $contextImage.off('mousedown').on('mousedown', function (event) {
      event.stopPropagation();
    });
    jQuery('.acym_context_image_size_input').off('keydown').on('keydown', function (event) {
      if (event.key === ',' || event.key === '.') {
        event.preventDefault();
      }
    }).off('input').on('input', function (event) {
      jQuery('.mce-resizehandle').css('display', 'none');
      var $imgSelected = jQuery('.acym__wysid__media__inserted--selected');

      if (jQuery(event.target).is('#acym__wysid__context__image__height')) {
        $imgSelected.css('height', $heightInput.val());
      } else {
        $imgSelected.css('width', $widthInput.val());
        $heightInput.val(Math.trunc($imgSelected.height()));
      }
    });
    jQuery(window).off('mousedown').on('mousedown', function (event) {
      if (acym_editorWysidContextModal.clickedOnRightToolbar(event)) return true;
      if (jQuery(event.target).hasClass('acym__wysid__media__inserted')) return true;
      if (jQuery(event.target).closest('.media-modal').length > 0) return true;
      jQuery('.acym__wysid__media__inserted--selected').removeClass('acym__wysid__media__inserted--selected');
      jQuery(this).off('mousedown');
      var time = new Date().getTime();
      if (time < acym_helperEditorWysid.timeClickImage + 100) acym_editorWysidImage.doubleClickImage($img);
      acym_editorWysidContextModal.hideBlockOptions($contextImage, jQuery(event.target));
      acym_helperEditorWysid.setColumnRefreshUiWYSID();
      acym_editorWysidRowSelector.setZoneAndBlockOverlays();
    });
    jQuery(window).off('mouseup').on('mouseup', function (event) {
      if (!event.target.classList.contains('acym_context_image_size_input')) {
        var _$imgSelected = jQuery('.acym__wysid__media__inserted--selected');

        $widthInput.val(Math.trunc(_$imgSelected.width()));
        $heightInput.val(Math.trunc(_$imgSelected.height()));
      }
    });
  },
  getImageCaptionDiv: function getImageCaptionDiv(valueCaption) {
    return '<div class="acym__wysid__media_caption" ' + 'style="width: 100%; height: auto; box-sizing: border-box; padding: 0 5px; display:block;">' + acym_helper.escape(valueCaption) + '</div>';
  },
  showTextOptions: function showTextOptions() {
    var $contextText = jQuery('#acym__wysid__context__text'); // The context zone is already open

    if ($contextText.is(':visible')) {
      return true;
    }

    acym_editorWysidContextModal.showBlockOptions($contextText);
    jQuery(window).off('mousedown').on('mousedown', function (event) {
      if (acym_editorWysidContextModal.clickedOnRightToolbar(event)) return true;
      if (jQuery(event.target).closest('.acym__wysid__tinymce--text').length > 0) return true;
      if (jQuery(event.target).closest('#acym__wysid__text__tinymce__editor').length > 0) return true;
      if (jQuery(event.target).closest('.mce-floatpanel').length > 0) return true; // We clicked outside the text / editor options / dtext options so let's hide the dtext zone

      jQuery(this).off('mousedown');
      acym_editorWysidContextModal.hideBlockOptions($contextText, jQuery(event.target));
      jQuery(window).off('click');
      acym_helperEditorWysid.setColumnRefreshUiWYSID();
    });
  },
  setButtonOptions: function setButtonOptions() {
    jQuery('.acym__wysid__column__element__button').off('click').on('click', function (e) {
      e.stopPropagation();
      e.preventDefault();
      jQuery('.acym__context__color__picker').remove();
      jQuery('.acym__wysid__column__element__button--focus').removeClass('acym__wysid__column__element__button--focus');
      jQuery(this).addClass('acym__wysid__column__element__button--focus');
      if (!jQuery(this).hasClass('acym__wysid__content-no-settings-style')) jQuery(this).addClass('acym__wysid__content-no-settings-style');
      var $button = jQuery(this);
      acym_editorWysidColorPicker.setColorPickerForContextModal(jQuery('#acym__wysid__context__button__background-color'), 'background-color', $button, $button, 'background-color', false, true);
      acym_editorWysidColorPicker.setColorPickerForContextModal(jQuery('#acym__wysid__context__button__border-color'), 'border-left-color', $button, $button, 'border-color');
      acym_editorWysidColorPicker.setColorPickerForContextModal(jQuery('#acym__wysid__context__button__color'), 'color', $button, $button, 'color');
      var $inputLink = jQuery('.acym__wysid__context__button__link__container');
      var $inputText = jQuery('.acym__wysid__context__button__text__container');
      var $buttonsType = jQuery('.acym__wysid__context__button--type').addClass('button-radio-unselected').removeClass('button-radio-selected');

      if ($button.attr('href').indexOf('{confirm}') !== -1) {
        jQuery('[acym-data-type="confirm"]').removeClass('button-radio-unselected').addClass('button-radio-selected');
        $inputLink.hide();
      } else if ($button.attr('href').indexOf('{unsubscribe}') !== -1) {
        jQuery('[acym-data-type="unsubscribe"]').removeClass('button-radio-unselected').addClass('button-radio-selected');
        $inputLink.hide();
      } else {
        jQuery('[acym-data-type="call-action"]').removeClass('button-radio-unselected').addClass('button-radio-selected');
        $inputLink.show();
      }

      $buttonsType.off('click').on('click', function () {
        var $self = jQuery(this);
        if (!$self.hasClass('button-radio-unselected')) return;
        $buttonsType.addClass('button-radio-unselected').removeClass('button-radio-selected');
        $self.removeClass('button-radio-unselected').addClass('button-radio-selected');
        var linkType = $self.attr('acym-data-type');

        if (linkType.indexOf('call-action') !== -1) {
          $inputLink.find('#acym__wysid__context__button__link, .acym__wysid__context__button__link').val('#').trigger('change');
          $inputText.find('#acym__wysid__context__button__text').val(ACYM_JS_TXT.ACYM_BUTTON).trigger('change');
          $inputLink.show();
        } else {
          var dynamicLink = "{".concat(linkType, "}{/").concat(linkType, "}");
          $inputLink.find('#acym__wysid__context__button__link, .acym__wysid__context__button__link').val(dynamicLink).trigger('change');
          $inputText.find('#acym__wysid__context__button__text').val(ACYM_JS_TXT["ACYM_".concat(linkType.toUpperCase())]).trigger('change');
          $inputLink.hide();
        }
      });
      var $contextBtn = jQuery('#acym__wysid__context__button');
      jQuery('#acym__wysid__context__button__border-radius').val($button.css('border-radius').replace(/[^-\d\.]/g, '')).off('change paste keyup').on('change paste keyup', function () {
        $button.css('border-radius', jQuery(this).val() + 'px');
      });
      jQuery('#acym__wysid__context__button__border-width').val($button.css('border-left-width').replace(/[^-\d\.]/g, '')).off('change paste keyup').on('change paste keyup', function () {
        $button.css('border-width', jQuery(this).val() + 'px');
      });
      jQuery('#acym__wysid__context__button__font-family').val($button.css('font-family').replace(/['"]/g, '')).off('change').on('change', function () {
        $button.css('font-family', jQuery(this).val());
      });
      jQuery('#acym__wysid__context__button__font-size').val($button.css('font-size').replace(/[^-\d\.]/g, '')).off('change').on('change', function () {
        $button.css('font-size', jQuery(this).val() + 'px');
      });
      jQuery('#acym__wysid__context__button__text').val($button.text()).off('change paste keyup').on('change paste keyup', function () {
        $button.text(jQuery(this).val());
      });
      jQuery('#acym__wysid__context__button__link, .acym__wysid__context__button__link').val($button.attr('href')).off('change paste keyup').on('change paste keyup', function () {
        jQuery(this).val(jQuery(this).val().trim());
        $button.attr('href', jQuery(this).val());
      });
      jQuery('#acym__wysid__context__button__bold').css('background-color', $button.css('font-weight') == 700 ? '' : 'inherit').off('click').on('click', function () {
        if ($button.css('font-weight') == 700) {
          jQuery('#acym__wysid__context__button__bold').css('background-color', 'inherit');
          $button.css('font-weight', 'inherit');
        } else {
          jQuery('#acym__wysid__context__button__bold').css('background-color', '');
          $button.css('font-weight', 700);
        }
      });
      jQuery('#acym__wysid__context__button__italic').css('background-color', $button.css('font-style') === 'italic' ? '' : 'inherit').off('click').on('click', function () {
        if ($button.css('font-style') === 'italic') {
          jQuery('#acym__wysid__context__button__italic').css('background-color', 'inherit');
          $button.css('font-style', 'inherit');
        } else {
          jQuery('#acym__wysid__context__button__italic').css('background-color', '');
          $button.css('font-style', 'italic');
        }
      });
      jQuery('.acym__wysid__context__button__align').each(function () {
        jQuery(this).css('background-color', 'acym__wysid__context__button__align__' + $button.closest('div').css('text-align') === jQuery(this).attr('id') ? '' : 'inherit');
        jQuery(this).off('click').on('click', function () {
          $button.closest('div').css('text-align', jQuery(this).attr('data-align'));
          jQuery('.acym__wysid__context__button__align').css('background-color', 'inherit');
          jQuery(this).css('background-color', '');
        });
      });
      jQuery('.acym__button__padding__input').each(function () {
        jQuery(this).val($button.css(jQuery(this).attr('name')).replace(/[^-\d\.]/g, ''));
        jQuery(this).off('change').on('change', function () {
          $button.css(jQuery(this).attr('name'), jQuery(this).val() + 'px');
        });
      });

      if (ACYM_IS_ADMIN) {
        jQuery('#acym__wysid__context__button__font-family').select2({
          theme: 'foundation',
          width: '40%'
        });
        jQuery('#acym__wysid__context__button__font-size').select2({
          theme: 'foundation',
          width: '15%',
          minimumResultsForSearch: Infinity
        });
        jQuery('#acym__wysid__context__button__border-width').select2({
          theme: 'foundation',
          width: '15%',
          minimumResultsForSearch: Infinity
        });
        jQuery('#acym__wysid__context__button__border-radius').select2({
          theme: 'foundation',
          width: '15%',
          minimumResultsForSearch: Infinity
        });
      }

      $contextBtn.find('.switch-input').off('change');

      if (document.getElementsByClassName('acym__wysid__column__element__button--focus')[0].style.width === '100%' && !$contextBtn.find('.switch-input').is(':checked') || document.getElementsByClassName('acym__wysid__column__element__button--focus')[0].style.width !== '100%' && $contextBtn.find('.switch-input').is(':checked')) {
        $contextBtn.find('.switch-paddle').trigger('click');
      }

      var $sliders = $contextBtn.find('.slider-handle');
      $sliders.each(function () {
        var cssRule, value, percentage;

        if ('slider__output__button__width' === jQuery(this).attr('aria-controls')) {
          cssRule = 'left';
          value = $button.css('padding-right').replace(/[^-\d\.]/g, '');
          percentage = value * 90 / 100;
          jQuery(this).next().css('width', value + '%');
        } else {
          cssRule = 'top';
          value = $button.css('padding-top').replace(/[^-\d\.]/g, '');
          percentage = value * 77 / 100;
          jQuery(this).next().css('height', value + '%');
        }

        jQuery(this).css(cssRule, percentage + '%');
        jQuery('#' + jQuery(this).attr('aria-controls')).val(value);
      });
      $contextBtn.find('.switch-input').off('change').on('change', function () {
        var toggle, padding;

        if (jQuery(this).is(':checked')) {
          toggle = '100%';
          padding = '0';
        } else {
          toggle = 'auto';
          padding = jQuery('#slider__output__button__width').val() + 'px';
        }

        $button.css({
          'width': toggle,
          'padding-right': padding,
          'padding-left': padding
        });
      });
      jQuery('.acym__wysid__context__button__slider').off('moved.zf.slider').on('moved.zf.slider', function () {
        var value = jQuery('#' + jQuery(this).attr('data-output')).val();
        var cssRules = 'slider__output__button__width' !== jQuery(this).attr('data-output') ? {
          'padding-top': value + 'px',
          'padding-bottom': value + 'px'
        } : {
          'padding-right': value + 'px',
          'padding-left': value + 'px'
        };
        $button.css(cssRules);
      });
      acym_editorWysidContextModal.showBlockOptions($contextBtn);
      acym_helperTooltip.setTooltip();
      $contextBtn.off('mousedown').on('mousedown', function (event) {
        jQuery('.sp-container').addClass('sp-hidden').attr('style', '');
        event.stopPropagation();
      });
      jQuery(window).on('mousedown', function (event) {
        if (jQuery('.sp-container').is(':visible') || acym_editorWysidContextModal.clickedOnRightToolbar(event)) return;
        jQuery(window).off('mousedown');
        acym_editorWysidContextModal.hideBlockOptions($contextBtn, jQuery(event.target));
        acym_helperEditorWysid.setColumnRefreshUiWYSID();
      });
    });
  },
  setSpaceOptions: function setSpaceOptions() {
    jQuery('.acy-editor__space').off('click').on('click', function (event) {
      event.stopPropagation();
      jQuery('.acym__context__color__picker').remove();
      var $space = jQuery(this);
      var $contextSpace = jQuery('#acym__wysid__context__space');
      var $slideHandler = $contextSpace.find('.slider-handle');
      acym_editorWysidContextModal.showBlockOptions($contextSpace);
      var $tdParent = $space.closest('.acym__wysid__column__element__td');
      var heightSpace = $tdParent.css('height').replace(/[^-\d\.]/g, '');
      $space.css('height', '100%');
      $tdParent.css('height', heightSpace + 'px');
      $slideHandler.css('left', heightSpace + '%');
      $contextSpace.find('.slider-fill').css('width', heightSpace + '%');
      jQuery('#sliderOutput1').val(heightSpace);
      var $sliderSpace = jQuery('#acym__wysid__context__space__slider');
      $sliderSpace.off('moved.zf.slider').on('moved.zf.slider', function () {
        $tdParent.css('height', jQuery('#sliderOutput1').val() + 'px');
      });
      $sliderSpace.off('changed.zf.slider').on('changed.zf.slider', function () {
        acym_helperEditorWysid.setColumnRefreshUiWYSID(false);
      });
      $contextSpace.off('mousedown').on('mousedown', function (event) {
        $tdParent.css('height', jQuery('#sliderOutput1').val() + 'px');
        event.stopPropagation();
      });
      jQuery(window).on('mousedown', function (event) {
        if (acym_editorWysidContextModal.clickedOnRightToolbar(event)) return true;
        $tdParent.css('height', jQuery('#sliderOutput1').val() + 'px');
        jQuery(window).off('mousedown');
        acym_editorWysidContextModal.hideBlockOptions($contextSpace, jQuery(event.target));
        acym_helperEditorWysid.setColumnRefreshUiWYSID();
      });
    });
  },
  setFollowOptions: function setFollowOptions() {
    jQuery('.acym__wysid__column__element__follow').off('click').on('click', function (e) {
      e.stopPropagation();
      var $selectSocialSelect = jQuery('#acym__wysid__context__follow__select');
      jQuery('.acym__wysid__column__element__follow--focus').removeClass('acym__wysid__column__element__follow--focus');
      jQuery(this).addClass('acym__wysid__column__element__follow--focus');
      jQuery('#acym__wysid__context__follow__list').empty();
      $selectSocialSelect.html('<option></option>');
      var firstSocial = jQuery('.acym__wysid__column__element__follow--focus img').eq(0);
      var contextWidth;

      if (firstSocial.length) {
        var firstWidth = firstSocial.css('width').replace(/[^-\d\.]/g, '');

        if (firstWidth <= 80) {
          if (firstWidth >= 30) {
            contextWidth = firstWidth;
          } else {
            contextWidth = 30;
          }
        } else {
          contextWidth = 80;
        }
      } else {
        contextWidth = 40;
      }

      jQuery('#acym__wysid__context__social__width').val(contextWidth);
      var socialNetworks = acym_helper.parseJson(ACYM_SOCIAL_MEDIA);

      var _loop = function _loop(i, l) {
        var found = 0;
        jQuery('.acym__wysid__column__element__follow--focus a').each(function () {
          if (jQuery(this).attr('class').indexOf(socialNetworks[i]) !== -1) {
            var currentSocialNetwork = socialNetworks[i];
            found = 1;
            var content = '<div class="grid-x small-12 cell acym__wysid__context__follow__list__item">';
            content += '<div class="small-3 cell">';
            content += '<img style="height: auto;  box-sizing: border-box; width: 42px; padding: 5px; margin-left: 5px" src="' + acym_helperEditorWysid.socialMedia[currentSocialNetwork].src + '" alt="">';
            content += '</div>';
            content += '<div class="small-7 cell">';
            content += '<div class="input-group small-12 cell">';
            content += '<input class="input-group-field acym__wysid__context__button__link acym__wysid__context__button__link--' + currentSocialNetwork + '" type="text" placeholder="https://" value="' + jQuery(this).attr('href') + '">';
            content += '</div>';
            content += '</div>';
            content += '<div class="auto cell">';
            content += '<p class="acym__wysid__context__follow__list__remove acym__wysid__context__follow__list__remove--' + currentSocialNetwork + '" aria-hidden="true">×</p>';
            content += '</div>';
            content += '</div>';
            jQuery('#acym__wysid__context__follow__list').append(content);
            jQuery('.acym__wysid__context__follow__list__remove--' + currentSocialNetwork).off('click').on('click', function () {
              var $elementFollow = jQuery('.acym__wysid__column__element__follow--focus');
              $elementFollow.find('.acym__wysid__column__element__follow__' + currentSocialNetwork).remove();
              jQuery(this).closest('.acym__wysid__context__follow__list__item').remove();
              acym_editorWysidContextModal.setFollowOptions();
              $elementFollow.trigger('click');
            });
            jQuery('.acym__wysid__context__button__link--' + currentSocialNetwork).off('change paste keyup').on('change paste keyupe', function () {
              jQuery('.acym__wysid__column__element__follow--focus').find('.acym__wysid__column__element__follow__' + currentSocialNetwork).attr('href', jQuery(this).val());
            });
          }
        });

        if (found == 0) {
          $selectSocialSelect.append(new Option(ACYM_IS_ADMIN ? '' : socialNetworks[i], socialNetworks[i], false, false)).trigger('change');
        }
      };

      for (var i = 0, l = socialNetworks.length; i < l; i++) {
        _loop(i, l);
      }

      var $follow = jQuery(this);
      var width = $follow.innerWidth();
      var $contextFollow = jQuery('#acym__wysid__context__follow');
      jQuery('.acym__wysid__context__follow__align').each(function () {
        jQuery(this).css('background-color', 'acym__wysid__context__follow__align__' + $follow.css('text-align') === jQuery(this).attr('id') ? '' : 'inherit');
        jQuery(this).off('click').on('click', function () {
          var alignement = jQuery(this).attr('data-align');
          $follow.css('text-align', alignement);

          if (alignement === 'center') {
            $follow.find('img').removeAttr('align').removeAttr('hspace');
          } else {
            $follow.find('img').attr('align', alignement).attr('hspace', '3');
          }

          jQuery('.acym__wysid__context__follow__align').css('background-color', 'inherit');
          jQuery(this).css('background-color', '');
        });
      });
      acym_editorWysidContextModal.showBlockOptions($contextFollow);

      if (ACYM_IS_ADMIN) {
        $selectSocialSelect.select2({
          theme: 'foundation',
          minimumResultsForSearch: -1,
          placeholder: '+',
          selectOnClose: false,
          closeOnSelect: true,
          width: '50px',
          templateResult: acym_editorWysidContextModal.getFollowDataFormatWYSID,
          templateSelection: acym_editorWysidContextModal.getFollowDataFormatWYSID
        });
        $selectSocialSelect.off('select2:select').on('select2:select', function (e) {
          var selectedNetwork = e.params.data.id;
          acym_editorWysidContextModal.addContentFollowContext(jQuery('.acym__wysid__column__element__follow--focus'), selectedNetwork);
        });
      } else {
        $selectSocialSelect.off('change').on('change', function () {
          acym_editorWysidContextModal.addContentFollowContext(jQuery('.acym__wysid__column__element__follow--focus'), jQuery(this).val());
        });
      }

      $contextFollow.off('mousedown').on('mousedown', function (event) {
        event.stopPropagation();
      });
      jQuery(window).on('mousedown', function (event) {
        if (acym_editorWysidContextModal.clickedOnRightToolbar(event)) return true;
        jQuery(window).off('mousedown');
        acym_editorWysidContextModal.hideBlockOptions($contextFollow, jQuery(event.target));
        acym_helperEditorWysid.setColumnRefreshUiWYSID();
      });
      jQuery('#acym__wysid__context__social__width__slider').off('moved.zf.slider').on('moved.zf.slider', function () {
        var followIconsWidth = jQuery('#acym__wysid__context__social__width').val();
        if (followIconsWidth > 80) followIconsWidth = 80;
        if (followIconsWidth < 30) followIconsWidth = 30;
        jQuery('.acym__wysid__column__element__follow--focus img').css('width', followIconsWidth).attr('width', followIconsWidth);
      });
    });
    jQuery('.acym__wysid__column__element__follow a').off('click').on('click', function (event) {
      event.preventDefault();
    });
  },
  setBuiltWithOptions: function setBuiltWithOptions() {
    jQuery('#acym__powered_by_acymailing').off('click').on('click', function (e) {
      e.stopPropagation();
      e.preventDefault();
      var $contextPoweredBy = jQuery('#acym__wysid__context__poweredby');
      acym_editorWysidContextModal.showBlockOptions($contextPoweredBy);
      jQuery(window).off('mousedown').on('mousedown', function (event) {
        if (acym_editorWysidContextModal.clickedOnRightToolbar(event)) return true;

        if (event.target.title !== 'poweredby' && jQuery(event.target).children().children('[title="poweredby"]').length === 0) {
          jQuery(this).off('mousedown');
          acym_editorWysidContextModal.hideBlockOptions($contextPoweredBy, jQuery(event.target));
          jQuery('.acym__wysid__context__modal__container--structure').hide();
          acym_editorWysidVersioning.setUndoAndAutoSave();
        }
      });
    });
  },
  getFollowDataFormatWYSID: function getFollowDataFormatWYSID(data) {
    if (!data.id) {
      return data.text;
    }

    return jQuery('<span><img src="' + acym_helperEditorWysid.socialMedia[data.element.value.toLowerCase()].src + '"/>' + data.text + '</span>');
  },
  addContentFollowContext: function addContentFollowContext($followContainer, selectedNetwork) {
    if ('' === selectedNetwork) return;
    var $contextSocial = jQuery('#acym__wysid__context__social__width');
    var width = $contextSocial.val() <= 80 ? $contextSocial.val() >= 30 ? $contextSocial.val() : 30 : 80;
    var content = '<a class="acym__wysid__column__element__follow__' + selectedNetwork + '" href="">';
    content += '<img style="display: inline-block; max-width: 100%; height: auto; box-sizing: border-box; width: ' + width + 'px; padding: 3px;" src="' + acym_helperEditorWysid.socialMedia[selectedNetwork].src + '" width="' + width + '" alt="' + selectedNetwork + '">';
    content += '</a>';
    $followContainer.append(content);
    acym_editorWysidContextModal.setFollowOptions();
    $followContainer.trigger('click');
  },
  setSeparatorOptions: function setSeparatorOptions() {
    jQuery('.acym__wysid__column__element__separator').off('click').on('click', function (e) {
      e.stopPropagation();
      jQuery('.acym__context__color__picker').remove(); //We get the hr to change

      var $hr = jQuery(this).find('hr:first');
      jQuery('#sliderOutput2').val($hr.css('border-bottom-width').replace(/[^-\d\.]/g, ''));
      var leftSlider2 = $hr.css('border-bottom-width').replace(/[^-\d\.]/g, '') + '%';
      jQuery('[aria-controls="sliderOutput2"]').css('left', leftSlider2).next().css('width', leftSlider2);
      var leftSlider3 = Math.round($hr.width() * 100 / $hr.parent().width());
      jQuery('#sliderOutput3').val(leftSlider3);
      leftSlider3 += '%';
      jQuery('[aria-controls="sliderOutput3"]').css('left', leftSlider3).next().css('width', leftSlider3);
      var leftSlider4 = $hr.css('margin-top').replace(/[^-\d\.]/g, '');
      leftSlider4 = parseInt(leftSlider4) * 100 / 50 + '%';
      jQuery('#sliderOutput4').val($hr.css('margin-top').replace(/[^-\d\.]/g, ''));
      jQuery('[aria-controls="sliderOutput4"]').css('left', leftSlider4).next().css('width', leftSlider4);
      var $colorInput = jQuery('#acym__wysid__context__separator__color'); //We set the color picker of the separator

      acym_editorWysidColorPicker.setColorPickerForContextModal($colorInput, 'border-bottom-color', $hr, $hr, 'border-bottom-color');
      $colorInput.off('change').on('change', function () {
        $hr.css('color', this.value);
      });
      var $allType = jQuery('.acym__wysid__context__separator__kind');
      $allType.removeClass('separator-selected');
      $allType.each(function () {
        if (jQuery(this).find('hr').attr('data-kind') == $hr.css('border-bottom-style')) {
          jQuery(this).addClass('separator-selected');
        }
      });
      $allType.off('click').on('click', function () {
        $allType.removeClass('separator-selected');
        jQuery(this).addClass('separator-selected');
        $hr.css('border-bottom-style', jQuery(this).find('hr').attr('data-kind'));
      });
      var $slider = jQuery('#acym__wysid__context__separator__slide');
      var $sliderWidth = jQuery('#acym__wysid__context__separator__slide__width');
      var $sliderSpace = jQuery('#acym__wysid__context__separator__slide__space');
      $slider.off('moved.zf.slider').on('moved.zf.slider', function () {
        if ($slider.css('display') !== 'none') {
          $hr.css('border-bottom-width', jQuery('#sliderOutput2').val() + 'px');
          $hr.css('size', jQuery('#sliderOutput2').val() + 'px');
        }
      });
      $sliderWidth.off('moved.zf.slider').on('moved.zf.slider', function () {
        if ($slider.css('display') !== 'none') {
          $hr.css('width', jQuery('#sliderOutput3').val() + '%');
        }
      });
      $sliderSpace.off('moved.zf.slider').on('moved.zf.slider', function () {
        if ($slider.css('display') !== 'none') {
          var $spaceVal = jQuery('#sliderOutput4').val();
          $hr.css('margin-top', $spaceVal + 'px');
          $hr.css('margin-bottom', $spaceVal + 'px');
        }
      });
      var $contextSeparator = jQuery('#acym__wysid__context__separator');
      acym_editorWysidContextModal.showBlockOptions($contextSeparator);
      $contextSeparator.off('mousedown').on('mousedown', function (event) {
        jQuery('.sp-container').addClass('sp-hidden').attr('style', '');
        event.stopPropagation();
      });
      jQuery(window).on('mousedown', function (event) {
        if (jQuery('.sp-container').is(':visible') || acym_editorWysidContextModal.clickedOnRightToolbar(event)) return;
        jQuery(window).off('mousedown');
        acym_editorWysidContextModal.hideBlockOptions($contextSeparator, jQuery(event.target));
        $colorInput.off('change');
        acym_helperEditorWysid.setColumnRefreshUiWYSID();
      });
    });
  }
};
var acym_editorWysidDragDrop = {
  currentTimeout: null,
  instance: null,
  autoScrollInterval: null,
  setNewZoneDraggable: function setNewZoneDraggable() {
    jQuery('.acym__wysid__zone__element--new').draggable({
      cursor: 'move',
      //Cursor appearance during drag
      helper: 'clone',
      //Clone the element that has been dragged instead of directly dragging it,
      cursorAt: {
        top: 20,
        left: 50
      },
      //Cursor position when you start to drag an element
      connectToSortable104: '.acym__wysid__row',
      //Allows the drag element to be dropped onto this sortable
      revertDuration: 300,
      revert: function revert(isValidDrop) {
        //If you drop an element on an invalid position, it returns to its first place with an animation.
        if (!isValidDrop) {
          acym_editorWysidRowSelector.showOverlays();
          return true;
        }
      },
      start: function start(event, ui) {
        jQuery(ui.helper).css({
          'width': jQuery(this).width() + 'px',
          'opacity': 1
        });
        acym_editorWysidRowSelector.hideOverlays();
      }
    }); // Handle custom zone deletion

    jQuery('.acym__wysid__zone__element--new .acymicon-delete').off('click').on('click', function () {
      if (!acym_helper.confirm(ACYM_JS_TXT.ACYM_CONFIRM_DELETION_ZONE)) return;
      var customZone = jQuery(this).closest('.acym__wysid__zone__element--new');
      var data = {
        ctrl: 'zones',
        task: 'delete',
        zoneId: customZone.attr('data-acym-zone-id')
      };
      acym_helper.post(ACYM_AJAX_URL, data).then(function (response) {
        if (response.error) {
          acym_editorWysidNotifications.addEditorNotification({
            'message': '<div class="cell auto acym__autosave__notification">' + response.message + '</div>',
            'level': 'error'
          }, 3000, true);
        } else {
          customZone.remove();
        }
      });
    });
  },
  setZonesSortable: function setZonesSortable() {
    jQuery('.acym__wysid__row').sortable({
      axis: 'y',
      //If defined, the items can be dragged only horizontally or vertically
      cursorAt: {
        top: 20
      },
      //Cursor position when you start to drag an element
      scroll: true,
      //If set to true, the page scrolls when coming to an edge
      placeholder: 'acym__wysid__row__element--placeholder',
      //A class name that gets applied to the otherwise white space
      handle: '.acym__wysid__row__element__toolbox__move',
      //Restricts sort start click to this element
      forcePlaceholderSize: true,
      //Forces the placeholder to have a size
      tolerance: 'intersect',
      //Specifies which mode to use for testing whether the item being moved is hovering over another item
      start: function start(event, ui) {
        ui.helper.first().addClass('acym__wysid__row__element--sortable');
        jQuery(ui.placeholder).css({
          'height': '75px'
        });
        acym_editorWysidRowSelector.hideOverlays();
      },
      stop: function stop(event, ui) {
        jQuery('.acym__wysid__row__element--sortable').removeClass('acym__wysid__row__element--sortable'); // Replace the dropped item with the desired zone type

        var $item = ui.item;

        if ($item.hasClass('acym__wysid__zone__element--new--1')) {
          acym_editorWysidNewRow.addRow1WYSID($item);
        } else if ($item.hasClass('acym__wysid__zone__element--new--2')) {
          acym_editorWysidNewRow.addRow2WYSID($item);
        } else if ($item.hasClass('acym__wysid__zone__element--new--3')) {
          acym_editorWysidNewRow.addRow3WYSID($item);
        } else if ($item.hasClass('acym__wysid__zone__element--new--4')) {
          acym_editorWysidNewRow.addRow4WYSID($item);
        } else if ($item.hasClass('acym__wysid__zone__element--new--5')) {
          acym_editorWysidNewRow.addRow5WYSID($item);
        } else if ($item.hasClass('acym__wysid__zone__element--new--6')) {
          acym_editorWysidNewRow.addRow6WYSID($item);
        } else {
          var zoneId = $item.attr('data-acym-zone-id');

          if (zoneId && zoneId.length > 0) {
            acym_editorWysidNewRow.addCustomRow($item);
          }
        }

        acym_editorWysidRowSelector.setZoneAndBlockOverlays();
        acym_helperEditorWysid.setColumnRefreshUiWYSID();
      },
      receive: function receive(event, ui) {
        ui.helper.remove();
      }
    });
  },
  setNewBlockDraggable: function setNewBlockDraggable() {
    jQuery('.acym__wysid__block__element--new').draggable({
      cursor: 'move',
      //Cursor appearance during drag
      helper: 'clone',
      //Clone the element that has been dragged instead of directly dragging it
      cursorAt: {
        top: 12,
        left: 40
      },
      //Cursor position when you start to drag an element
      connectToSortable104: '.acym__wysid__column > tbody',
      //Allows the drag element to be dropped onto this sortable
      revertDuration: 300,
      revert: function revert(isValidDrop) {
        //If you drop an element on an invalid position, it returns to its first place with an animation.
        if (!isValidDrop) {
          acym_editorWysidRowSelector.showOverlays();
          return true;
        }
      },
      start: function start(event, ui) {
        jQuery(ui.helper).css({
          'width': jQuery(this).width() + 'px',
          'opacity': 1
        });
        jQuery('.acym__wysid__column').addClass('acym__wysid__column--drag-start');
        acym_editorWysidRowSelector.hideOverlays();
        acym_editorWysidDragDrop.showDropHereMessage();
      },
      stop: function stop() {
        jQuery('.acym__wysid__column').removeClass('acym__wysid__column--drag-start');
        acym_editorWysidDragDrop.hideDropHereMessage();
      }
    });
  },
  setBlocksSortable: function setBlocksSortable() {
    jQuery('.acym__wysid__column tbody').sortable({
      scroll: true,
      //If set to true, the page scrolls when coming to an edge
      handle: '.acym__wysid__column__element__toolbox__move',
      //Restricts sort start click to this element
      placeholder: 'acym__wysid__column__element--placeholder',
      //A class name that gets applied to the otherwise white space
      forcePlaceholderSize: true,
      //Forces the placeholder to have a size
      cursorAt: {
        top: 20,
        left: 50
      },
      //Cursor position when you start to drag an element
      start: function start() {
        jQuery('.acym__wysid__column__element--placeholder').html('');
        acym_editorWysidRowSelector.hideOverlays();
      },
      stop: function stop(event, ui) {
        var $defaultStart = jQuery('#acym__wysid__default');
        $defaultStart.closest('.columns').height('auto').find('table').height('auto').find('tbody').height('auto');
        $defaultStart.remove();
        jQuery('.acym__wysid__column__first').removeClass('acym__wysid__column__first'); // Replace dropped item by the correct block

        var $item = ui.item;
        var replacement = '';
        var plugin = $item.attr('data-plugin');

        if (plugin) {
          acym_helperEditorWysid.$focusElement = jQuery($item);
          acym_editorWysidDynamic.openDContentOptions(plugin, acym_helperEditorWysid.$focusElement.attr('data-dynamic'));
        } else if ($item.hasClass('acym__wysid__block__element--new--title')) {
          replacement = acym_editorWysidNewContent.addTitleWYSID();
        } else if ($item.hasClass('acym__wysid__block__element--new--text')) {
          replacement = acym_editorWysidNewContent.addTextWYSID();
        } else if ($item.hasClass('acym__wysid__block__element--new--button')) {
          replacement = acym_editorWysidNewContent.addButtonWYSID();
        } else if ($item.hasClass('acym__wysid__block__element--new--space')) {
          replacement = acym_editorWysidNewContent.addSpaceWYSID();
        } else if ($item.hasClass('acym__wysid__block__element--new--follow')) {
          replacement = acym_editorWysidNewContent.addFollowWYSID();
        } else if ($item.hasClass('acym__wysid__block__element--new--separator')) {
          replacement = acym_editorWysidNewContent.addSeparatorWysid();
        } else if ($item.hasClass('acym__wysid__block__element--new--picture')) {
          acym_editorWysidNewContent.addMediaWysid($item);
        } else if ($item.hasClass('acym__wysid__block__element--new--video')) {
          acym_editorWysidNewContent.addVideoWYSID($item);
        } else if ($item.hasClass('acym__wysid__block__element--new--giphy')) {
          acym_editorWysidNewContent.addGiphyWYSID($item);
        } else {
          // When we move a block that was already inside the email has been moved
          replacement = 'existing';
        }

        if (replacement.length > 0) {
          if (replacement !== 'existing') {
            jQuery($item).replaceWith(replacement);
            acym_helperEditorWysid.setColumnRefreshUiWYSID();
            acym_editorWysidRowSelector.setZoneAndBlockOverlays();

            if (replacement.indexOf('acym__wysid__column__element__button') !== -1) {
              acym_editorWysidContextModal.setButtonOptions();
            } else if (replacement.indexOf('acy-editor__space') !== -1) {
              acym_editorWysidContextModal.setSpaceOptions();
            } else if (replacement.indexOf('acym__wysid__column__element__follow') !== -1) {
              acym_editorWysidContextModal.setFollowOptions();
            } else if (replacement.indexOf('acym__wysid__row__separator') !== -1) {
              acym_editorWysidContextModal.setSeparatorOptions();
            } else if (replacement.indexOf('acym__wysid__tinymce--text') !== -1 || replacement.indexOf('acym__wysid__tinymce--image') !== -1) {
              acym_editorWysidTinymce.addTinyMceWYSID();
            }
          } else {
            acym_helperEditorWysid.setColumnRefreshUiWYSID();
            acym_editorWysidRowSelector.setZoneAndBlockOverlays();

            if (jQuery($item).find('.acym__wysid__column__element__button').length > 0) {
              acym_editorWysidContextModal.setButtonOptions();
            } else if (jQuery($item).find('.acy-editor__space').length > 0) {
              acym_editorWysidContextModal.setSpaceOptions();
            } else if (jQuery($item).find('.acym__wysid__column__element__follow').length > 0) {
              acym_editorWysidContextModal.setFollowOptions();
            } else if (jQuery($item).find('.acym__wysid__row__separator').length > 0) {
              acym_editorWysidContextModal.setSeparatorOptions();
            } else if (jQuery($item).find('.acym__wysid__tinymce--text').length > 0 || jQuery($item).find('.acym__wysid__tinymce--image').length > 0) {
              acym_editorWysidTinymce.addTinyMceWYSID();
            }
          }

          acym_editorWysidFontStyle.applyCssOnAllElementTypesBasedOnSettings();
        }
      },
      receive: function receive(event, ui) {
        // When we move a block that was already in the email, a copy of the block is dropped
        if (!ui.item.hasClass('acym__wysid__block__element--new')) {
          // We then remove the original block
          ui.item.remove();
          jQuery('.acym__wysid__column__element--helper').remove();
          acym_editorWysidRowSelector.showOverlays();
        } else {
          ui.helper.remove();
        }
      }
    });
  },
  showDropHereMessage: function showDropHereMessage() {
    // acym__wysid__default is the default zone with the "Your template is empty!" message
    if (!jQuery('#acym__wysid__default').length) return;
    jQuery('#acym__wysid__default__start').hide();
    var $startDragging = jQuery('#acym__wysid__default__dragging');
    var draggingMessageHeight = $startDragging.height();
    $startDragging.show();
    $startDragging.closest('#acym__wysid__default').attr('height', 'auto').closest('.columns').height(draggingMessageHeight).find('table').height(draggingMessageHeight).find('tbody').height(draggingMessageHeight);
  },
  hideDropHereMessage: function hideDropHereMessage() {
    // acym__wysid__default is the default zone with the "Your template is empty!" message
    var $default = jQuery('#acym__wysid__default');
    if ($default.length === 0) return;
    $default.find('#acym__wysid__default__dragging').hide();
    $default.find('#acym__wysid__default__start').show();
    var $startDefault = jQuery('#acym__wysid__default__start');
    var startMessageHeight = $startDefault.height();
    $startDefault.closest('#acym__wysid__default').attr('height', 'auto').closest('.columns').height(startMessageHeight).find('table').height(startMessageHeight).find('tbody').height(startMessageHeight);
  },
  setBlocksDraggable: function setBlocksDraggable() {
    jQuery('.acym__wysid__column__element').draggable({
      cursor: 'move',
      //Cursor appearance during drag*/
      helper: 'clone',
      //Clone the element that has been dragged instead of directly dragging it
      revert: 'invalid',
      //If you drop an element on an invalid position, it returns to its first place with an animation
      handle: '.acym__wysid__column__element__toolbox__move',
      //Restricts sort start click to this element
      cursorAt: {
        top: 20,
        left: 50
      },
      //Cursor position when you start to drag an element
      connectToSortable104: '.acym__wysid__column tbody',
      //Allows the drag element to be dropped onto this sortables
      revertDuration: 300,
      start: function start(event, ui) {
        ui.helper.first().addClass('acym__wysid__column__element--helper');
        jQuery(this).addClass('acym__wysid__column__element__original--helper');
        jQuery('.acym__wysid__column').addClass('acym__wysid__column--drag-start');
        acym_editorWysidRowSelector.hideOverlays();
      },
      stop: function stop() {
        jQuery('.acym__wysid__column__element--helper').removeClass('acym__wysid__column__element--helper');
        jQuery('.acym__wysid__column__element__original--helper').removeClass('acym__wysid__column__element__original--helper');
        jQuery('.acym__wysid__column').removeClass('acym__wysid__column--drag-start');
        jQuery('.acym__wysid__column__element').css({
          'position': 'relative',
          'top': 'inherit',
          'left': 'inherit',
          'right': 'inherit',
          'bottom': 'inherit',
          'height': 'auto'
        });
        acym_editorWysidRowSelector.showOverlays();
      }
    });
  },
  setFixJquerySortableWYSID: function setFixJquerySortableWYSID() {
    var uiSortable;
    jQuery.ui.plugin.add('draggable', 'connectToSortable104', {
      start: function start(event, ui, draggable) {
        acym_editorWysidDragDrop.instance = jQuery(this).data('ui-draggable');
        acym_editorWysidDragDrop.instance.sortables = [];
        jQuery(draggable.options.connectToSortable104).each(function () {
          var sortable = jQuery(this).sortable('instance');
          if (!sortable || sortable.options.disabled) return;
          acym_editorWysidDragDrop.instance.sortables.push({
            instance: sortable,
            shouldRevert: sortable.options.revert
          }); // Call the sortable's refreshPositions at drag start to refresh the containerCache since the sortable container cache is used in drag
          // and needs to be up to date (this will ensure it's initialised as well as being kept in step with any changes that might have happened on the page).

          sortable.refreshPositions();

          sortable._trigger('activate', event, uiSortable);
        });
        acym_editorWysidDragDrop.refreshSortablesInstances(draggable, uiSortable);
      },
      drag: function drag(event, ui, draggable) {
        acym_editorWysidDragDrop.handleAutoScroll(event);
        var that = this; // instance.sortables = an array of the zones that currently exist in the email

        jQuery.each(acym_editorWysidDragDrop.instance.sortables, function () {
          var innermostIntersecting = false;
          var thisSortable = this; //Copy over some variables to allow calling the sortable's native _intersectsWith

          this.instance.positionAbs = acym_editorWysidDragDrop.instance.positionAbs;
          this.instance.helperProportions = acym_editorWysidDragDrop.instance.helperProportions;
          this.instance.offset.click = acym_editorWysidDragDrop.instance.offset.click;

          if (this.instance._intersectsWith(this.instance.containerCache)) {
            innermostIntersecting = true;
            jQuery.each(acym_editorWysidDragDrop.instance.sortables, function () {
              this.instance.positionAbs = acym_editorWysidDragDrop.instance.positionAbs;
              this.instance.helperProportions = acym_editorWysidDragDrop.instance.helperProportions;
              this.instance.offset.click = acym_editorWysidDragDrop.instance.offset.click;

              if (this !== thisSortable && this.instance._intersectsWith(this.instance.containerCache) && jQuery.contains(thisSortable.instance.element[0], this.instance.element[0])) {
                innermostIntersecting = false;
              }

              return innermostIntersecting;
            });
          }

          if (innermostIntersecting) {
            //If it intersects, we use a little isOver variable and set it once, so our move-in stuff gets fired only once
            if (!this.instance.isOver) {
              this.instance.isOver = 1; //Now we fake the start of dragging for the sortable instance,
              //by cloning the list group item, appending it to the sortable and using it as inst.currentItem
              //We can then fire the start event of the sortable with our passed browser event, and our own helper (so it doesn't create a new one)

              this.instance.currentItem = jQuery(that).clone().removeAttr('id').appendTo(this.instance.element).data('ui-sortable-item', true); //Store helper option to later restore it

              this.instance.options._helper = this.instance.options.helper;
              event.target = this.instance.currentItem[0];

              this.instance._mouseCapture(event, true);

              this.instance._mouseStart(event, true, true); //Because the browser event is way off the new appended portlet, we modify a couple of variables to reflect the changes


              this.instance.offset.click.top = acym_editorWysidDragDrop.instance.offset.click.top;
              this.instance.offset.click.left = acym_editorWysidDragDrop.instance.offset.click.left;
              this.instance.offset.parent.top -= acym_editorWysidDragDrop.instance.offset.parent.top - this.instance.offset.parent.top;
              this.instance.offset.parent.left -= acym_editorWysidDragDrop.instance.offset.parent.left - this.instance.offset.parent.left;

              acym_editorWysidDragDrop.instance._trigger('toSortable', event); //draggable revert needs that


              acym_editorWysidDragDrop.instance.dropped = this.instance.element; //hack so receive/update callbacks work (mostly)

              acym_editorWysidDragDrop.instance.currentItem = acym_editorWysidDragDrop.instance.element;
              this.instance.fromOutside = acym_editorWysidDragDrop.instance;
            } //Provided we did all the previous steps, we can fire the drag event of the sortable on every draggable drag, when it intersects with the sortable


            if (this.instance.currentItem) {
              this.instance._mouseDrag(event);
            }
          } else {
            //If it doesn't intersect with the sortable, and it intersected before,
            //we fake the drag stop of the sortable, but make sure it doesn't remove the helper by using cancelHelperRemoval
            if (!this.instance.isOver) return;
            this.instance.isOver = 0;
            this.instance.cancelHelperRemoval = true; //Prevent reverting on this forced stop

            this.instance.options.revert = false; //The out event needs to be triggered independently

            this.instance._trigger('out', event, this.instance._uiHash(this.instance));

            this.instance._mouseStop(event, true);

            this.instance.options.helper = this.instance.options._helper; //Now we remove our currentItem, the list group clone again, and the placeholder, and animate the helper back to its original size

            this.instance.currentItem.remove();

            if (this.instance.placeholder) {
              this.instance.placeholder.remove();
            }

            acym_editorWysidDragDrop.instance._trigger('fromSortable', event); //draggable revert needs that


            acym_editorWysidDragDrop.instance.dropped = false;
          }
        });
      },
      stop: function stop(event, ui, draggable) {
        acym_editorWysidDragDrop.stopAutoScroll(); //If we are still over the sortable, we fake the stop event of the sortable, but also remove helper

        jQuery.each(acym_editorWysidDragDrop.instance.sortables, function () {
          if (this.instance.isOver) {
            this.instance.isOver = 0; // Don't remove the helper in the draggable instance

            acym_editorWysidDragDrop.instance.cancelHelperRemoval = true; // Remove it in the sortable instance (so sortable plugins like revert still work)

            this.instance.cancelHelperRemoval = false; // The sortable revert is supported, and we have to set a temporary dropped variable on the draggable to support revert: "valid/invalid"

            if (this.shouldRevert) {
              this.instance.options.revert = this.shouldRevert;
            } // Trigger the stop of the sortable


            this.instance._mouseStop(event);

            this.instance.options.helper = this.instance.options._helper; // If the helper has been the original item, restore properties in the sortable

            if (acym_editorWysidDragDrop.instance.options.helper === 'original') {
              this.instance.currentItem.css({
                top: 'auto',
                left: 'auto'
              });
            }
          } else {
            // Remove the helper in the sortable instance
            this.instance.cancelHelperRemoval = false;

            this.instance._trigger('deactivate', event, uiSortable);
          }
        });
      }
    });
  },
  handleAutoScroll: function handleAutoScroll(event) {
    var editorContainer = document.getElementById('acym__wysid__template');
    var containerPositionOnScreen = editorContainer.getBoundingClientRect();
    var editorTop = containerPositionOnScreen.top;
    var editorBottom = containerPositionOnScreen.bottom;
    var scrollTopLimit = (editorBottom - editorTop) / 10 + editorTop;
    var scrollBottomLimit = (editorBottom - editorTop) / 10 * 9 + editorTop;
    var mouseVerticalPositionOnScreen = event.clientY;

    if (mouseVerticalPositionOnScreen > editorTop && mouseVerticalPositionOnScreen < scrollTopLimit) {
      if (!acym_editorWysidDragDrop.autoScrollInterval) {
        acym_editorWysidDragDrop.autoScrollInterval = setInterval(function () {
          if (editorContainer.scrollTop === 0) {
            acym_editorWysidDragDrop.stopAutoScroll();
            return;
          }

          editorContainer.scrollBy({
            left: 0,
            top: -50,
            behavior: 'smooth'
          });
        }, 100);
      }
    } else if (mouseVerticalPositionOnScreen < editorBottom && mouseVerticalPositionOnScreen > scrollBottomLimit) {
      if (!acym_editorWysidDragDrop.autoScrollInterval) {
        acym_editorWysidDragDrop.autoScrollInterval = setInterval(function () {
          if (editorContainer.offsetHeight + editorContainer.scrollTop >= editorContainer.scrollHeight) {
            acym_editorWysidDragDrop.stopAutoScroll();
            return;
          }

          editorContainer.scrollBy({
            left: 0,
            top: 50,
            behavior: 'smooth'
          });
        }, 100);
      }
    } else {
      acym_editorWysidDragDrop.stopAutoScroll();
    }
  },
  stopAutoScroll: function stopAutoScroll() {
    clearInterval(acym_editorWysidDragDrop.autoScrollInterval);
    acym_editorWysidDragDrop.autoScrollInterval = null;
  },
  refreshSortablesInstances: function refreshSortablesInstances(draggable, uiSortable) {
    jQuery('#acym__wysid__template').off('scroll').on('scroll', function () {
      // We add a timeout to reload when the user finished scrolling
      clearTimeout(acym_editorWysidDragDrop.currentTimeout);
      acym_editorWysidDragDrop.currentTimeout = setTimeout(function () {
        jQuery(draggable.options.connectToSortable104).each(function () {
          var sortable = jQuery(this).sortable('instance');
          if (!sortable || sortable.options.disabled) return;
          acym_editorWysidDragDrop.instance.sortables.push({
            instance: sortable,
            shouldRevert: sortable.options.revert
          }); // Call the sortable's refreshPositions at drag start to refresh the containerCache since the sortable container cache is used in drag
          // and needs to be up to date (this will ensure it's initialised as well as being kept in step with any changes that might have happened on the page).

          sortable.refreshPositions();

          sortable._trigger('activate', event, uiSortable);
        });
      }, 100);
    });
  }
};
var acym_editorWysidDynamic = {
  inCall: false,
  getUniqueId: function getUniqueId($focusedElement) {
    var uniqueId;

    if ($focusedElement === undefined || $focusedElement.attr('id') === undefined) {
      uniqueId = 'dynamicContent';
      var i = 0;

      while (jQuery('#' + uniqueId + i).length) {
        i++;
      }

      uniqueId += i;
    } else {
      uniqueId = $focusedElement.attr('id');
    }

    return uniqueId;
  },
  endDContentInsertion: function endDContentInsertion($focusedElement, shortcode, previewContent, plugin) {
    var customView = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
    var uniqueId = this.getUniqueId($focusedElement);
    shortcode = shortcode.replace(/"/g, '\\"');
    var style = 'position: relative; top: inherit; left: inherit; right: inherit; bottom: inherit; height: auto;';
    var previewTooltip = '<span class="acym__tooltip acym__dynamics__preview">' + ACYM_JS_TXT.ACYM_PREVIEW;
    previewTooltip += '<span class="acym__tooltip__text wysid_tooltip">' + ACYM_JS_TXT.ACYM_PREVIEW_DESC + '</span>';
    previewTooltip += '</span>';

    if (customView) {
      previewTooltip = "<span class=\"acym__tooltip acym__dynamics__preview\">\n                                  ".concat(ACYM_JS_TXT.ACYM_PREVIEW_CUSTOM_VIEW, "\n                                  <span class=\"acym__tooltip__text wysid_tooltip\">").concat(ACYM_JS_TXT.ACYM_PREVIEW_DESC, "<br>").concat(ACYM_JS_TXT.ACYM_CUSTOM_VIEW_EDITOR_DESC, "</span>\n                               </span>");
    }

    if (0 === previewContent.length) {
      previewContent = '<div class="acym_default_dcontent"><span class="acym_default_dcontent_text">' + ACYM_JS_TXT.ACYM_NO_DCONTENT_TEXT + '</span></div>';
    }

    var insertedContent = '<tr id="' + uniqueId + '" class="acym__wysid__column__element ui-draggable" data-dynamic="' + shortcode + '" style="' + style + '" data-plugin="' + plugin + '">';
    insertedContent += '<td class="large-12 acym__wysid__column__element__td">' + previewTooltip;
    insertedContent += previewContent;
    insertedContent += '<div class="plugin_loader" style="display: none;"><i class="fa acymicon-spin acymicon-circle-o-notch">&zwj;</i></div>';
    insertedContent += '<i style="display: none;">&zwj;</i></td></tr>';
    $focusedElement.replaceWith(insertedContent);
    acym_helperEditorWysid.$focusElement = jQuery('#' + uniqueId);
    acym_helperEditorWysid.$focusElement.find('.plugin_loader').css('display', 'none');
  },
  insertDContent: function insertDContent(shortcode, $elementsToLoop) {
    var $focusedElement;
    var plugin;
    var initEdit = 'undefined' !== typeof $elementsToLoop;

    if (initEdit) {
      $focusedElement = jQuery($elementsToLoop.get(0));
      $elementsToLoop.splice(0, 1);
      plugin = $focusedElement.attr('data-plugin');
      shortcode = $focusedElement.attr('data-dynamic');
    } else {
      $focusedElement = acym_helperEditorWysid.$focusElement;
      plugin = jQuery('#currentPlugin').val();
    }

    if (0 === shortcode.length) {
      acym_editorWysidDynamic.endDContentInsertion($focusedElement, shortcode, '', plugin);
      acym_helperEditorWysid.setColumnRefreshUiWYSID(true, initEdit);
      acym_editorWysidRowSelector.setZoneAndBlockOverlays();
      acym_helperTooltip.setTooltip();
      acym_editorWysidDynamic.setDContentActions();
      return;
    }

    acym_helperEditorWysid.dynamicPreviewIdentifier++;
    var currentPreviewIdentifier = acym_helperEditorWysid.dynamicPreviewIdentifier;
    $focusedElement.find('.plugin_loader').css('display', 'flex');
    var mailId = jQuery('input[name="editor_autoSave"]').val();
    var ajaxUrl = ACYM_AJAX_URL + '&page=acymailing_dynamics&ctrl=' + acym_helper.ctrlDynamics + '&task=replaceDummy';
    jQuery.ajax({
      url: ajaxUrl,
      type: 'POST',
      data: {
        'mailId': mailId,
        'code': shortcode,
        'language': acym_editorWysidMultilingual.currentLanguage,
        'previewBody': jQuery('#acym__wysid__template').html()
      }
    }).then(function (response) {
      // Another option has been changed, apply the newest only
      if (currentPreviewIdentifier !== acym_helperEditorWysid.dynamicPreviewIdentifier) return;
      var preview;
      var customView = false;
      if (response) response = acym_helper.parseJson(response);

      if (!response.data.content || 0 === response.data.content.length) {
        preview = '';
      } else {
        preview = response.data.content;
        customView = response.data.custom_view;
      }

      acym_editorWysidDynamic.endDContentInsertion($focusedElement, shortcode, preview, plugin, customView);

      if ('undefined' !== typeof $elementsToLoop && $elementsToLoop.length > 0) {
        acym_editorWysidDynamic.insertDContent('', $elementsToLoop);
      } else {
        acym_helperEditorWysid.setColumnRefreshUiWYSID(true, initEdit);
        acym_editorWysidRowSelector.setZoneAndBlockOverlays();
        acym_helperTooltip.setTooltip();
        acym_editorWysidFontStyle.applyCssOnAllElementTypesBasedOnSettings();
        acym_editorWysidDynamic.setDContentActions();
      }
    });
  },
  openDContentOptions: function openDContentOptions(plugin, shortcode) {
    var $pluginsOptionsContainer = jQuery('#acym__wysid__context__plugins');
    $pluginsOptionsContainer.html('<i class="acymicon-circle-o-notch acymicon-spin centered_spinner text-center" style="margin-top: 2rem;"/>');
    acym_editorWysidContextModal.showBlockOptions($pluginsOptionsContainer);
    jQuery(window).on('mousedown', function (event) {
      if (acym_editorWysidContextModal.clickedOnRightToolbar(event)) return;
      var $target = jQuery(event.target);
      if ($target.closest('.c-scrim').length || $target.closest('.c-datepicker--open').length) return false;
      if ($target.closest('tr[data-plugin]').length) return false;
      jQuery(window).off('mousedown');
      acym_editorWysidContextModal.hideBlockOptions($pluginsOptionsContainer, $target);
    });

    if ('undefined' === typeof shortcode || !shortcode || !shortcode.length) {
      shortcode = '';
    }

    var ajaxURL = ACYM_AJAX_URL;
    ajaxURL += '&page=acymailing_lists';
    ajaxURL += '&action=acymailing_router';
    ajaxURL += '&noheader=1';
    ajaxURL += '&ctrl=' + acym_helper.ctrlDynamics;
    ajaxURL += '&task=trigger';
    ajaxURL += '&trigger=insertionOptions';
    ajaxURL += '&plugin=' + plugin;
    ajaxURL += '&shortcode=' + encodeURIComponent(shortcode);
    ajaxURL += '&campaignId=' + jQuery('#acym__campaign__recipients__form__campaign').val();

    if (!acym_helper.empty(acym_editorWysidMultilingual)) {
      ajaxURL += '&language=' + acym_editorWysidMultilingual.selectedLanguage;
    }

    var $campaignType = jQuery('[name="campaign_type"]');

    if ($campaignType.length > 0) {
      ajaxURL += '&campaign_type=' + $campaignType.val();
    }

    jQuery.ajax({
      url: ajaxURL,
      success: function success(data) {
        // Add the currently edited plugin type to use it when inserting the preview content
        data += '<input type="hidden" id="currentPlugin" name="currentPlugin" value="' + plugin + '"/>';
        $pluginsOptionsContainer.html(data); // We just added the options in the container, activate the needed JS on it
        // Init radio button options

        acym_helperRadio.setRadioIconsGlobal(); // Init search and category fields

        acym_editorWysidDynamic.setPluginFilters(); // Init infinite scroll on content insertion

        jQuery('#acym_pagination__ajax__load-more').val(1);
        acym_editorWysidDynamic.setPluginPagination();
        acym_editorWysidDynamic.setPluginTabs(); // Init date fields for event plugins or auto-campaigns

        acym_helperDatePicker.setDatePickerGlobal();
        jQuery('.reveal-overlay').not('#acym_form .reveal-overlay').appendTo('#acym__wysid__context__plugins');
        acym_helperDatePicker.setRSDateChoice(); // Init tooltips for auto-campaign and custom view options

        acym_helperTooltip.setTooltip(); // Init the format buttons choices

        acym_helper.setButtonRadio(); // Handle custom view with vuejs

        jQuery(document).trigger('acym_plugins_installed_loaded');
        acym_editorWysidDynamic.setRefreshCustomViewChanged(); // We just dropped the block, display the default preview

        if (0 === shortcode.length) {
          acym_editorWysidDynamic.insertDContent('');
        }
      }
    });
  },
  setPluginFilters: function setPluginFilters() {
    jQuery('#plugin_listing_filters select').off('change').on('change', function () {
      acym_editorWysidDynamic.setAjaxDynamic();
    });
    jQuery('#plugin_listing_filters input[type="text"]').off('keyup').on('keyup', function () {
      jQuery('#plugin_listing').off('scroll');
      var search = jQuery(this).val();
      clearTimeout(acym_helperEditorWysid.typingTimer);

      if (search.length >= 2) {
        acym_helperEditorWysid.typingTimer = setTimeout(function () {
          acym_editorWysidDynamic.setAjaxDynamic();
        }, 1000);
      } else if (search == '') {
        acym_editorWysidDynamic.setAjaxDynamic();
      }
    });

    if (ACYM_IS_ADMIN) {
      jQuery('#acym__wysid__context__plugins select').select2({
        theme: 'foundation',
        width: '160px'
      });
    }
  },
  setAjaxDynamic: function setAjaxDynamic() {
    var _this = this;

    var loadMore = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
    if (this.inCall) return true;
    this.inCall = true;
    var ajaxUrl = ACYM_AJAX_URL + '&page=acymailing_dynamics&ctrl=' + acym_helper.ctrlDynamics + '&task=trigger&trigger=displayListing';
    jQuery('#plugin_listing_filters input, #plugin_listing_filters select').each(function () {
      ajaxUrl += '&' + jQuery(this).attr('name') + '=' + jQuery(this).val();
    });
    var $paginationInput = jQuery('#acym_pagination__ajax__load-more');

    if (loadMore) {
      ajaxUrl += '&loadMore=1';
    } else {
      $paginationInput.val(1);
    }

    ajaxUrl += '&pagination_page_ajax=' + $paginationInput.val();
    ajaxUrl += '&plugin=' + jQuery('input[name="plugin"]').val(); // _selectedRows is modified by the add-ons directly

    if (typeof _selectedRows !== 'undefined') {
      var _ids = [];

      for (var key in _selectedRows) {
        if (!_selectedRows.hasOwnProperty(key)) continue;

        _ids.push(key);
      }

      ajaxUrl += '&selected=' + _ids.join(',');
    }

    jQuery.post(ajaxUrl, function (response) {
      var $pluginListing = jQuery('#plugin_listing');

      if (!loadMore) {
        $pluginListing.replaceWith(response);
      } else {
        $pluginListing.find('.acym__loader').remove();
        $pluginListing.append(response);
      }

      _this.inCall = false;
      acym_editorWysidDynamic.setPluginPagination();
    });
  },
  setPluginPagination: function setPluginPagination() {
    var $pluginListing = jQuery('#plugin_listing'); // If there are no more elements to show

    if ($pluginListing.find('.acym__listing__empty__load-more').length > 0 || $pluginListing.find('.acym__listing__empty__search__modal').length > 0) {
      return true;
    }

    $pluginListing.on('scroll', function () {
      //We subtract 80 this way the call trigger before the user touch the bottom and he have to wait less time
      var scrollToDo = jQuery(this)[0].scrollHeight - 80;
      var scrollDone = jQuery(this).height() + jQuery(this).scrollTop(); //if we reach the end we load more entities

      if (scrollDone >= scrollToDo) {
        //once it's done we remove the event listener on the scroll to prevent calling X times the urls
        jQuery(this).off('scroll'); //We add the spinner

        jQuery(this).append('<div class="cell text-center acym__loader"><i class="acymicon-spin acymicon-circle-o-notch"></i></div>'); //We increment the pagination

        var $paginationInput = jQuery('#acym_pagination__ajax__load-more');
        var currentPage = parseInt($paginationInput.val());
        $paginationInput.val(currentPage + 1); //We make the ajax call

        acym_editorWysidDynamic.setAjaxDynamic(true);
      }
    });
  },
  setPluginTabs: function setPluginTabs() {
    // Reload foundation for tabs in plugins popup
    jQuery(document).foundation();
    jQuery('.tabs').each(function () {
      var identifier = jQuery(this).attr('id');
      var selectedTab = localStorage.getItem('acy' + identifier);
      var $tabsContainer = jQuery('#' + identifier);
      var $lastSelected = $tabsContainer.find('a[data-tab-identifier="' + selectedTab + '"]');

      if ($lastSelected.length) {
        $lastSelected.trigger('click');
      } else {
        var $defaultTab = $tabsContainer.find('a[data-selected="true"]');

        if ($defaultTab.length) {
          $defaultTab.trigger('click');
        } else {
          $tabsContainer.find('.acym_tab:first').trigger('click');
        }
      }
    });
  },
  setDTextActions: function setDTextActions() {
    jQuery('.acym_dynamic').off('click').on('click', function (event) {
      var selection = window.getSelection();
      selection.removeAllRanges();
      var range = document.createRange();
      range.selectNode(this);
      selection.addRange(range);
      jQuery('#dtextcode').val('');
    });
    jQuery('.acym_remove_dynamic').off('click').on('click', function () {
      jQuery(this).closest('span').remove();
      acym_helperEditorWysid.setColumnRefreshUiWYSID();
    });
  },
  setDContentActions: function setDContentActions() {
    jQuery('tr[data-dynamic]').off('click').on('click', function () {
      acym_helperEditorWysid.$focusElement = jQuery(this);
      acym_editorWysidDynamic.openDContentOptions(jQuery(this).attr('data-plugin'), jQuery(this).attr('data-dynamic'));
    });
  },
  setTagPWordBreak: function setTagPWordBreak() {
    jQuery('#acym__wysid__template').find('p').css('word-break', 'break-word');
  },
  setTagPreInserted: function setTagPreInserted() {
    var userAgent = navigator.userAgent;

    if (userAgent.toLowerCase().indexOf('chrome') > -1 || userAgent.toLowerCase().indexOf('firefox') > -1) {
      jQuery('p').find('code').css('white-space', 'pre-wrap');
      jQuery('pre').css('white-space', 'pre-wrap');
      jQuery('code').css('white-space', 'pre-wrap');
    } else if (userAgent.indexOf('MSIE ') > -1 || userAgent.indexOf('Trident/') > -1) {
      jQuery('pre').css('word-wrap', 'break-word');
      jQuery('code').css('word-wrap', 'break-word');
    } else if (userAgent.toLowerCase().indexOf('opera') > -1) {
      jQuery('pre').css('white-space', '-o-pre-wrap');
      jQuery('code').css('white-space', '-o-pre-wrap');
    }
  },
  setRefreshCustomViewChanged: function setRefreshCustomViewChanged() {
    jQuery(document).off('acym_custom_view_modal_closed').on('acym_custom_view_modal_closed', function () {
      var functionName = document.getElementById('acym__dynamic__update__function').value;
      if (typeof window[functionName] === 'function') window[functionName]();
    });
  },
  setDTexts: function setDTexts() {
    // We hide the real tabs system and show an other one above
    jQuery('#dtext_options').hide();
  }
};

function setTag(tagvalue, element) {
  var $allRows = jQuery('.acym__listing__row__popup');
  $allRows.removeClass('selected_row');
  element.addClass('selected_row');
  window.document.getElementById('dtextcode').value = tagvalue;
}

var acym_editorWysidFontStyle = {
  allHtmlElementTypes: ['p', 'a', 'span.acym_link', 'li', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'],
  currentlySelectedType: 'p',
  applyCssOnAllElementTypesBasedOnSettings: function applyCssOnAllElementTypesBasedOnSettings() {
    this.allHtmlElementTypes.map(function (oneHtmlElementType) {
      acym_editorWysidFontStyle.applyCssOnElementsBasedOnSettings(oneHtmlElementType);
    });
    acym_editorWysidFontStyle.applyCssOnePropertyOnElementsBasedOnSettings('#acym__wysid__background-colorpicker', 'background-color');
  },
  applyCssOnElementsBasedOnSettings: function applyCssOnElementsBasedOnSettings(oneHtmlElementType) {
    jQuery.each(acym_helperEditorWysid.defaultMailsSettings[oneHtmlElementType], function (property) {
      acym_editorWysidFontStyle.applyCssOnePropertyOnElementsBasedOnSettings(oneHtmlElementType, property);
    });
  },
  applyCssOnePropertyOnElementsBasedOnSettings: function applyCssOnePropertyOnElementsBasedOnSettings(oneHtmlElementType, property) {
    var selector = '';

    if (oneHtmlElementType === '#acym__wysid__background-colorpicker') {
      selector = '.acym__wysid__template__content';
    } else {
      selector = '.acym__wysid__column__element ' + oneHtmlElementType + ':not(.acym__wysid__content-no-settings-style)';
    }

    jQuery(selector).css(property, acym_editorWysidFontStyle.getPropertyOfOneType(oneHtmlElementType, property));
  },
  getPropertyOfOneType: function getPropertyOfOneType(oneHtmlElementType, property) {
    return acym_helperEditorWysid.mailsSettings[oneHtmlElementType] !== undefined && acym_helperEditorWysid.mailsSettings[oneHtmlElementType][property] && acym_helperEditorWysid.mailsSettings[oneHtmlElementType][property] !== undefined ? acym_helperEditorWysid.mailsSettings[oneHtmlElementType][property] : acym_helperEditorWysid.defaultMailsSettings[oneHtmlElementType][property];
  },
  saveAndApplyPropertyOnOneType: function saveAndApplyPropertyOnOneType(oneHtmlElementType, property, value) {
    var override = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;

    if (acym_helperEditorWysid.mailsSettings[oneHtmlElementType] === undefined) {
      acym_helperEditorWysid.mailsSettings[oneHtmlElementType] = {};
    }

    if (!override && !acym_helper.empty(acym_helperEditorWysid.mailsSettings[oneHtmlElementType].overridden) && !acym_helper.empty(acym_helperEditorWysid.mailsSettings[oneHtmlElementType].overridden[property])) {
      return;
    }

    acym_helperEditorWysid.mailsSettings[oneHtmlElementType][property] = value;

    if (override) {
      if (acym_helper.empty(acym_helperEditorWysid.mailsSettings[oneHtmlElementType].overridden)) {
        acym_helperEditorWysid.mailsSettings[oneHtmlElementType].overridden = {};
      }

      acym_helperEditorWysid.mailsSettings[oneHtmlElementType].overridden[property] = true;
    }

    acym_editorWysidFontStyle.applyCssOnePropertyOnElementsBasedOnSettings(oneHtmlElementType, property);
  },
  setDesignOptionValuesForSelectedType: function setDesignOptionValuesForSelectedType() {
    jQuery('#acym__wysid__right__toolbar__settings__font-family').val(acym_editorWysidFontStyle.getPropertyOfOneType(acym_editorWysidFontStyle.currentlySelectedType, 'font-family')).trigger('change');
    jQuery('#acym__wysid__right__toolbar__settings__font-size').val(acym_editorWysidFontStyle.getPropertyOfOneType(acym_editorWysidFontStyle.currentlySelectedType, 'font-size')).trigger('change');
    var $settingsBold = jQuery('#acym__wysid__right__toolbar__settings__bold');

    if (acym_editorWysidFontStyle.getPropertyOfOneType(acym_editorWysidFontStyle.currentlySelectedType, 'font-weight') === 'bold') {
      $settingsBold.addClass('acym__wysid__right__toolbar__settings__bold--selected');
    } else {
      $settingsBold.removeClass('acym__wysid__right__toolbar__settings__bold--selected');
    }

    var $settingsItalic = jQuery('#acym__wysid__right__toolbar__settings__italic');

    if (acym_editorWysidFontStyle.getPropertyOfOneType(acym_editorWysidFontStyle.currentlySelectedType, 'font-style') === 'italic') {
      $settingsItalic.addClass('acym__wysid__right__toolbar__settings__italic--selected');
    } else {
      $settingsItalic.removeClass('acym__wysid__right__toolbar__settings__italic--selected');
    }

    acym_editorWysidColorPicker.setSettingsColorPickerWYSID();
  },
  setSettingsModificationHandling: function setSettingsModificationHandling() {
    var selectedHtmlElementType = acym_editorWysidFontStyle.currentlySelectedType;
    var $emailContentContainer = jQuery('#acym__wysid .acym__wysid__template__content');
    var $deleteBackgroundImage = jQuery('#acym__wysid__background-image__template-delete');
    var $inputPaddingTop = jQuery('#acym__wysid__padding__top__content');
    var $inputPaddingBottom = jQuery('#acym__wysid__padding__bottom__content'); // Init template design options

    jQuery('#acym__wysid__background-image__template').off('click').on('click', function () {
      acym_editorWysidImage.openMediaManager($emailContentContainer, true);
    });

    if ($emailContentContainer.css('background-image') !== 'none') {
      $deleteBackgroundImage.css('display', 'flex');
    }

    $deleteBackgroundImage.off('click').on('click', function () {
      $emailContentContainer.css('background-image', 'none');
      jQuery(this).hide();
    });
    $inputPaddingTop.val($emailContentContainer.css('padding-top').replace(/[^-\d\.]/g, ''));
    $inputPaddingTop.off('change').on('change', function () {
      $emailContentContainer.css('padding-top', jQuery(this).val() + 'px');
    });
    $inputPaddingBottom.val($emailContentContainer.css('padding-bottom').replace(/[^-\d\.]/g, ''));
    $inputPaddingBottom.off('change').on('change', function () {
      $emailContentContainer.css('padding-bottom', jQuery(this).val() + 'px');
    });
    acym_editorWysidFontStyle.initDefaultFont(); // Init design options

    acym_editorWysidFontStyle.setDesignModificationHandling();
    acym_editorWysidFontStyle.setDesignOptionValuesForSelectedType();
    acym_editorWysidFontStyle.applyCssOnElementsBasedOnSettings(selectedHtmlElementType);
  },
  setDesignModificationHandling: function setDesignModificationHandling() {
    var $settingsBold = jQuery('#acym__wysid__right__toolbar__settings__bold');
    var $settingsItalic = jQuery('#acym__wysid__right__toolbar__settings__italic');
    jQuery('#acym__wysid__right__toolbar__settings__font--select').on('change', function () {
      acym_editorWysidFontStyle.currentlySelectedType = jQuery(this).val();
      acym_editorWysidFontStyle.setDesignOptionValuesForSelectedType();
    });
    jQuery('#acym__wysid__right__toolbar__settings__font-family').off('select2:select').on('change select2:select', function (event) {
      acym_editorWysidFontStyle.saveAndApplyPropertyOnOneType(acym_editorWysidFontStyle.currentlySelectedType, 'font-family', jQuery(this).val(), event.type !== 'change');
    });
    jQuery('#acym__wysid__right__toolbar__settings__font-size').on('change', function () {
      acym_editorWysidFontStyle.saveAndApplyPropertyOnOneType(acym_editorWysidFontStyle.currentlySelectedType, 'font-size', jQuery(this).val());
    });
    $settingsBold.off('click').off('click').on('click', function () {
      if ($settingsBold.hasClass('acym__wysid__right__toolbar__settings__bold--selected')) {
        $settingsBold.removeClass('acym__wysid__right__toolbar__settings__bold--selected');
        acym_editorWysidFontStyle.saveAndApplyPropertyOnOneType(acym_editorWysidFontStyle.currentlySelectedType, 'font-weight', 'normal');
      } else {
        $settingsBold.addClass('acym__wysid__right__toolbar__settings__bold--selected');
        acym_editorWysidFontStyle.saveAndApplyPropertyOnOneType(acym_editorWysidFontStyle.currentlySelectedType, 'font-weight', 'bold');
      }
    });
    $settingsItalic.off('click').off('click').on('click', function () {
      if ($settingsItalic.hasClass('acym__wysid__right__toolbar__settings__italic--selected')) {
        $settingsItalic.removeClass('acym__wysid__right__toolbar__settings__italic--selected');
        acym_editorWysidFontStyle.saveAndApplyPropertyOnOneType(acym_editorWysidFontStyle.currentlySelectedType, 'font-style', 'normal');
      } else {
        $settingsItalic.addClass('acym__wysid__right__toolbar__settings__italic--selected');
        acym_editorWysidFontStyle.saveAndApplyPropertyOnOneType(acym_editorWysidFontStyle.currentlySelectedType, 'font-style', 'italic');
      }
    });
  },
  setOpenStylesheet: function setOpenStylesheet() {
    jQuery('#acym__wysid__right__toolbar__settings__stylesheet__open').on('click', function () {
      acym_helperEditorWysid.stylesheetTemp = jQuery('#acym__wysid__right__toolbar__settings__stylesheet__textarea').val();
    });
  },
  setCancelStylesheet: function setCancelStylesheet() {
    jQuery('#acym__wysid__right__toolbar__settings__stylesheet__cancel').on('click', function () {
      jQuery('#acym__wysid__right__toolbar__settings__stylesheet__textarea').val(acym_helperEditorWysid.stylesheetTemp);
      jQuery('#acym__wysid__right__toolbar__settings__stylesheet__modal .close-button').trigger('click');
    });
  },
  setApplyStylesheetSettings: function setApplyStylesheetSettings() {
    jQuery('#acym__wysid__right__toolbar__settings__stylesheet__apply').off('click').on('click', function () {
      var css = jQuery('#acym__wysid__right__toolbar__settings__stylesheet__textarea').val();
      jQuery('.acym__wysid__hidden__save__stylesheet').val(css);
      jQuery('#acym__wysid__edit').append('<style id="acym__wysid__custom__style">' + acym_helperEditorWysid.parseTextToCss(css) + '</style>');
      jQuery('#acym__wysid__right__toolbar__settings__stylesheet__modal .close-button').trigger('click');
    });
  },
  setSocialIconImport: function setSocialIconImport() {
    var allSocialIcons = acym_helper.parseJson(jQuery('#acym__mail__edit__editor__social__icons').val());
    if (undefined === allSocialIcons) return;
    jQuery.each(Object.keys(allSocialIcons), function (index, value) {
      acym_helperEditorWysid.socialMedia[value].src = allSocialIcons[value];
    });
    jQuery('.acym__wysid__social__icons__import__text').off('click').on('click', function () {
      var $this = jQuery(this);
      var $inputFile = $this.closest('.acym__wysid__right__toolbar__design__social__icons__one').find('input');
      $inputFile.trigger('click');
      $inputFile.off('change').on('change', function () {
        var filename = jQuery(this).val().split('\\').pop();
        $this.closest('.acym__wysid__right__toolbar__design__social__icons__one').find('.acym__wysid__social__icons__import__delete').remove();

        if (undefined === filename || '' === filename) {
          $this.html(ACYM_JS_TXT.ACYM_SELECT_NEW_ICON);
          $this.closest('.acym__wysid__right__toolbar__design__social__icons__one').find('button').attr('disabled', 'disabled');
        } else {
          $this.html(filename).after('<i class="acymicon-close cell shrink acym__wysid__social__icons__import__delete cursor-pointer"></i>');
          $this.closest('.acym__wysid__right__toolbar__design__social__icons__one').find('button').removeAttr('disabled');
        }

        jQuery('.acym__wysid__social__icons__import__delete').off('click').on('click', function () {
          jQuery(this).closest('.acym__wysid__right__toolbar__design__social__icons__one').find('button').attr('disabled', 'disabled');
          jQuery(this).closest('.acym__wysid__right__toolbar__design__social__icons__one').find('input').val('').trigger('change');
          jQuery(this).remove();
        });
      });
    });
    jQuery('.acym__wysid__social__icons__import').off('click').on('click', function () {
      jQuery(this).closest('div').find('.acym__wysid__social__icons__import__delete').html('').attr('class', 'acymicon-circle-o-notch acymicon-spin acym__wysid__social__icons__import__delete').css('color', '#303e46');
      var $input = jQuery(this).closest('.acym__wysid__right__toolbar__design__social__icons__one').find('input');
      var file_data = $input.prop('files')[0];
      var form_data = new FormData();
      form_data.append('file', file_data);
      var whichIcon = $input.attr('name').replace('icon_', '');
      var ajaxUrl = ACYM_AJAX_URL + '&ctrl=' + acym_helper.ctrlMails + '&task=setNewIconShare&social=' + whichIcon;
      jQuery.ajax({
        url: ajaxUrl,
        dataType: 'text',
        // what to expect back from the PHP script, if anything
        cache: false,
        contentType: false,
        processData: false,
        data: form_data,
        type: 'post',
        success: function success(res) {
          res = acym_helper.parseJson(res);

          if (!res.error) {
            var img = jQuery('img').filter('[src^="' + res.data.url + '"]');
            var finalUrl = res.data.url + '.' + res.data.extension;
            jQuery.each(img, function () {
              var d = new Date();
              jQuery(this).removeAttr('src').attr('src', finalUrl + '?d=' + d.getTime());
            });
            acym_helperEditorWysid.socialMedia[whichIcon].src = finalUrl;
          }

          $input.val('').trigger('change');
          acym_editorWysidNotifications.addEditorNotification({
            'message': res.message,
            'level': res.error ? 'error' : 'success'
          });
        }
      });
    });
  },
  initDefaultFont: function initDefaultFont() {
    var savedFont = acym_helperEditorWysid.defaultMailsSettings["default"]['font-family'];

    if (!acym_helper.empty(acym_helperEditorWysid.mailsSettings["default"]) && !acym_helper.empty(acym_helperEditorWysid.mailsSettings["default"]['font-family'])) {
      savedFont = acym_helperEditorWysid.mailsSettings["default"]['font-family'];
    }

    var $defaultFontSelect = jQuery('[name="default_font"]');
    $defaultFontSelect.off('change').on('change', function (event) {
      var font = jQuery(this).val();
      if (acym_helper.empty(acym_helperEditorWysid.mailsSettings["default"])) acym_helperEditorWysid.mailsSettings["default"] = {};
      acym_helperEditorWysid.mailsSettings["default"]['font-family'] = font;
      acym_editorWysidFontStyle.allHtmlElementTypes.map(function (oneHtmlElementType) {
        acym_editorWysidFontStyle.saveAndApplyPropertyOnOneType(oneHtmlElementType, 'font-family', font, false);
      });
    });
    $defaultFontSelect.val(savedFont).trigger('change');
  }
};
var acym_editorWysidFormAction = {
  needToGenerateThumbnail: function needToGenerateThumbnail() {
    var $inputReset = jQuery('[name="custom_thumbnail_reset"]');
    return !$inputReset.length || parseInt($inputReset.val()) === 1;
  },
  saveAjaxMail: function saveAjaxMail(controller, sendTest, saveAsTmpl) {
    if (controller.indexOf('mails') !== -1 || saveAsTmpl) {
      return jQuery.when(acym_helperThumbnail.setAjaxSaveThumbnail()).done(function () {
        return acym_editorWysidFormAction._ajaxCall(controller, sendTest, saveAsTmpl);
      }).fail(function (err) {
        console.log(err);
        return acym_editorWysidFormAction._ajaxCall(controller, sendTest, saveAsTmpl);
      });
    } else {
      return acym_editorWysidFormAction._ajaxCall(controller, sendTest, saveAsTmpl);
    }
  },
  saveEmail: function saveEmail(sendTest, saveAsTmpl) {
    var $warning = jQuery('#acym__wysid__warning__thumbnail');

    if (!$warning.is(':visible')) {
      var heightOverlay = window.innerHeight - jQuery('#acym__wysid__top-toolbar').offset().top - jQuery('#acym__wysid__wrap').height();
      $warning.css('bottom', '-' + heightOverlay + 'px').toggle();
    }

    var $emailContent = jQuery('#acym__wysid__template');
    $emailContent.css({
      'overflow': 'hidden',
      'overflow-y': 'auto'
    });
    jQuery('.acym__wysid__row__selector, .acym__wysid__element__toolbox').remove();
    jQuery('.acym__wysid__tinymce--text--placeholder--empty').removeClass('acym__wysid__tinymce--text--placeholder--empty');
    jQuery('#acym__wysid__template img').each(function () {
      var width = jQuery(this).width();
      var outerWidth = jQuery(this).outerWidth();
      jQuery(this).attr('width', width).attr('height', jQuery(this).height()).css('width', outerWidth);
    });
    jQuery('[id^="template_version_"]').remove(); //We remove the comments

    jQuery('#acym__wysid__template *').contents().each(function () {
      if (this.nodeType === Node.COMMENT_NODE) {
        jQuery(this).remove();
      }
    });
    $emailContent.find('.acym__wysid__column__element__td').css('outline-width', '0px');
    $emailContent.find('[contenteditable]').attr('contenteditable', 'false');
    jQuery('#acym__wysid__template a.acym__wysid__column__element__button').each(function () {
      var buttonMicrosoft = acym_editorWysidOutlook.getOutlookButton(jQuery(this));
      jQuery(this).before('<!--[if mso]>' + buttonMicrosoft + '<![endif]--><!--[if !mso]>');
      jQuery(this).after('<![endif]-->');
    });
    jQuery('#acym__wysid__template .acym__wysid__row__element').each(function () {
      if (jQuery(this).css('background-image') !== '' && jQuery(this).css('background-image') !== 'none') {
        acym_editorWysidOutlook.setBackgroundOutlook(jQuery(this));
      }
    });
    $emailContent.find('.acym__wysid__tinymce--image br[data-mce-bogus]').remove();

    if (!sendTest && !saveAsTmpl) {
      jQuery('.mce-edit-focus').removeClass('mce-edit-focus');
      $emailContent.find('[name^="mce_"]').remove();
      $emailContent.find('#acym__wysid__default').remove();
    }

    var mainColor1 = jQuery('#acym__wysid__maincolor-colorpicker1').spectrum('get').toHexString();
    var mainColor2 = jQuery('#acym__wysid__maincolor-colorpicker2').spectrum('get').toHexString();
    var mainColor3 = jQuery('#acym__wysid__maincolor-colorpicker3').spectrum('get').toHexString();

    if (saveAsTmpl) {
      jQuery('.acym__wysid__hidden__save__content__template').val('<div id="acym__wysid__template" class="cell">' + $emailContent.html() + '</div>');
      jQuery('.acym__wysid__hidden__save__settings__template').val(JSON.stringify(acym_helperEditorWysid.mailsSettings));
      jQuery('.acym__wysid__hidden__save__stylesheet__template').val(jQuery('#acym__wysid__right__toolbar__settings__stylesheet__textarea').val());
      jQuery('.acym__wysid__hidden__save__colors__template').val(mainColor1 + ',' + mainColor2 + ',' + mainColor3);
    } else {
      jQuery('.acym__wysid__hidden__save__content').val('<div id="acym__wysid__template" class="cell">' + $emailContent.html() + '</div>').trigger('change');
      jQuery('.acym__wysid__hidden__save__settings').val(JSON.stringify(acym_helperEditorWysid.mailsSettings));
      jQuery('.acym__wysid__hidden__save__stylesheet').val(jQuery('#acym__wysid__right__toolbar__settings__stylesheet__textarea').val());
      jQuery('.acym__wysid__hidden__save__colors').val(mainColor1 + ',' + mainColor2 + ',' + mainColor3);
    }

    return acym_editorWysidFormAction.saveAjaxMail(jQuery('[name="ctrl"]').val(), sendTest, saveAsTmpl);
  },
  _ajaxCall: function _ajaxCall(controller, fromSendTest, saveAsTmpl) {
    // Handle when multilingual
    acym_editorWysidMultilingual.storeCurrentValues();
    var ajaxUrl = ACYM_AJAX_URL + '&ctrl=' + controller;

    if (saveAsTmpl) {
      jQuery('input[name="task"]').val('saveAsTmplAjax');
      ajaxUrl += '&saveAsTmpl=1';
    } else {
      jQuery('input[name="task"]').val('saveAjax');
    }

    return acym_helper.post(ajaxUrl, jQuery('#acym_form').serialize()).done(function (res) {
      if (res.error) {
        acym_helperNotification.addNotification(res.message, 'error');
      } else {
        if (!saveAsTmpl) {
          jQuery('mail' === controller ? '[name="id"]' : '[name="id"], [name="mail[id]"]').val(res.data.result);

          if (!fromSendTest) {
            jQuery('#acym_header').css('display', '');
            jQuery('.acym__content').css('display', '');
            jQuery('#acym__wysid').css('display', 'none');
            jQuery('#acym__wysid__edit').css('display', '');
          }
        } else {
          acym_editorWysidNotifications.addEditorNotification({
            'message': ACYM_JS_TXT.ACYM_TEMPLATE_CREATED,
            'level': 'success'
          }, 3000, false);
        }

        if (fromSendTest) acym_editorWysidTest.sendTest(res.data.result);
        jQuery('#acym__wysid__warning__thumbnail').toggle();
      }

      jQuery('#acym__wysid__save__button').removeAttr('disabled');
      acym_helperEditorWysid.setColumnRefreshUiWYSID(false);
      acym_editorWysidTinymce.addTinyMceWYSID();
      acym_editorWysidRowSelector.setZoneAndBlockOverlays();
    }).fail(function (jqXHR, textStatus) {
      alert('Request failed: ' + textStatus);
    });
  },
  setSaveButtonWYSID: function setSaveButtonWYSID() {
    jQuery('#acym__wysid__save__button').off('click').on('click', function () {
      // Directly save the email
      if (jQuery('[name="ctrl"]').val().indexOf('campaigns') !== -1 || jQuery('#acym__mail__type').val() === 'followup') {
        acym_editorWysidFormAction.saveEmail(false, false);
        return true;
      } // Generate a thumbnail then save the email


      acym_editorWysidFormAction.setSaveTmpl(false);
    });
  },
  setSaveAsTmplButtonWYSID: function setSaveAsTmplButtonWYSID() {
    jQuery('#acym__wysid__saveastmpl__button').off('click').on('click', function () {
      if (acym_helper.confirm(ACYM_JS_TXT.ACYM_SAVE_AS_TEMPLATE_CONFIRMATION)) {
        acym_editorWysidFormAction.setSaveTmpl(true);
      }
    });
  },
  setSaveTmpl: function setSaveTmpl(saveAsTmpl) {
    var $editorArea = jQuery('#acym__wysid__wrap');
    var heightOverlay = window.innerHeight - jQuery('#acym__wysid__top-toolbar').offset().top - $editorArea.height();
    jQuery('#acym__wysid__warning__thumbnail').css('bottom', '-' + heightOverlay + 'px').toggle();
    setTimeout(function () {
      acym_editorWysidFormAction.setThumbnailPreSave().then(function (dataUrl) {
        // Copy img content in hidden input
        console.log(acym_editorWysidFormAction.needToGenerateThumbnail());

        if (acym_editorWysidFormAction.needToGenerateThumbnail()) {
          jQuery('#editor_thumbnail').attr('value', dataUrl);
        }

        acym_editorWysidFormAction.saveEmail(false, saveAsTmpl);
      })["catch"](function (err) {
        console.error('Error generating template thumbnail: ' + err);
        acym_editorWysidFormAction.saveEmail(false, saveAsTmpl);
      });
    }, 10);
  },
  setThumbnailPreSave: function setThumbnailPreSave() {
    jQuery('#acym__wysid__template').css({
      'overflow': 'unset',
      'overflow-y': 'unset'
    });
    var tmplheight = jQuery('.acym__wysid__template__content').height();
    var node = document.getElementById('acym__wysid__template');
    jQuery('.acym__wysid__element__toolbox').remove();
    return html2canvas(node, {
      height: tmplheight,
      logging: false
    }).then(function (canvas) {
      return canvas.toDataURL('image/png');
    });
  },
  setOpenEditorButton: function setOpenEditorButton() {
    jQuery('#acym__wysid__edit__button').off('click').on('click', function () {
      var $editorContent = jQuery('#acym__wysid__template');

      if (jQuery('#acym__wysid .acym__wysid__template__content').css('background-image') !== 'none') {
        jQuery('#acym__wysid__background-image__template-delete').hide();
      }

      jQuery('.acym__wysid__row__element__toolbox__colorpicker').spectrum('destroy');
      jQuery('.sp-container').remove();
      jQuery('#acym_header').css('display', 'none');
      jQuery('.acym__content').css('display', 'none');
      var acymWysidDivStyle = {
        'display': 'inherit'
      };

      if (ACYM_CMS === 'joomla') {
        acymWysidDivStyle.top = jQuery('.navbar-fixed-top').height() + 'px';
      }

      jQuery('#acym__wysid').css(acymWysidDivStyle);
      jQuery('#acym__wysid__edit').css('display', 'none');
      var savedContent = jQuery('.acym__wysid__hidden__save__content').val();

      if (!acym_helper.empty(savedContent)) {
        $editorContent.replaceWith(savedContent); // We need to reset the $editorContent nodes elements so the code below execute on the right nodes

        $editorContent = jQuery('#acym__wysid__template');
      }

      var savedSettings = jQuery('.acym__wysid__hidden__save__settings').val();
      acym_helperEditorWysid.saveSettings = acym_helper.empty(savedSettings) ? '' : savedSettings;
      acym_helperEditorWysid.mailsSettings = acym_helperEditorWysid.saveSettings === '' ? {} : acym_helper.parseJson(acym_helperEditorWysid.saveSettings);
      var savedStylesheet = jQuery('.acym__wysid__hidden__save__stylesheet').val();

      if (!acym_helper.empty(savedStylesheet)) {
        acym_helperEditorWysid.savedStylesheet = savedStylesheet;
        jQuery('#acym__wysid__right__toolbar__settings__stylesheet__textarea').val(acym_helperEditorWysid.savedStylesheet);
      }

      var $images = $editorContent.find('img');
      var numberImages = $images.length; // We apply the zone and block overlays after the images are loaded to make sure the height of these overlays is correct

      if (numberImages > 0) {
        var countLoadedImages = 0;
        $images.on('load', function () {
          countLoadedImages++;

          if (numberImages === countLoadedImages) {
            acym_editorWysidRowSelector.setZoneAndBlockOverlays();
          }
        });
      } else {
        acym_editorWysidRowSelector.setZoneAndBlockOverlays();
      }

      var $emailContent = $editorContent;
      $emailContent.find('[contenteditable]').attr('contenteditable', 'true');
      $emailContent.find('[id^="mce_"]').removeAttr('id');
      acym_helperEditorWysid.setColumnRefreshUiWYSID(true, true);
      var $elementsToReload = jQuery('tr[data-dynamic]');

      if ($elementsToReload.length > 0) {
        acym_editorWysidDynamic.insertDContent('', $elementsToReload);
      }

      acym_editorWysidColorPicker.setMainColorPickerWYSID();
      acym_editorWysidFontStyle.setSettingsModificationHandling();
      acym_editorWysidImage.setImageWidthHeightOnInsert();
      acym_helperEditorWysid.resizeEditorBasedOnPage();
      acym_editorWysidColorPicker.setGeneralColorPickerWYSID();
      acym_editorWysidContextModal.setButtonOptions();
      acym_editorWysidContextModal.setSpaceOptions();
      acym_editorWysidContextModal.setFollowOptions();
      acym_editorWysidContextModal.setSeparatorOptions();
      acym_editorWysidContextModal.setBuiltWithOptions();
      acym_editorWysidFontStyle.applyCssOnAllElementTypesBasedOnSettings();
      acym_editorWysidDynamic.setDTextActions();
      acym_editorWysidDynamic.setDContentActions();
      acym_editorWysidTinymce.addTinyMceWYSID();
      acym_editorWysidRowSelector.setZoneAndBlockOverlays();
    });
  },
  setCancelButtonWYSID: function setCancelButtonWYSID() {
    jQuery('#acym__wysid__cancel__button').off('click').on('click', function () {
      jQuery('#acym_header').css('display', '');
      jQuery('.acym__content').css('display', '');
      jQuery('#acym__wysid').css('display', 'none');
      jQuery('#acym__wysid__edit').css('display', '');
      jQuery('.acym__wysid__hidden__save__stylesheet').val(acym_helperEditorWysid.savedStylesheet);
      jQuery('.acym__wysid__hidden__save__colors').val(acym_helperEditorWysid.savedColors);
    });
  }
};
var isSearching = false;
var lastSearch = '';
var defaultSearch = 'hello';
var limitSearch = 24;
var acym_editorWysidGiphy = {
  loadGif: function loadGif() {
    var _this2 = this;

    //When we're already searching for gif no need to make more research in the function setResearchInput
    isSearching = true; //When it's the same research no need to make the research again

    lastSearch = acym_helperEditorWysid.queryGiphy; //We get the grid where we display the result and then we initiate masonry

    var $grid = jQuery('#acym__wysid__modal__giphy--results');
    $grid = $grid.masonry({
      itemSelector: 'img'
    }); //We make the call on giphy to get all the gif

    jQuery.ajax({
      url: 'https://api.giphy.com/v1/gifs/search?limit=' + limitSearch + '&offset=' + acym_helperEditorWysid.offsetGiphy + '&q=' + acym_helperEditorWysid.queryGiphy + '&api_key=6hR2IN2Db2aw4XdtNxLELKtOh66F5XSo&rating=PG',
      dataType: 'json'
    }).then(function (res) {
      if (res.data.length === 0 && acym_helperEditorWysid.offsetGiphy === 0) {
        //If there is no result
        if ($grid.data('masonry')) $grid.masonry('destroy');
        var $errorMessage = jQuery('#acym__wysid__modal__giphy--error_message');
        $errorMessage.html(ACYM_JS_TXT.ACYM_NO_RESULTS_FOUND);
        $errorMessage.show(); // We empty the results grid and empty it

        $grid.html('');
        $grid.hide();
        jQuery('#acym__wysid__modal__giphy--low-res-message').hide();
      } else {
        $grid.show(); //We remove the class new to only get the new images

        jQuery('.acym__wysid__modal__giphy__results--img--new').removeClass('acym__wysid__modal__giphy__results--img--new'); //We remove the title no result if there is one

        var _$errorMessage = jQuery('#acym__wysid__modal__giphy--error_message');

        _$errorMessage.html('');

        _$errorMessage.hide();

        jQuery('#acym__wysid__modal__giphy--low-res-message').show(); //if the offset is at 0 it means we reset the research or it's the first call

        if (acym_helperEditorWysid.offsetGiphy === 0) {
          //We remove all the images that could be in the grid
          $grid.masonry('remove', $grid.find('.acym__wysid__modal__giphy__results--img')); //We scroll at the top to get the first images

          jQuery('.acym__wysid__modal__giphy__results__container').scrollTop(0);
        } //We build the content of the grid => create img tab for every result


        var results = '';
        var columnWidth = $grid.width() / 4;
        jQuery.each(res.data, function (index, value) {
          var ratio = parseInt(columnWidth * 100 / parseInt(value.images.preview_gif.width)) / 100;
          var height = parseInt(value.images.preview_gif.height * ratio);
          results += "<img alt=\"\" class=\"acym__wysid__modal__giphy__results--img acym__wysid__modal__giphy__results--img--new\" style=\"height: ".concat(height, "px\" src=\"").concat(value.images.preview_gif.url, "\" data-full-res-src=\"").concat(value.images.downsized.url, "\">");
        }); //We append it and init masonry for them

        var $results = jQuery(results);
        $grid.append($results).masonry('appended', $results);
        $grid.masonry('layout'); //load more on scroll

        _this2.loadMoreGif(); //selection for the gif (put the border selected)


        _this2.setSelectGif(); //Set the research bar with the button


        _this2.setResearchInput();
      }
    }).fail(function () {
      //If the request fail we let know the user
      if ($grid.data('masonry')) $grid.masonry('destroy');
      var $errorMessage = jQuery('#acym__wysid__modal__giphy--error_message');
      $errorMessage.html(ACYM_JS_TXT.ACYM_COULD_NOT_LOAD_GIF_TRY_FEW_MINUTES);
      $errorMessage.show(); // We empty the results grid and empty it

      $grid.html('');
      $grid.hide();
      jQuery('#acym__wysid__modal__giphy--low-res-message').hide();
    }).always(function () {
      isSearching = false;
    });
  },
  setSelectGif: function setSelectGif() {
    //selection for the gif (put the border selected)
    jQuery('.acym__wysid__modal__giphy__results--img').off('click').on('click', function () {
      jQuery('.acym__wysid__modal__giphy__results--img--selected').removeClass('acym__wysid__modal__giphy__results--img--selected');
      jQuery(this).toggleClass('acym__wysid__modal__giphy__results--img--selected');
      jQuery('#acym__wysid__modal__giphy--insert').removeAttr('disabled');
    });
  },
  loadMoreGif: function loadMoreGif() {
    //load more on scroll
    jQuery('.acym__wysid__modal__giphy__results__container').on('scroll', function () {
      //We subtract 80 this way the call trigger before the user touch the bottom and he have to wait less time
      var scrollToDo = jQuery(this)[0].scrollHeight - 80;
      var scrollDone = jQuery(this).height() + jQuery(this).scrollTop(); //if we reach the end we load more entities

      if (scrollDone >= scrollToDo) {
        //once it's done we remove the event listener on the scroll to prevent calling X times the urls
        jQuery(this).off('scroll');
        acym_helperEditorWysid.offsetGiphy += limitSearch;
        acym_editorWysidGiphy.loadGif();
      }
    });
  },
  setResearchInput: function setResearchInput() {
    var _this3 = this;

    //Set the research bar with the button
    jQuery('#acym__wysid__modal__giphy--search--button').off('click').on('click', function () {
      _this3.makeNewResearch(jQuery('#acym__wysid__modal__giphy--search').val());
    });
    jQuery('#acym__wysid__modal__giphy--search').off('keyup').on('keyup', function (e) {
      var search = jQuery(this).val();
      var sameResearch = lastSearch === search;
      if (search === '' && lastSearch === defaultSearch || isSearching || sameResearch) return;
      clearTimeout(acym_helperEditorWysid.typingTimerGiphy);

      if (e.key === 'Enter') {
        acym_editorWysidGiphy.makeNewResearch(search);
      } else if (search.length >= 2) {
        acym_helperEditorWysid.typingTimerGiphy = setTimeout(function () {
          acym_editorWysidGiphy.makeNewResearch(search);
        }, 1000);
      } else if (search === '') {
        acym_editorWysidGiphy.makeNewResearch(search);
      }
    });
  },
  makeNewResearch: function makeNewResearch(query) {
    //If we make a new research we reset the research to 0 like it's the first we load the modal
    acym_helperEditorWysid.offsetGiphy = 0;
    acym_helperEditorWysid.queryGiphy = query === '' ? defaultSearch : query;
    var $grid = jQuery('#acym__wysid__modal__giphy--results');
    if ($grid.data('masonry')) $grid.masonry('destroy');
    this.loadGif();
  },
  insertGif: function insertGif() {
    //Function to insert gif
    jQuery('#acym__wysid__modal__giphy--insert').off('click').on('click', function () {
      var $selectedImg = jQuery('.acym__wysid__modal__giphy__results--img--selected'); //if no selected image => out

      if ($selectedImg.length === 0) return false;
      var content = '<tr class="acym__wysid__column__element" style="position: relative; top: inherit; left: inherit; right: inherit; bottom: inherit; height: auto;">';
      content += '<td class="large-12 acym__wysid__column__element__td">';
      content += '<div class="acym__wysid__tinymce--image">';
      content += '<div style="text-align: center" data-mce-style="text-align: center">';
      content += '<img alt="" class="acym__wysid__media__inserted acym__wysid__media__inserted--focus acym__wysid__media__giphy" src="' + $selectedImg.attr('data-full-res-src') + '" style="max-width: 100%; height: auto;  box-sizing: border-box; padding: 0 5px;display:block; margin-left: auto; margin-right: auto;"/>';
      content += '</div>';
      content += '</div>';
      content += '</td>';
      content += '</tr>';
      acym_helperEditorWysid.$focusElement.replaceWith(content); //Display none on the modal to hide it

      jQuery('#acym__wysid__modal').css('display', 'none');
      jQuery('.acym__wysid__media__inserted--focus').on('load', function () {
        jQuery(this).removeClass('acym__wysid__media__inserted--focus');
        acym_helperEditorWysid.setColumnRefreshUiWYSID();
        acym_editorWysidRowSelector.setZoneAndBlockOverlays();
        acym_editorWysidImage.setImageWidthHeightOnInsert();
        acym_editorWysidTinymce.addTinyMceWYSID();
      });
    });
  }
};
var acym_editorWysidImage = {
  setDoubleClickImage: function setDoubleClickImage() {
    jQuery('.acym__wysid__tinymce--image img').off('dblclick').on('dblclick', function () {
      if (jQuery(this).hasClass('acym__wysid__media__giphy')) {
        acym_editorWysidNewContent.addGiphyWYSID(jQuery(this).closest('.acym__wysid__column__element'));
      } else {
        acym_editorWysidImage.doubleClickImage(jQuery(this));
      }
    });
  },
  doubleClickImage: function doubleClickImage($element) {
    acym_editorWysidImage.openMediaManager($element.closest('.acym__wysid__column__element'));
  },
  addBackgroundImgToRows: function addBackgroundImgToRows($element) {
    var $deleteImage = jQuery('#acym__wysid__context__block__background-image__remove');

    if ('none' !== $element.css('background-image')) {
      $deleteImage.show();
    } else {
      $deleteImage.hide();
    }

    jQuery('#acym__wysid__context__block__background-image').off('click').on('click', function () {
      acym_editorWysidImage.openMediaManager($element, true);
    });
    $deleteImage.off('click').on('click', function () {
      $element.css({
        'background-image': 'none'
      });
      jQuery(this).hide();
    });
  },
  setImageWidthHeightOnInsert: function setImageWidthHeightOnInsert() {
    if (jQuery('.acym__wysid__media__inserted').length > 0) {
      setTimeout(function () {
        var $insertedImg = jQuery('.acym__wysid__media__inserted');
        $insertedImg.each(function () {
          jQuery(this).attr('height', jQuery(this).height()).attr('width', jQuery(this).width());
        });
      }, 200);
    }
  },
  openMediaManager: function openMediaManager(ui, rows) {
    if (ACYM_CMS === 'wordpress') {
      acym_editorWysidWordpress.addMediaWPWYSID(ui, rows);
    } else {
      acym_editorWysidJoomla.addMediaJoomlaWYSID(ui, rows);
    }
  },
  setChangeBuiltWithImage: function setChangeBuiltWithImage() {
    jQuery('[name="acym__wysid__built-with__text__color"]').off('change').on('change', function () {
      var $imageBuiltWith = jQuery('[title="poweredby"]');
      var selected = jQuery(this).val();
      var previous = selected === 'white' ? 'black' : 'white';
      $imageBuiltWith.attr('src', $imageBuiltWith.attr('src').replace(previous, selected));
    });
  }
};
var acym_editorWysidJoomla = {
  addMediaJoomlaWYSID: function addMediaJoomlaWYSID(ui, rows) {
    rows = rows === undefined ? false : rows;
    acym_helperEditorWysid.$focusElement = jQuery(ui);
    var $modalUi = jQuery('#acym__wysid__modal__joomla-image__ui__iframe');
    var joomla4 = jQuery('#acym__wysid__modal__joomla-image__ui__actions').length > 0;
    $modalUi.css({
      'height': joomla4 ? '90%' : '100%',
      'width': '100%'
    });
    $modalUi.contents().find('.chzn-container-single').attr('style', '').css('width', '150px');
    acym_editorWysidJoomla.setInsertMediaJoomlaWYSID($modalUi, rows);
    $modalUi.on('load', function () {
      acym_editorWysidJoomla.setInsertMediaJoomlaWYSID($modalUi, rows);
    });
    jQuery('#acym__wysid__modal__joomla-image').css('display', 'inherit');
  },
  cancelMediaSelection: function cancelMediaSelection(rows) {
    jQuery('#acym__wysid__modal__joomla-image').hide();

    if (!rows) {
      if (acym_helperEditorWysid.$focusElement.length && acym_helperEditorWysid.$focusElement.html().indexOf('insert_photo') !== -1) {
        acym_helperEditorWysid.$focusElement.replaceWith('');
      }

      acym_helperEditorWysid.setColumnRefreshUiWYSID();
    }
  },
  validateMediaSelection: function validateMediaSelection(isRowBackgroundImage, imagesUrls, altValue, valueTitle, valueCaption) {
    // No image selected and no url provided
    if (acym_helper.empty(imagesUrls)) {
      alert(ACYM_JS_TXT.ACYM_SELECT_A_PICTURE);
      return;
    } // If we're selecting a background image for an editor row


    if (isRowBackgroundImage) {
      var linkImage = imagesUrls.pop(); // If the name isn't correct, ask for confirmation

      if (linkImage.indexOf('..') >= 0 && !confirm(ACYM_JS_TXT.ACYM_INSERT_IMG_BAD_NAME)) return;
      var padding = acym_helperEditorWysid.$focusElement.css('padding-top');

      if (!acym_helperEditorWysid.$focusElement.hasClass('acym__wysid__template__content')) {
        acym_helperEditorWysid.$focusElement.css('background-color', '').attr('bgcolor', '');
        acym_helperEditorWysid.$focusElement.attr('style', 'background-image: url(\'' + linkImage + '\'); background-size: cover; background-position: center; background-repeat: no-repeat; padding: ' + padding + ' 0').attr('width', acym_helperEditorWysid.$focusElement.width());
      } else {
        acym_helperEditorWysid.$focusElement.attr('style', 'background-image: url(\'' + linkImage + '\'); background-size: cover; background-position: center; background-repeat: no-repeat; padding: ' + padding + ' 0 40px 0');

        if (acym_helperEditorWysid.$focusElement.css('background-image') !== 'none') {
          jQuery('#acym__wysid__background-image__template-delete').css('display', 'flex');
        }
      }

      acym_editorWysidNotifications.addEditorNotification({
        'message': ACYM_JS_TXT.ACYM_BECARFUL_BACKGROUND_IMG,
        'level': 'warning'
      });
    } else {
      // We're selecting an image to insert in the email
      var content = '';
      var $link = acym_helperEditorWysid.$focusElement.find('.acym__wysid__link__image');

      for (var i in imagesUrls) {
        if (!imagesUrls.hasOwnProperty(i)) continue;
        var _linkImage = imagesUrls[i]; // If the name isn't correct, ask for confirmation

        if (_linkImage.indexOf('..') >= 0 && !confirm(ACYM_JS_TXT.ACYM_INSERT_IMG_BAD_NAME)) return;
        var alt = '';
        var title = '';
        var caption = '';
        if (altValue !== undefined) alt = altValue;
        if (valueTitle !== undefined) title = valueTitle;
        if (valueCaption !== undefined) caption = valueCaption;
        var classImage = parseInt(i) === 0 ? 'acym__wysid__media__inserted--selected' : '';
        content += '<tr class="acym__wysid__column__element" style="position: relative; top: inherit; left: inherit; right: inherit; bottom: inherit; height: auto;">';
        content += '<td class="large-12 acym__wysid__column__element__td">';
        content += '<div class="acym__wysid__tinymce--image">';
        content += '<div style="text-align: center; " data-mce-style="text-align: center">';
        if ($link.length > 0 && parseInt(i) === 0) content += '<a href="' + $link.attr('href') + '" class="acym__wysid__link__image" target="_blank">';
        content += '<img class="acym__wysid__media__inserted ' + classImage + '" style="max-width: 100%; height: auto; box-sizing: border-box; padding: 0 5px; display:block; margin-left: auto; margin-right: auto;" src="' + _linkImage + '" alt="' + acym_helper.escape(alt) + '" title="' + acym_helper.escape(title) + '" hspace="0"/>';

        if (caption.length > 0) {
          content += acym_editorWysidContextModal.getImageCaptionDiv(caption);
        }

        if ($link.length > 0) content += '</a>';
        content += '</div>';
        content += '</div>';
        content += '</td>';
        content += '</tr>';
        jQuery('#acym__wysid__context__image__alt').val(alt);
        jQuery('#acym__wysid__context__image__title').val(title);
        jQuery('#acym__wysid__context__image__caption').val(caption);
      }

      acym_helperEditorWysid.$focusElement.replaceWith(content);
      var imgSelected = jQuery('.acym__wysid__media__inserted--selected');
      jQuery('#acym__wysid__context__image__width').val(imgSelected.width());
      jQuery('#acym__wysid__context__image__height').val(imgSelected.height());
      acym_editorWysidImage.setImageWidthHeightOnInsert();
      acym_editorWysidTinymce.addTinyMceWYSID();
    } // Close the image selection modal


    jQuery('#acym__wysid__modal__joomla-image').hide();
    acym_helperEditorWysid.setColumnRefreshUiWYSID();
  },
  setInsertMediaJoomlaWYSID: function setInsertMediaJoomlaWYSID($modalUi, rows) {
    // Joomla 4
    jQuery('#acym__wysid__modal__joomla-image__ui__actions__cancel').off('click').on('click', function () {
      acym_editorWysidJoomla.cancelMediaSelection(rows);
    });
    jQuery('#acym__wysid__modal__joomla-image__ui__actions__select').off('click').on('click', function () {
      // 1 - Get current folder
      var folderPath = ACYM_ROOT_URI;
      $modalUi.contents().find('.media-breadcrumb-item a').each(function () {
        folderPath += jQuery(this).text().trim() + '/';
      }); // 2 - Get selected image(s)

      var imagesUrls = []; // When selecting images from the grid view

      $modalUi.contents().find('.media-browser-grid .media-browser-item.selected .media-browser-image .media-browser-item-info').each(function () {
        imagesUrls.push(folderPath + jQuery(this).text().trim());
      }); // When selecting images from the list view instead of grid view

      if (imagesUrls.length === 0) {
        $modalUi.contents().find('.media-browser .media-browser-item.selected').each(function () {
          if (!acym_helper.empty(jQuery(this).find('.size').text().trim())) {
            imagesUrls.push(folderPath + jQuery(this).find('.name').text().trim());
          }
        });
      }

      var altValue = jQuery('#acym__wysid__context__image__alt').val();
      var valueTitle = jQuery('#acym__wysid__context__image__title').val();
      var valueCaption = jQuery('#acym__wysid__context__image__caption').val();
      acym_editorWysidJoomla.validateMediaSelection(rows, imagesUrls, altValue, valueTitle, valueCaption);
    }); // Joomla 3

    $modalUi.contents().find('.button-cancel').attr('onclick', '').off('click').on('click', function () {
      acym_editorWysidJoomla.cancelMediaSelection(rows);
    });
    $modalUi.contents().find('.pull-right .btn-success, .pull-right .btn-primary').attr('onclick', '').off('click').on('click', function () {
      var urlImg = $modalUi.contents().find('#f_url').val();
      var altValue = $modalUi.contents().find('#f_alt').val();
      var valueTitle = $modalUi.contents().find('#f_title').val();
      var valueCaption = $modalUi.contents().find('#f_caption').val();
      var imagesUrls = [];

      if (!acym_helper.empty(urlImg)) {
        if (urlImg.match('^' + ACYM_JOOMLA_MEDIA_FOLDER) || urlImg.match('^' + ACYM_JOOMLA_MEDIA_FOLDER_IMAGES)) {
          urlImg = ACYM_JOOMLA_MEDIA_IMAGE + urlImg;
        }

        imagesUrls.push(urlImg);
      }

      acym_editorWysidJoomla.validateMediaSelection(rows, imagesUrls, altValue, valueTitle, valueCaption);
    });
  }
};
var acym_editorWysidModal = {
  setModalWindowWYSID: function setModalWindowWYSID() {
    // Modal used when saving custom zones or inserting GIFs / videos for example
    jQuery('.acym__wysid__modal--close').on('click', function () {
      var modal = jQuery('.acym__wysid__modal');
      modal.hide();
      modal.removeClass('acym__wysid__modal__tiny'); // Don't remove the previous element if it's a TABLE => it's a zone we were saving but we closed the modal to abort
      // Don't remove the previous element if it's a TR => it's a GIF we edited then closed the modal without replacing by a new GIF

      if (acym_helperEditorWysid.$focusElement.length && acym_helperEditorWysid.$focusElement.prop('tagName') !== 'TABLE' && acym_helperEditorWysid.$focusElement.prop('tagName') !== 'TR') {
        acym_helperEditorWysid.$focusElement.replaceWith('');
      }

      acym_editorWysidRowSelector.setZoneAndBlockOverlays();
      acym_helperEditorWysid.addDefaultBlock();
    });
    if (ACYM_CMS !== 'joomla') return;
    jQuery('.acym__wysid__modal__joomla-image--close').on('click', function () {
      jQuery('#acym__wysid__modal__joomla-image').hide();

      if (acym_helperEditorWysid.$focusElement.length && acym_helperEditorWysid.$focusElement.prop('tagName') !== 'TR' && !acym_helperEditorWysid.$focusElement.hasClass('acym__wysid__template__content')) {
        acym_helperEditorWysid.$focusElement.replaceWith('');
      }
    });
  },
  setDTextInsertion: function setDTextInsertion() {
    var lastKnownRangeInEditor = null;
    jQuery('#insertButton').off('click').on('click', function () {
      var $toInsert = jQuery('#dtextcode').val();
      if (!$toInsert) return;
      var mailId = jQuery('input[name="editor_autoSave"]').val();
      var ajaxUrl = ACYM_AJAX_URL + '&page=acymailing_dynamics&ctrl=' + acym_helper.ctrlDynamics + '&task=replaceDummy';
      acym_helper.get(ajaxUrl, {
        'mailId': mailId,
        'code': $toInsert
      }).then(function (response) {
        if (!response) {
          response = {
            'data': {
              'content': $toInsert
            }
          };
        }

        var toInsert = '<span id="acymRangeId" class="acym_dynamic mceNonEditable" data-dynamic="' + $toInsert + '">';
        toInsert += response.data.content;
        toInsert += '<em class="acym_remove_dynamic acymicon-close">&zwj;</em></span> &zwj;';

        if (!acym_helper.empty(lastKnownRangeInEditor) && !acym_editorWysidModal.isSelectionInEditor()) {
          var selection = window.getSelection();
          selection.removeAllRanges();
          selection.addRange(lastKnownRangeInEditor);
        }

        tinyMCE.activeEditor.selection.setContent(toInsert);
        acym_helperEditorWysid.setColumnRefreshUiWYSID();
        acym_editorWysidDynamic.setDTextActions();
        var dtext = document.getElementById('acymRangeId');
        jQuery(dtext).attr('contenteditable', 'false');
        dtext.removeAttribute('id');
      });
    });
    jQuery(document).on('selectionchange', function () {
      if (acym_editorWysidModal.isSelectionInEditor()) {
        lastKnownRangeInEditor = window.getSelection().getRangeAt(0);
      }
    });
  },
  isSelectionInEditor: function isSelectionInEditor() {
    var $selectedNode = jQuery(document.getSelection().anchorNode);
    return $selectedNode.hasClass('acym__wysid__tinymce--text') || $selectedNode.closest('.acym__wysid__tinymce--text').length > 0;
  }
};
var acym_editorWysidMultilingual = {
  currentLanguage: 'main',
  selectedLanguage: '',
  forceReload: false,
  setLanguageSelection: function setLanguageSelection() {
    jQuery('.acym__wysid__edit__languages__selection img, .acym__wysid__edit__languages__selection__check').off('click').on('click', function () {
      acym_editorWysidMultilingual.selectedLanguage = jQuery(this).parent().find('img').attr('acym-data-lang');
      if (acym_editorWysidMultilingual.selectedLanguage === 'main' && acym_editorWysidMultilingual.currentLanguage === 'main') return false;
      var currentSubject = jQuery('input[name="mail[subject]"]').val();
      var currentpreview = jQuery('input[name="mail[preheader]"]').val();
      var currentContent = jQuery('#editor_content').val();

      if (jQuery('#acym__wysid__edit__multilingual__creation').hasClass('is-hidden') && acym_helper.empty(currentSubject) && (!acym_helper.empty(currentpreview) || !acym_helper.empty(currentContent))) {
        if (acym_editorWysidMultilingual.selectedLanguage !== acym_editorWysidMultilingual.currentLanguage) {
          acym_helper.alert(ACYM_JS_TXT.ACYM_ENTER_SUBJECT);
        }

        return false;
      }

      if (acym_editorWysidMultilingual.selectedLanguage === acym_editorWysidMultilingual.currentLanguage && !acym_editorWysidMultilingual.forceReload) {
        return false;
      }

      acym_editorWysidMultilingual.forceReload = false;

      if (acym_editorWysidMultilingual.selectedLanguage === 'main') {
        jQuery('.acym__wysid__edit__preview__reset').addClass('is-hidden');
      } else {
        jQuery('.acym__wysid__edit__preview__reset').removeClass('is-hidden');
      } // Select the flag


      jQuery('.acym__wysid__edit__languages-selected').removeClass('acym__wysid__edit__languages-selected');
      jQuery('[acym-data-lang="' + acym_editorWysidMultilingual.selectedLanguage + '"]').closest('.acym__wysid__edit__languages__selection').addClass('acym__wysid__edit__languages-selected');
      var subject = jQuery('input[name="multilingual[' + acym_editorWysidMultilingual.selectedLanguage + '][subject]"]').val();
      var preview = jQuery('input[name="multilingual[' + acym_editorWysidMultilingual.selectedLanguage + '][preview]"]').val();
      var content = jQuery('input[name="multilingual[' + acym_editorWysidMultilingual.selectedLanguage + '][content]"]').val();
      var autosave = jQuery('input[name="multilingual[' + acym_editorWysidMultilingual.selectedLanguage + '][autosave]"]').val();
      var settings = jQuery('input[name="multilingual[' + acym_editorWysidMultilingual.selectedLanguage + '][settings]"]').val();
      var stylesheet = jQuery('input[name="multilingual[' + acym_editorWysidMultilingual.selectedLanguage + '][stylesheet]"]').val();

      if (acym_editorWysidMultilingual.selectedLanguage !== 'main' && acym_helper.empty(subject) && acym_helper.empty(preview) && acym_helper.empty(content)) {
        jQuery(this).closest('.acym__content').find('> div').addClass('is-hidden');
        jQuery('#acym__wysid__edit__languages, #acym__wysid__edit__multilingual__creation').removeClass('is-hidden');
        acym_editorWysidMultilingual.switchLanguage('', '', '', '');
      } else {
        acym_editorWysidMultilingual.switchLanguage(subject, preview, content, autosave, settings, stylesheet);
        acym_editorWysidMultilingual.showEdition();
      }
    });
    jQuery('#acym__wysid__edit__multilingual__creation__default').off('click').on('click', function () {
      acym_editorWysidMultilingual.switchLanguage(jQuery('input[name="multilingual[main][subject]"]').val(), jQuery('input[name="multilingual[main][preview]"]').val(), jQuery('input[name="multilingual[main][content]"]').val(), '', jQuery('input[name="multilingual[main][settings]"]').val(), jQuery('input[name="multilingual[main][stylesheet]"]').val());
      acym_editorWysidMultilingual.showEdition();
    });
    jQuery('#acym__wysid__edit__multilingual__creation__scratch').off('click').on('click', function () {
      acym_editorWysidMultilingual.switchLanguage('', '', jQuery('#default_template').val(), '');
      acym_editorWysidMultilingual.showEdition();
    });
    jQuery('#acym__wysid__edit__preview__reset__content').off('click').on('click', function () {
      if (acym_helper.confirm(ACYM_JS_TXT.ACYM_RESET_TRANSLATION)) {
        jQuery('input[name="multilingual[' + acym_editorWysidMultilingual.currentLanguage + '][subject]"]').val('');
        jQuery('input[name="multilingual[' + acym_editorWysidMultilingual.currentLanguage + '][preview]"]').val('');
        jQuery('input[name="multilingual[' + acym_editorWysidMultilingual.currentLanguage + '][content]"]').val('');
        jQuery('input[name="multilingual[' + acym_editorWysidMultilingual.currentLanguage + '][settings]"]').val('');
        jQuery('input[name="multilingual[' + acym_editorWysidMultilingual.currentLanguage + '][stylesheet]"]').val('');
        jQuery('input[name="mail[subject]"]').val('');
        jQuery('input[name="mail[preheader]"]').val('');
        jQuery('#editor_content').val('');
        acym_editorWysidMultilingual.forceReload = true;
        var $currentFlag = jQuery('img[acym-data-lang="' + acym_editorWysidMultilingual.currentLanguage + '"]');
        $currentFlag.trigger('click').closest('.acym__wysid__edit__languages__selection').removeClass('acym__wysid__edit__languages__selection-done');
      }
    });
  },
  storeCurrentValues: function storeCurrentValues() {
    var saveStep = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
    // Make sure we're in a multilingual context
    var currentSubject = jQuery('input[name="mail[subject]"]').val();
    if (!acym_helperModal.isMultilingualEdition) return true;

    if (jQuery('#acym__wysid__edit__multilingual__creation').hasClass('is-hidden') && acym_helper.empty(currentSubject)) {
      return true;
    }

    jQuery('img[acym-data-lang="' + this.currentLanguage + '"]').closest('.acym__wysid__edit__languages__selection').addClass('acym__wysid__edit__languages__selection-done'); // Save the value of the 3 fields

    jQuery('input[name="multilingual[' + this.currentLanguage + '][subject]"]').val(currentSubject);
    jQuery('input[name="multilingual[' + this.currentLanguage + '][preview]"]').val(jQuery('input[name="mail[preheader]"]').val());
    jQuery('input[name="multilingual[' + this.currentLanguage + '][content]"]').val(jQuery('#editor_content').val());
    jQuery('input[name="multilingual[' + this.currentLanguage + '][autosave]"]').val(jQuery('#editor_autoSave').val());
    jQuery('input[name="multilingual[' + this.currentLanguage + '][settings]"]').val(jQuery('#editor_settings').val());
    jQuery('input[name="multilingual[' + this.currentLanguage + '][stylesheet]"]').val(jQuery('#editor_stylesheet').val());

    if (saveStep) {
      jQuery('img[acym-data-lang="main"]').trigger('click');
    }

    return true;
  },
  switchLanguage: function switchLanguage(newSubject, newPreview, newContent, newAutosave) {
    var settings = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';
    var stylesheet = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : '';
    // Save the value of the 3 fields
    this.storeCurrentValues(); // Set the empty value for the 3 fields

    jQuery('input[name="mail[subject]"]').val(newSubject);
    jQuery('input[name="mail[preheader]"]').val(newPreview);
    jQuery('#editor_content').val(newContent);
    jQuery('#editor_autoSave').val(newAutosave);
    if (settings !== '') jQuery('#editor_settings').val(settings);
    if (settings !== '') jQuery('#editor_stylesheet').val(stylesheet);
    acym_editorWysidVersioning.checkForUnsavedVersion(); // Set the new current language

    this.currentLanguage = this.selectedLanguage;
  },
  showEdition: function showEdition() {
    jQuery('#acym__wysid__edit .acym__content > div').removeClass('is-hidden');
    jQuery('#acym__wysid__edit__multilingual__creation').addClass('is-hidden'); // Reload the content preview

    acym_helperPreview.loadIframe('acym__wysid__preview__iframe__acym__wysid__email__preview', false);
  },
  setClickStartFromTemplate: function setClickStartFromTemplate() {
    if (!acym_helperModal.isMultilingualEdition) return;
    jQuery('.acym__templates__oneTpl a').off('click').on('click', function (event) {
      event.preventDefault();
    });
    jQuery('.acym__templates__oneTpl').off('click').on('click', function (event) {
      var _this4 = this;

      event.preventDefault();
      var $loader = jQuery('.acym__template__choose__modal__loader');
      $loader.css('display', 'flex');
      var data = {
        ctrl: ACYM_IS_ADMIN ? 'mails' : 'frontmails',
        task: 'getMailByIdAjax',
        id: this.getAttribute('id')
      };
      acym_helper.get(ACYM_AJAX_URL, data).then(function (res) {
        if (res.error) {
          acym_helperNotification.addNotification(res.message, 'error', true);
          return;
        }

        acym_editorWysidMultilingual.switchLanguage(res.data.subject, res.data.preheader, res.data.body, '', res.data.settings, res.data.stylesheet);
        acym_editorWysidMultilingual.showEdition();
        jQuery(_this4).closest('#acym__template__choose__modal').find('.close-button').trigger('click');
        $loader.css('display', 'none');
      });
    });
  }
};
var acym_editorWysidNewContent = {
  addTitleWYSID: function addTitleWYSID() {
    var content = '<tr class="acym__wysid__column__element" style="position: relative; top: inherit; left: inherit; right: inherit; bottom: inherit; height: auto;">';
    content += '<td class="large-12 acym__wysid__column__element__td">';
    content += '<div class="acym__wysid__tinymce--text">';
    content += '<h1 class="acym__wysid__tinymce--title--placeholder">&zwj;</h1>';
    content += '</div>';
    content += '</td>';
    content += '</tr>';
    return content;
  },
  addTextWYSID: function addTextWYSID() {
    var content = '<tr class="acym__wysid__column__element" style="position: relative; top: inherit; left: inherit; right: inherit; bottom: inherit; height: auto;">';
    content += '<td class="large-12 acym__wysid__column__element__td">';
    content += '<div class="acym__wysid__tinymce--text">';
    content += '<p class="acym__wysid__tinymce--text--placeholder">&zwj;</p>';
    content += '</div>';
    content += '</td>';
    content += '</tr>';
    return content;
  },
  addButtonWYSID: function addButtonWYSID() {
    var content = '<tr class="acym__wysid__column__element" style="position: relative; top: inherit; left: inherit; right: inherit; bottom: inherit; height: auto;">';
    content += '<td class="large-12 acym__wysid__column__element__td">';
    content += '<div style="text-align: center;box-sizing: inherit;">';
    content += '<a class="acym__wysid__column__element__button acym__wysid__content-no-settings-style" style="background-color: #222222; color: white; padding: 25px 30px; max-width: 100%; overflow: unset; border: 1px solid white; text-overflow: ellipsis; text-align: center; text-decoration: none; word-break: break-word;display: inline-block; box-shadow: none; font-family: Arial; font-size: 14px; cursor: pointer; line-height: 1; border-radius: 0" href="#" target="_blank">' + ACYM_JS_TXT.ACYM_BUTTON + '</a>';
    content += '</div>';
    content += '</td>';
    content += '</tr>';
    return content;
  },
  addSpaceWYSID: function addSpaceWYSID() {
    var content = '<tr class="acym__wysid__column__element" style="position: relative; top: inherit; left: inherit; right: inherit; bottom: inherit; height: auto;">';
    content += '<td class="large-12 acym__wysid__column__element__td" style="height: 50px">';
    content += '<span class="acy-editor__space" style="display:block; padding: 0;margin: 0; height: 100%"></span>';
    content += '</td>';
    content += '</tr>';
    return content;
  },
  addMediaWysid: function addMediaWysid(ui) {
    var content = '<tr class="acym__wysid__column__element" style="position: relative; top: inherit; left: inherit; right: inherit; bottom: inherit; height: auto;">';
    content += '<td class="large-12 acym__wysid__column__element__td">';
    content += '<div class="acym__wysid__tinymce--image acym__wysid__media__inserted--focus">';
    content += '<div style="text-align: center" data-mce-style="text-align: center">';
    content += '<img class="acym__wysid__media__inserted" src="' + ACYM_MEDIA_URL + 'images/default_image.png" title="image" hspace="0" alt="" style="max-width: 100%; height: auto;  box-sizing: border-box; padding: 0 5px;display:inline-block; margin-left: auto; margin-right: auto;"/>';
    content += '</div>';
    content += '</div>';
    content += '</td>';
    content += '</tr>';
    jQuery(ui).replaceWith(content);
    jQuery('.acym__wysid__media__inserted--focus img').off('load').on('load', function () {
      var $editor = jQuery(this).closest('.acym__wysid__media__inserted--focus');
      $editor.removeClass('acym__wysid__media__inserted--focus');
      acym_helperEditorWysid.setColumnRefreshUiWYSID();
      acym_editorWysidTinymce.addTinyMceWYSID(); // This timeout is here to make sure tinyMCE is initialised on images

      setTimeout(function () {
        $editor.find('img').trigger('click');
        document.querySelector('.acym__wysid__media__inserted--selected').click();
        acym_editorWysidImage.setImageWidthHeightOnInsert();
        acym_editorWysidTinymce.addTinyMceWYSID();
      }, 500);
    });
  },
  addVideoWYSID: function addVideoWYSID(ui) {
    acym_helperEditorWysid.$focusElement = jQuery(ui);
    acym_editorWysidNewContent.setModalVideoWYSID();
    jQuery('#acym__wysid__modal').css('display', 'inherit');
  },
  addGiphyWYSID: function addGiphyWYSID(ui) {
    acym_helperEditorWysid.$focusElement = jQuery(ui);
    acym_editorWysidNewContent.setModalGiphyWYSID();
    jQuery('#acym__wysid__modal').css('display', 'inherit');
  },
  addFollowWYSID: function addFollowWYSID() {
    var content = '<tr class="acym__wysid__column__element" style="position: relative; top: inherit; left: inherit; right: inherit; bottom: inherit; height: auto;">';
    content += '<td class="large-12 acym__wysid__column__element__td">';
    content += '<div style="text-align: center;">';
    content += '<p class="acym__wysid__column__element__follow" style="text-align: center; cursor: pointer; padding: 0;margin: 0;">';
    content += '<a class="acym__wysid__column__element__follow__facebook" href="">';
    content += '<img hspace="0" style="display: inline-block; max-width: 100%; height: auto;  box-sizing: border-box; width: 40px; padding: 3px;" src="' + acym_helperEditorWysid.socialMedia.facebook.src + '" width="40" alt="facebook">';
    content += '</a>';
    content += '<a class="acym__wysid__column__element__follow__twitter" href="">';
    content += '<img hspace="0" style="display: inline-block; max-width: 100%; height: auto;  box-sizing: border-box; width: 40px; padding: 3px;" src="' + acym_helperEditorWysid.socialMedia.twitter.src + '"  width="40" alt="twitter">';
    content += '</a>';
    content += '</p>';
    content += '</div>';
    content += '</td>';
    content += '</tr>';
    return content;
  },
  addSeparatorWysid: function addSeparatorWysid() {
    var content = '<tr class="acym__wysid__column__element acym__wysid__column__element__separator cursor-pointer" style="position: relative; top: inherit; left: inherit; right: inherit; bottom: inherit; height: auto;">';
    content += '<td class="large-12 acym__wysid__column__element__td">';
    content += '<hr style="color: black; size: 3px; border-bottom: 3px solid black; width: 100%; border-top: none; border-left: none; border-right: none;" class="acym__wysid__row__separator">';
    content += '</td>';
    content += '</tr>';
    return content;
  },
  addCustomZoneWYSID: function addCustomZoneWYSID() {
    acym_editorWysidNewContent.setModalCustomZoneWYSID();
    var modal = jQuery('#acym__wysid__modal');
    modal.addClass('acym__wysid__modal__tiny');
    modal.css('display', 'inherit');
  },
  setModalGiphyWYSID: function setModalGiphyWYSID() {
    var content = '<div class="grid-container"><div class="cell grid-x align-center grid-padding-x">';
    content += '<img hspace="0" class="cell" id="acym__wysid__modal__giphy--image" src="' + ACYM_MEDIA_URL + 'images/giphy.png" alt="">';
    content += '<div class="cell grid-x grid-margin-x"><input class="cell auto" type="text" id="acym__wysid__modal__giphy--search" placeholder="' + ACYM_JS_TXT.ACYM_SEARCH_FOR_GIFS + '">';
    content += '<button type="button" class="cell shrink button button-secondary" id="acym__wysid__modal__giphy--search--button">' + ACYM_JS_TXT.ACYM_SEARCH_GIFS + '</button></div>';
    content += '<p class="cell text-center" id="acym__wysid__modal__giphy--low-res-message">' + ACYM_JS_TXT.ACYM_GIPHY_LOW_RES_TEXT + '</p>';
    content += '</div></div>';
    jQuery('#acym__wysid__modal__ui__fields').html(content);
    content = '<div class="grid-container acym__wysid__modal__giphy__results__container">';
    content += '<h3 class="cell text-center acym__title__primary__color" id="acym__wysid__modal__giphy--error_message" style="display: none"></h3>';
    content += '<div class="cell grid-x grid-padding-x grid-margin-x grid-margin-y margin-top-1" id="acym__wysid__modal__giphy--results"></div></div>';
    jQuery('#acym__wysid__modal__ui__display').html(content);
    content = '<div class="grid-container"><div class="cell grid-x align-right grid-padding-x">';
    content += '<button class="button" type="button" id="acym__wysid__modal__giphy--insert" disabled="disabled">' + ACYM_JS_TXT.ACYM_INSERT + '</button>';
    content += '</div></div>';
    jQuery('#acym__wysid__modal__ui__search').html(content);
    acym_editorWysidGiphy.makeNewResearch('');
    acym_editorWysidGiphy.insertGif();
  },
  setModalVideoWYSID: function setModalVideoWYSID() {
    var content = '<div class="grid-container">';
    content += '<div class="grid-x grid-padding-x grid-padding-y">';
    content += '<div class="auto cell"></div>';
    content += '<div class="small-3 medium-3 cell" style="display: inline-flex">';
    content += '<img alt="" style="display: block; margin: auto; max-height: 50px" src="' + ACYM_MEDIA_URL + 'images/vimeo.png">';
    content += '</div>';
    content += '<div class="small-3 medium-3 cell" style="display: inline-flex">';
    content += '<img alt="" style="display: block; margin: auto; max-height: 50px" src="' + ACYM_MEDIA_URL + 'images/youtube.png">';
    content += '</div>';
    content += '<div class="small-4 medium-3 cell" style="display: inline-flex; padding: 15px 0 0 30px;">';
    content += '<img alt="" style="display: block; margin: auto; max-height: 50px" src="' + ACYM_MEDIA_URL + 'images/dailymotion.png">';
    content += '</div>';
    content += '<div class="auto cell"></div>';
    content += '<div class="small-8 medium-10 cell">';
    content += '<input id="acym__wysid__modal__video__search" type="text" placeholder="Url">';
    content += '</div>';
    content += '<div class="small-4 medium-2 cell">';
    content += '<button type="button" id="acym__wysid__modal__video__load" class="button primary expanded ">' + ACYM_JS_TXT.ACYM_LOAD + '</button>';
    content += '</div>';
    content += '</div>';
    content += '</div>';
    jQuery('#acym__wysid__modal__ui__fields').html(content);
    content = '<div class="grid-container">';
    content += '<div class="grid-x grid-padding-x">';
    content += '<div id="acym__wysid__modal__video__result" class="medium-12 cell"></div>';
    content += '</div>';
    content += '</div>';
    jQuery('#acym__wysid__modal__ui__display').html(content);
    content = '<div class="grid-container">';
    content += '<div class="grid-x grid-padding-x">';
    content += '<div class="small-8 medium-10 cell"></div>';
    content += '<div class="small-4 medium-2 cell">';
    content += '<button type="button" id="acym__wysid__modal__video__insert" class="button primary expanded disabled">' + ACYM_JS_TXT.ACYM_INSERT + '</button>';
    content += '</div>';
    content += '</div>';
    content += '</div>';
    jQuery('#acym__wysid__modal__ui__search').html(content);
    var $loadBtn = jQuery('#acym__wysid__modal__video__load');
    var $insertBtn = jQuery('#acym__wysid__modal__video__insert');
    var $searchInput = jQuery('#acym__wysid__modal__video__search');
    var $result = jQuery('#acym__wysid__modal__video__result');
    $loadBtn.off('click').on('click', function () {
      var url = $searchInput.val();
      $insertBtn.off('click').on('click', function () {
        var insertedVideo = '<tr class="acym__wysid__column__element">' + '<td class="large-12 acym__wysid__column__element__td">' + '<div class="acym__wysid__tinymce--image">' + '<div style="text-align: center" data-mce-style="text-align: center">' + $result.html() + '</div>' + '</div>' + '</td>' + '</tr>';
        acym_helperEditorWysid.$focusElement.replaceWith(insertedVideo);
        jQuery('#acym__wysid__modal').css('display', 'none');
        acym_helperEditorWysid.setColumnRefreshUiWYSID();
        acym_editorWysidRowSelector.setZoneAndBlockOverlays();
        acym_editorWysidTinymce.addTinyMceWYSID();
      });
      var youtubeId = url.match(/(?:https?:\/{2})?(?:w{3}\.)?youtu(?:be)?\.(?:com|be)(?:\/watch\?v=|\/)([^\s&]+)/);
      var dailymotionId = url.match(/^(?:(?:http|https):\/\/)?(?:www.)?(dailymotion\.com|dai\.ly)\/((video\/([^_]+))|(hub\/([^_]+)|([^\/_]+)))$/);
      var vimeoId = url.match(/^.*(vimeo\.com\/)((channels\/[A-z]+\/)|(groups\/[A-z]+\/videos\/))?([0-9]+)/);

      if (youtubeId != null) {
        $result.html('<a href="https://www.youtube.com/watch?v=' + youtubeId[1] + '" target="_blank" class="acym__wysid__link__image"><img alt="" src="https://img.youtube.com/vi/' + youtubeId[1] + '/0.jpg" style="max-width: 100%; height: auto; box-sizing: border-box; padding: 0 5px; display: block;margin-left: auto; margin-right: auto; float: none;"/></a>');
        $insertBtn.removeClass('disabled');
      } else if (dailymotionId != null) {
        if (dailymotionId[4] !== undefined) {
          $result.html('<a href="https://www.dailymotion.com/video/' + dailymotionId[4] + '" target="_blank" class="acym__wysid__link__image"><img alt="" src="https://www.dailymotion.com/thumbnail/video/' + dailymotionId[4] + '" style="max-width: 100%; height: auto; box-sizing: border-box; padding: 0 5px; display: block; margin-left: auto; margin-right: auto; float: none;"/></a>');
        } else {
          $result.html('<a href="https://www.dailymotion.com/video/' + dailymotionId[2] + '" target="_blank" class="acym__wysid__link__image"><img alt="" src="https://www.dailymotion.com/thumbnail/video/' + dailymotionId[2] + '" style="max-width: 100%; height: auto; box-sizing: border-box; padding: 0 5px; display: block; margin-left: auto; margin-right: auto; float: none;"/></a>');
        }

        $insertBtn.removeClass('disabled');
      } else if (vimeoId != null) {
        var script = document.createElement('script');
        script.id = 'vimeothumb';
        script.type = 'text/javascript';
        script.src = 'https://vimeo.com/api/v2/video/' + vimeoId[5] + '.json?callback=showVimeoThumbnail';
        jQuery('#acym__wysid__modal__video__search').before(script);
        jQuery('#vimeothumb').remove();
      } else {
        $result.html('<div class="acym__wysid__error_msg" style="text-align: center; margin-top: 100px;">' + ACYM_JS_TXT.ACYM_NON_VALID_URL + '</div>');
        $insertBtn.addClass('disabled').off('click');
      }

      $result.off('click').on('click', function (e) {
        e.preventDefault();
      });
    });
    $searchInput.off('keyup').on('keyup', function (e) {
      if (e.key === 'Enter') e.preventDefault();

      if (e.key === 'Enter' || e.key === ',' || e.key === ';') {
        $loadBtn.trigger('click');
      }
    });
  },
  setModalCustomZoneWYSID: function setModalCustomZoneWYSID() {
    var content = "\n            <div class=\"grid-x margin-y\">\n                <h5 class=\"cell text-center\">".concat(ACYM_JS_TXT.ACYM_NEW_CUSTOM_ZONE, "</h5>\n                <div class=\"cell text-center\">").concat(ACYM_JS_TXT.ACYM_ZONE_SAVE_TEXT, "</div>\n                <div class=\"cell grid-x margin-y\">\n                    <label for=\"custom_zone_name\" class=\"cell small-4 text-left\">\n                        <span class=\"margin-left-2\">").concat(ACYM_JS_TXT.ACYM_ZONE_NAME, "</span>\n                        <span class=\"acym__color__red\">*</span>\n                    </label>\n                    <div class=\"cell small-8\">\n                        <input id=\"custom_zone_name\" type=\"text\" value=\"\" />\n                    </div>\n                    <label for=\"custom_zone_image\" class=\"cell small-4 text-left\">\n                        <span class=\"margin-left-2\">").concat(ACYM_JS_TXT.ACYM_IMAGE, "</span>\n                    </label>\n                    <div class=\"cell small-8\">\n                        <input id=\"custom_zone_image\" type=\"file\" value=\"\" />\n                    </div>\n                </div>\n                <div class=\"cell text-center\">\n                    <button class=\"button button-secondary\" type=\"button\" id=\"custom_zone_cancel\">").concat(ACYM_JS_TXT.ACYM_CANCEL, "</button>\n                    <button class=\"button margin-left-1\" id=\"custom_zone_save\" type=\"button\" disabled=\"disabled\">\n                        ").concat(ACYM_JS_TXT.ACYM_SAVE, "\n                        <i id=\"custom_zone_save_spinner\" class=\"acymicon-circle-o-notch acymicon-spin\"></i>\n                    </button>\n                </div>\n            </div>");
    jQuery('#acym__wysid__modal__ui__display').html(content);
    jQuery('#acym__wysid__modal__ui__fields').html('');
    jQuery('#acym__wysid__modal__ui__search').html('');
    jQuery('#custom_zone_name').on('keyup', function () {
      var $saveButton = jQuery('#custom_zone_save');

      if (jQuery(this).val().length === 0) {
        $saveButton.attr('disabled', 'true');
      } else {
        $saveButton.removeAttr('disabled');
      }
    });
    jQuery('#custom_zone_cancel').on('click', function () {
      var modal = jQuery('.acym__wysid__modal');
      modal.hide();
      modal.removeClass('acym__wysid__modal__tiny');
    });
    jQuery('#custom_zone_save').on('click', function () {
      var spinner = jQuery('#custom_zone_save_spinner');
      spinner.css('display', 'inline-block');
      var newZoneName = jQuery('#custom_zone_name').val();
      var zoneContent = acym_helperEditorWysid.$focusElement.prop('outerHTML'); // Remove the zone overlay

      zoneContent = zoneContent.replace(/<div class="acym__wysid__row__selector"(.|\n)*?<tbody/, '<tbody'); // Remove the blocks overlay

      zoneContent = zoneContent.replace(/<div class="acym__wysid__element__toolbox"(.|\n)*?<\/div>/g, '');
      var formData = new FormData();
      formData.append('ctrl', 'zones');
      formData.append('task', 'save');
      formData.append('name', newZoneName);
      formData.append('content', zoneContent);
      var selectedImages = jQuery('#custom_zone_image').prop('files');

      if (selectedImages && selectedImages[0]) {
        formData.append('image', selectedImages[0]);
      }

      jQuery.ajax({
        url: ACYM_AJAX_URL,
        dataType: 'text',
        cache: false,
        contentType: false,
        processData: false,
        data: formData,
        type: 'post',
        success: function success(response) {
          response = acym_helper.parseJson(response);

          if (response.error) {
            acym_editorWysidNotifications.addEditorNotification({
              message: "<div class=\"cell auto acym__autosave__notification\">".concat(response.message, "</div>"),
              level: 'error'
            }, 3000, true);
          } else {
            var newZone = "<div class=\"grid-x cell acym__wysid__zone__element--new ui-draggable ui-draggable-handle\" data-acym-zone-id=\"".concat(response.data.id, "\">\n                                            <i class=\"acymicon-delete\"></i>");

            if (response.data.image) {
              newZone += "<img class=\"cell saved_zone_image\" alt=\"Logo custom zone\" src=\"".concat(response.data.image, "\" />");
            } else {
              newZone += '<i class="cell acymicon-dashboard"></i>';
            }

            newZone += "<div class=\"cell\">".concat(newZoneName, "</div>\n                                </div>");
            jQuery('#custom_zones_none_message').hide();
            jQuery('.acym__wysid__right__toolbar__saved_zones').append(newZone);
            acym_editorWysidDragDrop.setNewZoneDraggable();
          }

          spinner.css('display', 'none');
          jQuery('#custom_zone_cancel').trigger('click');
        }
      });
    });
  }
};

function showVimeoThumbnail(data) {
  var thumbnail = 'https://i.vimeocdn.com/filter/overlay?src=' + encodeURIComponent(data[0].thumbnail_large);
  thumbnail += '&src=' + encodeURIComponent('https://f.vimeocdn.com/p/images/crawler_play.png');
  var styling = 'max-width: 100%; height: auto; box-sizing: border-box; padding: 0 5px; display: block; margin-left: auto; margin-right: auto; float: none;';
  var thumbWithLink = '<a href="https://vimeo.com/' + data[0].id + '" target="_blank" class="acym__wysid__link__image">';
  thumbWithLink += '<img alt="" src="' + thumbnail + '" style="' + styling + '"/>';
  thumbWithLink += '</a>';
  jQuery('#acym__wysid__modal__video__result').html(thumbWithLink);
  jQuery('#acym__wysid__modal__video__insert').removeClass('disabled');
}

var acym_editorWysidNewRow = {
  addRow1WYSID: function addRow1WYSID(ui) {
    var content = '<table class="row acym__wysid__row__element" bgcolor="#ffffff" style="background-color: rgb(255, 255, 255);" cellpadding="0" cellspacing="0" border="0">';
    content += '<tbody>';
    content += '<tr>';
    content += '<th class="small-12 medium-12 large-12 columns acym__wysid__row__element__th" valign="top">';
    content += '<table class="acym__wysid__column" border="0" cellpadding="0" cellspacing="0"><tbody></tbody></table>';
    content += '</th>';
    content += '</tr>';
    content += '</tbody>';
    content += '</table>';
    jQuery(ui).replaceWith(content);
  },
  addRow2WYSID: function addRow2WYSID(ui) {
    var content = '<table class="row acym__wysid__row__element" bgcolor="#ffffff" style="background-color: rgb(255, 255, 255);" cellpadding="0" cellspacing="0" border="0">';
    content += '<tbody>';
    content += '<tr>';
    content += '<th class="small-12 medium-6 large-6 columns acym__wysid__row__element__th" valign="top">';
    content += '<table class="acym__wysid__column" border="0" cellpadding="0" cellspacing="0"><tbody></tbody></table>';
    content += '</th>';
    content += '<th class="small-12 medium-6 large-6 columns acym__wysid__row__element__th" valign="top">';
    content += '<table class="acym__wysid__column" border="0" cellpadding="0" cellspacing="0"><tbody></tbody></table>';
    content += '</th>';
    content += '</tr>';
    content += '</tbody>';
    content += '</table>';
    jQuery(ui).replaceWith(content);
  },
  addRow3WYSID: function addRow3WYSID(ui) {
    var content = '<table class="row acym__wysid__row__element" bgcolor="#ffffff" style="background-color: rgb(255, 255, 255);" cellpadding="0" cellspacing="0" border="0">';
    content += '<tbody>';
    content += '<tr>';
    content += '<th class="small-12 medium-4 large-4 columns acym__wysid__row__element__th" valign="top">';
    content += '<table class="acym__wysid__column" border="0" cellpadding="0" cellspacing="0"><tbody></tbody></table>';
    content += '</th>';
    content += '<th class="small-12 medium-4 large-4 columns acym__wysid__row__element__th" valign="top">';
    content += '<table class="acym__wysid__column" border="0" cellpadding="0" cellspacing="0"><tbody></tbody></table>';
    content += '</th>';
    content += '<th class="small-12 medium-4 large-4 columns acym__wysid__row__element__th" valign="top">';
    content += '<table class="acym__wysid__column" border="0" cellpadding="0" cellspacing="0"><tbody></tbody></table>';
    content += '</th>';
    content += '</tr>';
    content += '</tbody>';
    content += '</table>';
    jQuery(ui).replaceWith(content);
  },
  addRow4WYSID: function addRow4WYSID(ui) {
    var content = '<table class="row acym__wysid__row__element" bgcolor="#ffffff" style="background-color: rgb(255, 255, 255);" cellpadding="0" cellspacing="0" border="0">';
    content += '<tbody>';
    content += '<tr>';
    content += '<th class="small-12 medium-3 large-3 columns acym__wysid__row__element__th" valign="top">';
    content += '<table class="acym__wysid__column" border="0" cellpadding="0" cellspacing="0"><tbody></tbody></table>';
    content += '</th>';
    content += '<th class="small-12 medium-3 large-3 columns acym__wysid__row__element__th" valign="top">';
    content += '<table class="acym__wysid__column" border="0" cellpadding="0" cellspacing="0"><tbody></tbody></table>';
    content += '</th>';
    content += '<th class="small-12 medium-3 large-3 columns acym__wysid__row__element__th" valign="top">';
    content += '<table class="acym__wysid__column" border="0" cellpadding="0" cellspacing="0"><tbody></tbody></table>';
    content += '</th>';
    content += '<th class="small-12 medium-3 large-3 columns acym__wysid__row__element__th" valign="top">';
    content += '<table class="acym__wysid__column" border="0" cellpadding="0" cellspacing="0"><tbody></tbody></table>';
    content += '</th>';
    content += '</tr>';
    content += '</tbody>';
    content += '</table>';
    jQuery(ui).replaceWith(content);
  },
  addRow5WYSID: function addRow5WYSID(ui) {
    var content = '<table class="row acym__wysid__row__element" bgcolor="#ffffff" style="background-color: rgb(255, 255, 255);" cellpadding="0" cellspacing="0" border="0">';
    content += '<tbody>';
    content += '<tr>';
    content += '<th class="small-12 medium-8 large-8 columns acym__wysid__row__element__th" valign="top">';
    content += '<table class="acym__wysid__column" border="0" cellpadding="0" cellspacing="0"><tbody></tbody></table>';
    content += '</th>';
    content += '<th class="small-12 medium-4 large-4 columns acym__wysid__row__element__th" valign="top">';
    content += '<table class="acym__wysid__column" border="0" cellpadding="0" cellspacing="0"><tbody></tbody></table>';
    content += '</th>';
    content += '</tr>';
    content += '</tbody>';
    content += '</table>';
    jQuery(ui).replaceWith(content);
  },
  addRow6WYSID: function addRow6WYSID(ui) {
    var content = '<table class="row acym__wysid__row__element" bgcolor="#ffffff" style="background-color: rgb(255, 255, 255);" cellpadding="0" cellspacing="0" border="0">';
    content += '<tbody>';
    content += '<tr>';
    content += '<th class="small-12 medium-4 large-4 columns acym__wysid__row__element__th" valign="top">';
    content += '<table class="acym__wysid__column" border="0" cellpadding="0" cellspacing="0"><tbody></tbody></table>';
    content += '</th>';
    content += '<th class="small-12 medium-8 large-8 columns acym__wysid__row__element__th" valign="top">';
    content += '<table class="acym__wysid__column" border="0" cellpadding="0" cellspacing="0"><tbody></tbody></table>';
    content += '</th>';
    content += '</tr>';
    content += '</tbody>';
    content += '</table>';
    jQuery(ui).replaceWith(content);
  },
  addCustomRow: function addCustomRow(ui) {
    var zoneId = jQuery(ui).attr('data-acym-zone-id');
    jQuery(ui).replaceWith('<i id="inserted_custom_zone_spinner" class="acymicon-circle-o-notch acymicon-spin"></i>');
    var data = {
      ctrl: ACYM_IS_ADMIN ? 'zones' : 'frontzones',
      task: 'getForInsertion',
      zoneId: zoneId
    };
    acym_helper.post(ACYM_AJAX_URL, data).then(function (response) {
      var spinnerInsertion = jQuery('#inserted_custom_zone_spinner');

      if (response.error) {
        acym_editorWysidNotifications.addEditorNotification({
          'message': "<div class=\"cell auto acym__autosave__notification\">".concat(response.message, "</div>"),
          'level': 'error'
        }, 3000, true);
        spinnerInsertion.replaceWith('');
      } else {
        var $container = spinnerInsertion.parent();
        spinnerInsertion.replaceWith(response.data.content); // Make sure the DContents in the duplicated container have a different id

        $container.find('tr[data-dynamic]').each(function () {
          jQuery(this).attr('id', acym_editorWysidDynamic.getUniqueId());
        });
        acym_helperEditorWysid.setColumnRefreshUiWYSID();
        acym_editorWysidImage.setImageWidthHeightOnInsert();
        acym_editorWysidContextModal.setButtonOptions();
        acym_editorWysidContextModal.setSpaceOptions();
        acym_editorWysidContextModal.setFollowOptions();
        acym_editorWysidContextModal.setSeparatorOptions();
        acym_editorWysidFontStyle.applyCssOnAllElementTypesBasedOnSettings();
        acym_editorWysidDynamic.setDContentActions();
        acym_editorWysidTinymce.addTinyMceWYSID();
        acym_editorWysidRowSelector.setZoneAndBlockOverlays();
      }
    });
  }
};
var acym_editorWysidNotifications = {
  hideNotification: function hideNotification() {
    jQuery('#acym__wysid__top-toolbar__notification').removeClass('acym__toolbar__message__visible');
    jQuery('#acym__wysid__top-toolbar__notification__message').html('');
    jQuery('#acym__wysid__top-toolbar__actions').show();
    jQuery('#acym__wysid__top-toolbar__notification__close').show();
  },
  addEditorNotification: function addEditorNotification(notification, timeout, hideCloseButton, displayValidateButton) {
    timeout = undefined === timeout ? false : timeout;
    hideCloseButton = undefined === hideCloseButton ? false : hideCloseButton;
    displayValidateButton = undefined === displayValidateButton ? false : displayValidateButton;
    var classes = '';

    if (notification.level === 'success') {
      classes = 'acymicon-check-circle';
    } else if (notification.level === 'info') {
      classes = 'acymicon-bell';
    } else if (notification.level === 'warning') {
      classes = 'acymicon-exclamation-triangle';
    } else {
      classes = 'acymicon-exclamation-circle';
    }

    var $toolbar = jQuery('#acym__wysid__top-toolbar');
    var $toolbarMessage = $toolbar.find('#acym__wysid__top-toolbar__notification');
    $toolbar.find('#acym__wysid__top-toolbar__actions').hide();
    $toolbarMessage.addClass('acym__toolbar__message__visible').find('#acym__wysid__top-toolbar__notification__icon').addClass(classes);
    $toolbarMessage.find('#acym__wysid__top-toolbar__notification__message').html(notification.message);
    $toolbarMessage.find('#acym__wysid__top-toolbar__notification__close').off('click').on('click', function () {
      acym_editorWysidNotifications.hideNotification();
    });
    if (hideCloseButton) $toolbarMessage.find('#acym__wysid__top-toolbar__notification__close').hide();
    if (!displayValidateButton) $toolbarMessage.find('#acym__wysid__top-toolbar__keep').hide();

    if (timeout) {
      setTimeout(function () {
        acym_editorWysidNotifications.hideNotification();
      }, timeout);
    }
  }
};
var acym_editorWysidOutlook = {
  getOutlookButton: function getOutlookButton($element) {
    var borderRadius;

    if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1) {
      borderRadius = $element.css('borderBottomLeftRadius');
    } else {
      borderRadius = $element.css('borderRadius');
    }

    borderRadius = ' arcsize="' + parseInt(borderRadius.replace(/[^-\d\.]/g, '')) * 2 + '%"';
    var borderColor;
    var borderWidth = $element.css('border-top-width');

    if (borderWidth.indexOf('0') === 0) {
      borderColor = ' strokecolor="' + $element.css('background-color') + '"';
      borderWidth = '0';
    } else {
      borderColor = ' strokecolor="' + $element.css('border-top-color') + '"';
    }

    borderWidth = ' strokeweight="' + borderWidth + '"';
    var backgroundColor = ' fillcolor="' + $element.css('background-color') + '"';
    var href = ' href="' + $element.attr('href') + '"';
    var widthButton = Math.ceil($element.outerWidth()) + 'px';
    var heightButton = $element.css('height').replace(/[^-\d\.]/g, '') + 'px';
    var cssRoundrect = 'style="width: ' + widthButton + '; height:' + heightButton + ';v-text-anchor:middle;"';
    var css = 'font-family:' + $element.css('font-family') + ';';
    css += ' font-size:' + $element.css('font-size') + ';';
    css += ' font-weight:' + $element.css('font-weight') + ';';
    var linkBorder = $element.css('border');
    $element.css('border', 'none transparent');
    var text = $element[0].outerHTML;
    $element.css('border', linkBorder); // See https://buttons.cm

    return '<v:roundrect xmlns:v="urn:schemas-microsoft-com:vml" xmlns:w="urn:schemas-microsoft-com:office:word"' + cssRoundrect + href + borderRadius + borderColor + borderWidth + backgroundColor + '><w:anchorlock/><center style="' + css + '">' + text + '</center></v:roundrect>';
  },
  setBackgroundOutlook: function setBackgroundOutlook($table) {
    var start = '<!--[if gte mso 9]><v:rect xmlns:v="urn:schemas-microsoft-com:vml" fill="true" stroke="false" style="width: ' + $table.width() + 'px;height: ' + $table.height() + 'px"><v:fill type="frame" src="' + $table.css('background-image') + '" /><v:textbox inset="0,0,0,0"><![endif]-->';
    var end = '<!--[if gte mso 9]></v:textbox></v:rect><![endif]-->';
    start = start.replace('url("', '').replace('")', '');
    $table.prepend(start).append(end);
  }
};
var acym_editorWysidRowSelector = {
  deleteOverlays: function deleteOverlays() {
    jQuery('.acym__wysid__row__selector, .acym__wysid__element__toolbox').remove();
  },
  setZoneAndBlockOverlays: function setZoneAndBlockOverlays() {
    // This timeout is to make sure the content has loaded, to have the correct overlay height
    setTimeout(function () {
      if (jQuery('.mce-tinymce-inline').is(':visible')) return true;
      acym_editorWysidRowSelector.deleteOverlays(); // Add overlay and action buttons on zones

      jQuery('.acym__wysid__row__element').css('z-index', '100').each(function () {
        var $thisRow = jQuery(this);
        var $firstTbody = $thisRow.find('> tbody');
        var firstTbodyColor = $firstTbody.css('background-color');

        if (!acym_helper.empty(firstTbodyColor) && firstTbodyColor !== 'inherit' && firstTbodyColor !== 'rgba(0, 0, 0, 0)') {
          $thisRow.css('background-color', firstTbodyColor);
          $firstTbody.css('background-color', 'inherit').attr('bgcolor', '');
        }

        var zoneOverlay = '<div class="acym__wysid__row__selector">';
        zoneOverlay += '<div  class="acym__wysid__row__toolbox">';
        zoneOverlay += '<i class="acymicon-floppy-o acym__wysid__row__toolbox__save acym__wysid__row__toolbox__actions"></i>';
        zoneOverlay += '<i class="acymicon-content_copy acym__wysid__row__toolbox__copy acym__wysid__row__toolbox__actions"></i>';
        zoneOverlay += '<i class="acymicon-arrow-up acym__wysid__row__toolbox__moveup acym__wysid__row__toolbox__actions"></i>';
        zoneOverlay += '<i class="acymicon-arrow-down acym__wysid__row__toolbox__movedown acym__wysid__row__toolbox__actions"></i>';
        zoneOverlay += '<i class="acymicon-arrows acym__wysid__row__element__toolbox__move acym__wysid__row__toolbox__actions"></i>';
        zoneOverlay += '<i class="acymicon-delete acym__wysid__row__toolbox__actions acym__wysid__row__toolbox__delete__row"></i>';
        zoneOverlay += '</div>';
        zoneOverlay += '<div class="acym__wysid__row__height__container">';
        zoneOverlay += '<i class="acymicon-code acym__wysid__row__toolbox__height"></i>';
        zoneOverlay += '</div>';
        zoneOverlay += '</div>';
        $thisRow.prepend(zoneOverlay);
      });
      acym_editorWysidRowSelector.resizeZoneOverlays(); // Add overlay and action buttons on blocks

      jQuery('.acym__wysid__column__element').each(function () {
        var blockOverlay = '<div class="acym__wysid__element__toolbox">';
        blockOverlay += '<i class="acymicon-content_copy acym__wysid__element__toolbox__copy acym__wysid__element__toolbox__actions"></i>';
        blockOverlay += '<i class="acymicon-arrow-up acym__wysid__element__toolbox__moveup acym__wysid__element__toolbox__actions"></i>';
        blockOverlay += '<i class="acymicon-arrow-down acym__wysid__element__toolbox__movedown acym__wysid__element__toolbox__actions"></i>';
        blockOverlay += '<i class="acymicon-arrows acym__wysid__column__element__toolbox__move acym__wysid__element__toolbox__actions"></i>';
        blockOverlay += '<i class="acymicon-delete acym__wysid__element__toolbox__delete acym__wysid__element__toolbox__actions"></i>';
        blockOverlay += '</div>';
        jQuery(this).append(blockOverlay);
      });
      acym_editorWysidToolbox.setOverlayActions();
      acym_editorWysidContextModal.setZoneOptions();
    }, 150);
  },
  resizeZoneOverlays: function resizeZoneOverlays() {
    var $emailContentContainer = jQuery('.acym__wysid__template__content');
    var widthTemplate = $emailContentContainer.css('width').replace(/[^-\d\.]/g, '');
    var offsetTemplate = $emailContentContainer.offset();
    jQuery('.acym__wysid__row__selector').each(function () {
      var $overlay = jQuery(this);
      var $zoneElement = $overlay.closest('.acym__wysid__row__element');
      var offsetTable = $zoneElement.offset();
      var borderWidthParent = $zoneElement.css('border-width') === '' ? 0 : parseInt($zoneElement.css('border-width').replace(/[^-\d\.]/g, ''));
      var paddingBottomParent = $zoneElement.css('padding-bottom') === '' ? 0 : parseInt($zoneElement.css('padding-bottom').replace(/[^-\d\.]/g, ''));
      var heightSelector = $zoneElement.height() + parseInt($zoneElement.css('padding-top').replace(/[^-\d\.]/g, '')) + paddingBottomParent + borderWidthParent * 2;
      var leftSelector = '-' + (Math.round(offsetTable.left) - Math.round(offsetTemplate.left) + borderWidthParent) + 'px';
      $overlay.css({
        width: widthTemplate + 'px',
        height: heightSelector,
        left: leftSelector,
        top: 0 - borderWidthParent + 'px'
      });
      $overlay.attr('style', $overlay.attr('style') + 'width: ' + widthTemplate + 'px; height: ' + heightSelector + 'px; left: ' + leftSelector + ';top: ' + (0 - borderWidthParent + 'px'));
    });
  },
  hideOverlays: function hideOverlays() {
    jQuery('.acym__wysid__row__selector').addClass('acym__wysid__row__selector--hidden');
    jQuery('.acym__wysid__element__toolbox').addClass('acym__wysid__element__toolbox--hidden');
  },
  showOverlays: function showOverlays() {
    jQuery('.acym__wysid__row__selector--hidden').removeClass('acym__wysid__row__selector--hidden');
    jQuery('.acym__wysid__element__toolbox--hidden').removeClass('acym__wysid__element__toolbox--hidden');
  }
};
var acym_editorWysidTest = {
  toggleSendTest: function toggleSendTest() {
    var $sendTestContainer = jQuery('#acym__wysid__send__test');
    var $rightToolbar = jQuery('#acym__wysid__right-toolbar');
    jQuery('#acym__wysid__test__button').off('click').on('click', function () {
      // We open the "Send a test" box on the right and if the user clicks outside, we hide the box
      acym_editorWysidTest.toggleSendTestAndRightToolbar($sendTestContainer, $rightToolbar);
      jQuery(window).on('mousedown', function (event) {
        if (jQuery(event.target).closest('#acym__wysid__send__test').length > 0) return true;
        jQuery(window).off('mousedown');
        acym_editorWysidTest.toggleSendTestAndRightToolbar($sendTestContainer, $rightToolbar);
      });
    });
    jQuery('.acym__wysid__send__test-close').off('click').on('click', function () {
      acym_editorWysidTest.toggleSendTestAndRightToolbar($sendTestContainer, $rightToolbar);
    });
  },
  toggleSendTestAndRightToolbar: function toggleSendTestAndRightToolbar($sendTestContainer, $rightToolbar) {
    jQuery(window).off('mousedown');

    if ($sendTestContainer.hasClass('acym__wysid__show')) {
      $sendTestContainer.removeClass('acym__wysid__show');
      $rightToolbar.removeClass('acym__wysid__hidden');
    } else {
      $sendTestContainer.addClass('acym__wysid__show');
      $rightToolbar.addClass('acym__wysid__hidden');
    }
  },
  sendTestAjax: function sendTestAjax() {
    jQuery('#acym__wysid__send__test__button').off('click').on('click', function () {
      jQuery(this).attr('disabled', 'true');
      jQuery('.acym__wysid__send__test__icon').hide();
      jQuery('.acym__wysid__send__test__icon__loader').show();

      if (jQuery('[name="ctrl"]').val().indexOf('campaigns') !== -1 || jQuery('#acym__mail__type').val() === 'followup') {
        acym_editorWysidFormAction.saveEmail(true, false);
        return true;
      }

      acym_editorWysidFormAction.setThumbnailPreSave().then(function (dataUrl) {
        // Copy img content in hidden input
        if (acym_editorWysidFormAction.needToGenerateThumbnail()) {
          jQuery('#editor_thumbnail').attr('value', dataUrl);
        }

        acym_editorWysidFormAction.saveEmail(true, false);
      })["catch"](function (err) {
        acym_editorWysidFormAction.saveEmail(true, false);
        console.error('Error generating template thumbnail: ' + err);
      });
      return true;
    });
  },
  sendTest: function sendTest(id) {
    var url = ACYM_AJAX_URL;
    url += '&page=acymailing_mails';
    url += '&ctrl=' + acym_helper.ctrlMails;
    url += '&task=sendTest';
    url += '&id=' + id;
    url += '&controller=' + jQuery('[name="ctrl"]').val();
    url += '&test_note=' + encodeURIComponent(jQuery('#acym__wysid__send__test__note').val());

    if (ACYM_IS_ADMIN) {
      url += '&test_emails=' + encodeURIComponent(jQuery('.acym__multiselect__email').val().join(','));
    } else {
      url += '&test_emails=' + encodeURIComponent(jQuery('input[name="emails_test"]').val());
    }

    url += '&lang_version=' + acym_editorWysidMultilingual.currentLanguage;
    jQuery.post(url, function (res) {
      res = acym_helper.parseJson(res);
      res.data.message = res.data.message.replace(/<.*?>/gm, ' ');
      acym_editorWysidNotifications.addEditorNotification(res.data, res.error ? false : 3000, !res.error);
      jQuery('.acym__wysid__send__test__icon').show();
      jQuery('.acym__wysid__send__test__icon__loader').hide();
      jQuery('#acym__wysid__send__test__button').removeAttr('disabled');
      if (res.data.level === 'info') jQuery('.acym__wysid__send__test-close').trigger('click');
      acym_helperEditorWysid.setColumnRefreshUiWYSID(false);
    });
  }
};
var acym_editorWysidTinymce = {
  addTinyMceWYSID: function addTinyMceWYSID() {
    tinymce.remove();
    tinymce.baseURL = ACYM_MEDIA_URL + 'js/tinymce';
    tinymce.init({
      convert_urls: false,
      relative_urls: false,
      selector: '.acym__wysid__tinymce--text',
      inline: true,
      menubar: false,
      plugins: 'textcolor colorpicker lists link code noneditable lineheight table',
      image_class_list: [{
        title: 'Responsive',
        value: 'img-responsive'
      }],
      fixed_toolbar_container: '#acym__wysid__text__tinymce__editor',
      fontsize_formats: '10px=10px 12px=12px 14px=14px 16px=16px 18px=18px 20px=20px 22px=22px 24px=24px 26px=26px 28px=28px 30px=30px 32px=32px 34px=34px 36px=36px',
      lineheight_formats: '100% 110% 120% 130% 140% 150% 160% 170% 180% 190% 200% 210% 220% 230% 240%',
      toolbar: ['undo redo formatselect fontselect fontsizeselect', 'alignmentsplit | listsplit outdent indent lineheightselect | table', 'bold italic underline strikethrough removeformat | forecolor backcolor | link unlink | code'],
      link_class_list: [{
        title: 'None',
        value: ''
      }, {
        title: ACYM_JS_TXT.ACYM_DONT_APPLY_STYLE_TAG_A,
        value: 'acym__wysid__content-no-settings-style'
      }],
      formats: {
        removeformat: [{
          selector: 'b,strong,em,i,font,u,strike,pre,code',
          remove: 'all',
          split: true,
          expand: false,
          block_expand: true,
          deep: true
        }, {
          selector: 'span',
          attributes: ['style', 'class'],
          remove: 'empty',
          split: true,
          expand: false,
          deep: true
        }, {
          selector: '*',
          attributes: ['style', 'class'],
          split: false,
          expand: false,
          deep: true
        }]
      },
      preview_styles: false,
      block_formats: 'Paragraph=p;Heading 1=h1;Heading 2=h2;Heading 3=h3;Heading 4=h4;Heading 5=h5;Heading 6=h6',
      init_instance_callback: function init_instance_callback(editor) {
        acym_editorWysidDynamic.setDTextActions();
        editor.on('keydown', function (e) {
          var currentText = jQuery(editor.getElement()).find('>:first-child');

          if (acym_editorWysidTinymce.isCurrentTextEmpty(currentText) && e.key === 'Backspace' && jQuery(editor.getElement()).children().length === 1) {
            e.preventDefault();
            return true;
          }
        });
        editor.on('keyup', function () {
          var currentText = jQuery(editor.getElement()).find('>:first-child');

          if (acym_editorWysidTinymce.isCurrentTextEmpty(currentText)) {
            currentText.addClass('acym__wysid__tinymce--text--placeholder acym__wysid__tinymce--text--placeholder--empty');
          } else {
            currentText.removeClass('acym__wysid__tinymce--text--placeholder--empty');
          }

          acym_editorWysidTinymce.checkForEmptyText();
          jQuery(editor.getElement()).trigger('click');
        });
        editor.on('click', function () {
          acym_editorWysidRowSelector.hideOverlays();
          acym_editorWysidContextModal.showTextOptions();
        });
        editor.off('change').on('change', function (e) {
          if (e.lineheight !== undefined) {
            var $element = jQuery(editor.getElement()).find('.acym__wysid__tinymce--text--placeholder, .acym__wysid__tinymce--title--placeholder');
            $element.css('line-height', e.lineheight);
          }

          acym_editorWysidFontStyle.applyCssOnAllElementTypesBasedOnSettings();
        });
        editor.on('blur', function (e) {
          var initialContent = e.target.startContent;
          var finalContent = e.target.bodyElement.innerHTML;
          if (initialContent !== finalContent) acym_editorWysidVersioning.setUndoAndAutoSave();
          acym_editorWysidRowSelector.showOverlays();
          acym_editorWysidRowSelector.resizeZoneOverlays();
          acym_editorWysidTinymce.checkForEmptyText();
        });
        editor.on('ExecCommand', function (e) {
          var currentText = jQuery(editor.getElement()).find('>:first-child');

          if (e.command === 'mceTableDelete' && acym_editorWysidTinymce.isCurrentTextEmpty(currentText)) {
            e.target.bodyElement.innerHTML = '<p class="acym__wysid__tinymce--text--placeholder">&zwj;</p>';
            jQuery(':focus').blur();
          }
        });
        editor.on('BeforeSetContent', function (e) {
          if (e.content.indexOf('<table id="__mce"') === 0) {
            var currentText = jQuery(editor.getElement()).find('>:first-child');

            if (acym_editorWysidTinymce.isCurrentTextEmpty(currentText)) {
              currentText.remove();
            }

            var sUsrAg = navigator.userAgent;

            if (sUsrAg.indexOf('Firefox') > -1) {
              acym_editorWysidTinymce.cleanForFirefox(jQuery(editor.getElement()), 0);
            }
          }
        });
        editor.addButton('listsplit', {
          type: 'splitbutton',
          text: '',
          icon: 'bullist',
          onclick: function onclick(e) {
            tinyMCE.execCommand(this.value);
          },
          menu: [{
            icon: 'bullist',
            text: 'Bullet list',
            onclick: function onclick() {
              tinyMCE.execCommand('InsertUnorderedList');
              this.parent().parent().icon('bullist');
              this.parent().parent().value = 'InsertUnorderedList';
            }
          }, {
            icon: 'numlist',
            text: 'Ordered List',
            onclick: function onclick() {
              tinyMCE.execCommand('InsertOrderedList');
              this.parent().parent().icon('numlist');
              this.parent().parent().value = 'InsertOrderedList';
            }
          }],
          onPostRender: function onPostRender() {
            // Select the first item by default
            this.value = 'InsertUnorderedList';
          }
        });
        editor.addButton('alignmentsplit', {
          type: 'splitbutton',
          text: '',
          icon: 'alignleft',
          onclick: function onclick(e) {
            tinyMCE.execCommand(this.value);
          },
          menu: [{
            icon: 'alignleft',
            text: 'Align Left',
            onclick: function onclick() {
              tinyMCE.execCommand('JustifyLeft');
              this.parent().parent().icon('alignleft');
              this.parent().parent().value = 'JustifyLeft';
            }
          }, {
            icon: 'alignright',
            text: 'Align Right',
            onclick: function onclick() {
              tinyMCE.execCommand('JustifyRight');
              this.parent().parent().icon('alignright');
              this.parent().parent().value = 'JustifyRight';
            }
          }, {
            icon: 'aligncenter',
            text: 'Align Center',
            onclick: function onclick() {
              tinyMCE.execCommand('JustifyCenter');
              this.parent().parent().icon('aligncenter');
              this.parent().parent().value = 'JustifyCenter';
            }
          }, {
            icon: 'alignjustify',
            text: 'Justify',
            onclick: function onclick() {
              tinyMCE.execCommand('JustifyFull');
              this.parent().parent().icon('alignjustify');
              this.parent().parent().value = 'JustifyFull';
            }
          }],
          onPostRender: function onPostRender() {
            // Select the first item by default
            this.value = 'JustifyLeft';
          }
        });
      }
    });
    tinymce.execCommand('mceAddEditor', true, '');
    tinymce.init({
      selector: '.acym__wysid__tinymce--image',
      inline: true,
      menubar: false,
      plugins: 'image nonbreaking',
      toolbar: [],
      relative_urls: true,
      remove_script_host: false,
      image_class_list: [{
        title: 'Responsive',
        value: 'img-responsive'
      }],
      preview_styles: false,
      init_instance_callback: function init_instance_callback(editor) {
        acym_editorWysidImage.setDoubleClickImage();
        editor.on('click', function (e) {
          var $img = jQuery(editor.getElement()).find('img');
          acym_helperEditorWysid.timeClickImage = new Date().getTime();
          acym_editorWysidRowSelector.hideOverlays();
          acym_editorWysidContextModal.showImageOptions($img);
        });
        editor.on('blur', function () {
          acym_editorWysidRowSelector.showOverlays();
          acym_helperEditorWysid.removeBlankCharacters();
        });
      }
    });
    tinymce.execCommand('mceAddEditor', true, '');
  },
  isCurrentTextEmpty: function isCurrentTextEmpty(currentText) {
    return currentText.is(':empty') || currentText.html() === '&nbsp;<br>' || currentText.html() === '<br>' || escape(currentText.html()) == '%u200D' || currentText.html() == '<br data-mce-bogus="1">';
  },
  checkForEmptyText: function checkForEmptyText() {
    jQuery('.acym__wysid__tinymce--text--placeholder, .acym__wysid__tinymce--title--placeholder').each(function () {
      var severalTags = jQuery(this).closest('.acym__wysid__tinymce--text').find('.acym__wysid__tinymce--text--placeholder, .acym__wysid__tinymce--title--placeholder').length > 1;

      if (acym_editorWysidTinymce.isCurrentTextEmpty(jQuery(this)) && !severalTags) {
        jQuery(this).addClass('acym__wysid__tinymce--text--placeholder acym__wysid__tinymce--text--placeholder--empty');
      } else {
        jQuery(this).removeClass('acym__wysid__tinymce--text--placeholder--empty');
      }
    });
  },
  cleanForFirefox: function cleanForFirefox(currentArea, timerTotal) {
    var tinymceP = currentArea.find('>p');

    if (tinymceP.length === 0 && timerTotal < 1000) {
      setTimeout(function () {
        acym_editorWysidTinymce.cleanForFirefox(currentArea, timerTotal + 50);
      }, 50);
    } else if (tinymceP.length === 1 && acym_editorWysidTinymce.isCurrentTextEmpty(tinymceP)) {
      tinymceP.remove();
    }
  }
};
var acym_editorWysidToolbar = {
  setRightToolbarWYSID: function setRightToolbarWYSID() {
    jQuery('.acym__wysid__right__toolbar__tabs').off('click').on('click', function () {
      acym_editorWysidToolbar.setSlideRightToolbarWYSID(jQuery(this));
    });
    jQuery('.acym__wysid__right__toolbar--menu .acym__wysid__right__toolbar__p').off('click').on('click', function () {
      jQuery(this).next().slideToggle(200);

      if (jQuery(this).hasClass('acym__wysid__right__toolbar__p__open')) {
        jQuery(this).removeClass('acym__wysid__right__toolbar__p__open');
        jQuery(this).find('i').removeClass('acymicon-keyboard_arrow_up').addClass('acymicon-keyboard_arrow_down');
      } else {
        jQuery(this).addClass('acym__wysid__right__toolbar__p__open');
        jQuery(this).find('i').removeClass('acymicon-keyboard_arrow_down').addClass('acymicon-keyboard_arrow_up');
      }

      jQuery(this).toggleClass('acym__wysid__right__toolbar__last--text');
    });
  },
  setSlideRightToolbarWYSID: function setSlideRightToolbarWYSID($clickedTab) {
    var $elementToHide = jQuery('#' + jQuery('.acym__wysid__right__toolbar__selected').attr('data-attr-show'));
    var $elementToShow = jQuery('#' + $clickedTab.attr('data-attr-show'));
    if ($elementToHide.attr('id') === $elementToShow.attr('id')) return;
    var $tabs = jQuery('.acym__wysid__right__toolbar__tabs');
    $tabs.removeClass('acym__wysid__right__toolbar__selected');
    var direction = {
      hide: '',
      show: ''
    };
    $tabs.each(function () {
      if (jQuery(this).attr('data-attr-show') === $elementToHide.attr('id')) {
        direction.hide = 'left';
        direction.show = 'right';
        return false;
      }

      if (jQuery(this).attr('data-attr-show') === $elementToShow.attr('id')) {
        direction.hide = 'right';
        direction.show = 'left';
        return false;
      }
    });
    $clickedTab.addClass('acym__wysid__right__toolbar__selected');
    $elementToHide.hide('slide', {
      direction: direction.hide
    }, 75, function () {
      $elementToShow.show('slide', {
        direction: direction.show
      }, 75, function () {});
    });
  }
};
var acym_editorWysidToolbox = {
  setOverlayActions: function setOverlayActions() {
    // Zone actions
    acym_editorWysidToolbox.zoneSave();
    acym_editorWysidToolbox.zoneCopy();
    acym_editorWysidToolbox.zoneMoveUp();
    acym_editorWysidToolbox.zoneMoveDown();
    acym_editorWysidToolbox.zoneResize();
    acym_editorWysidDragDrop.setZonesSortable();
    acym_editorWysidToolbox.zoneDelete(); // Block actions

    acym_editorWysidToolbox.blockCopy();
    acym_editorWysidToolbox.blockMoveUp();
    acym_editorWysidToolbox.blockMoveDown();
    acym_editorWysidDragDrop.setBlocksDraggable();
    acym_editorWysidToolbox.blockDelete();
  },
  zoneSave: function zoneSave() {
    jQuery('.acym__wysid__row__toolbox__save').off('click').on('click', function (e) {
      e.stopPropagation();
      acym_helperEditorWysid.$focusElement = jQuery(this).closest('.acym__wysid__row__element');
      acym_editorWysidNewContent.addCustomZoneWYSID();
    });
  },
  zoneCopy: function zoneCopy() {
    jQuery('.acym__wysid__row__toolbox__copy').off('click').on('click', function () {
      var $duplication = jQuery(this).closest('.acym__wysid__row__element').clone();
      acym_helperBlockSeparator.changeIdOnduplicate($duplication).insertAfter(jQuery(this).closest('.acym__wysid__row__element')); // Make sure the DContents in the duplicated container have a different id

      $duplication.find('tr[data-dynamic]').each(function () {
        jQuery(this).attr('id', acym_editorWysidDynamic.getUniqueId());
      });
      acym_helperEditorWysid.setColumnRefreshUiWYSID();
      acym_editorWysidToolbox.setOverlayActions();
      acym_editorWysidContextModal.setButtonOptions();
      acym_editorWysidContextModal.setSpaceOptions();
      acym_editorWysidContextModal.setFollowOptions();
      acym_editorWysidContextModal.setSeparatorOptions();
      acym_editorWysidDynamic.setDContentActions();
      acym_editorWysidTinymce.addTinyMceWYSID();
    });
  },
  zoneMoveUp: function zoneMoveUp() {
    jQuery('.acym__wysid__row__toolbox__moveup').off('click').on('click', function (e) {
      e.stopPropagation();
      acym_helperEditorWysid.$focusElement = jQuery(this).closest('.acym__wysid__row__element');
      var previousRow = acym_helperEditorWysid.$focusElement.prev();

      if (previousRow.length > 0) {
        acym_helperEditorWysid.$focusElement.insertBefore(previousRow);
        acym_editorWysidVersioning.setUndoAndAutoSave();
      }
    });
  },
  zoneMoveDown: function zoneMoveDown() {
    jQuery('.acym__wysid__row__toolbox__movedown').off('click').on('click', function (e) {
      e.stopPropagation();
      acym_helperEditorWysid.$focusElement = jQuery(this).closest('.acym__wysid__row__element');
      var nextRow = acym_helperEditorWysid.$focusElement.next();

      if (nextRow.length > 0 && 'acym__powered_by_acymailing' !== nextRow.attr('id')) {
        acym_helperEditorWysid.$focusElement.insertAfter(nextRow);
        acym_editorWysidVersioning.setUndoAndAutoSave();
      }
    });
  },
  zoneResize: function zoneResize() {
    jQuery('.acym__wysid__row__toolbox__height').off('mousedown').on('mousedown', function () {
      acym_helperEditorWysid.clicking = true;
      acym_helperEditorWysid.$resizingElement = jQuery(this).closest('table').css({
        'border-collapse': 'initial',
        'border-spacing': ''
      });
      jQuery(document).on('mousemove', function (event) {
        if (!acym_helperEditorWysid.clicking) return;
        var delta = acym_helperEditorWysid.$resizingElement.offset().top;
        var height = event.pageY - (delta - 10);
        acym_helperEditorWysid.$resizingElement.find('th:first').height(height).attr('height', height);
        acym_helperEditorWysid.$resizingElement.find('.acym__wysid__row__selector').css('height', acym_helperEditorWysid.$resizingElement.css('height'));
      });
      jQuery(document).off('mouseup').on('mouseup', function () {
        acym_helperEditorWysid.clicking = false;
        jQuery(document).off('mousemove');
        acym_editorWysidRowSelector.setZoneAndBlockOverlays();
      });
    });
  },
  zoneDelete: function zoneDelete() {
    jQuery('.acym__wysid__row__toolbox__delete__row').off('click').on('click', function () {
      jQuery(this).closest('.acym__wysid__row__element').remove();
      acym_helperEditorWysid.addDefaultZone();
      acym_editorWysidVersioning.setUndoAndAutoSave();
    });
  },
  blockCopy: function blockCopy() {
    jQuery('.acym__wysid__element__toolbox__copy').off('click').on('click', function () {
      var $elementToClone = jQuery(this).closest('.acym__wysid__column__element');
      var theClone = $elementToClone.clone(); // Handle the duplication of DContents with unique IDs

      if (theClone.attr('data-dynamic') !== undefined) {
        theClone.attr('id', acym_editorWysidDynamic.getUniqueId());
      }

      theClone.insertAfter($elementToClone);
      acym_helperEditorWysid.setColumnRefreshUiWYSID();
      acym_editorWysidToolbox.setOverlayActions();

      if (theClone.find('.acym__wysid__column__element__button').length > 0) {
        acym_editorWysidContextModal.setButtonOptions();
      } else if (theClone.find('.acy-editor__space').length > 0) {
        acym_editorWysidContextModal.setSpaceOptions();
      } else if (theClone.find('.acym__wysid__column__element__follow').length > 0) {
        acym_editorWysidContextModal.setFollowOptions();
      } else if (theClone.find('.acym__wysid__row__separator').length > 0) {
        acym_editorWysidContextModal.setSeparatorOptions();
      } else if (theClone.attr('data-dynamic')) {
        acym_editorWysidDynamic.setDContentActions();
      } else if (theClone.find('.acym__wysid__tinymce--text').length > 0 || theClone.find('.acym__wysid__tinymce--image').length > 0) {
        acym_editorWysidTinymce.addTinyMceWYSID();
      }
    });
  },
  blockMoveUp: function blockMoveUp() {
    jQuery('.acym__wysid__element__toolbox__moveup').off('click').on('click', function (e) {
      e.stopPropagation();
      acym_helperEditorWysid.$focusElement = jQuery(this).closest('.acym__wysid__column__element');
      var previousRow = acym_helperEditorWysid.$focusElement.prev();

      if (previousRow.length > 0) {
        acym_helperEditorWysid.$focusElement.insertBefore(previousRow);
        acym_editorWysidVersioning.setUndoAndAutoSave();
      }
    });
  },
  blockMoveDown: function blockMoveDown() {
    jQuery('.acym__wysid__element__toolbox__movedown').off('click').on('click', function (e) {
      e.stopPropagation();
      acym_helperEditorWysid.$focusElement = jQuery(this).closest('.acym__wysid__column__element');
      var nextRow = acym_helperEditorWysid.$focusElement.next();

      if (nextRow.length > 0) {
        acym_helperEditorWysid.$focusElement.insertAfter(nextRow);
        acym_editorWysidVersioning.setUndoAndAutoSave();
      }
    });
  },
  blockDelete: function blockDelete() {
    jQuery('.acym__wysid__element__toolbox__delete').off('click').on('click', function () {
      var $elementToDelete = jQuery(this).closest('.acym__wysid__column__element');
      acym_editorWysidContextModal.hideBlockOptions(jQuery('.acym__wysid__context__modal'));
      $elementToDelete.remove();
      acym_helperEditorWysid.addDefaultBlock();
      acym_editorWysidRowSelector.resizeZoneOverlays();
      acym_editorWysidVersioning.setUndoAndAutoSave();
    });
  }
};
var acym_editorWysidVersioning = {
  keepOldVersion: function keepOldVersion(autoSave) {
    var autoSaveWithTmplDiv = '<div id="acym__wysid__template" class="cell">' + autoSave + '</div>';
    jQuery('#editor_autoSave').val('');
    jQuery('#acym__wysid__top-toolbar__keep').off('click').on('click', function () {
      jQuery('.acym__wysid__hidden__save__content').val(autoSaveWithTmplDiv);
      jQuery('#acym__wysid #acym__wysid__template').replaceWith(autoSaveWithTmplDiv); // We just replaced the entire content, we need to reload the overlays and block actions

      acym_helperEditorWysid.setColumnRefreshUiWYSID(false);
      jQuery('#acym__wysid__top-toolbar__notification__close').trigger('click');
    });
  },
  setUndoAndAutoSave: function setUndoAndAutoSave() {
    var initEdit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

    // If the user edits the email while the auto-saved message is still there, remove it
    if (!initEdit && jQuery('.acym__autosave__notification').length) {
      acym_editorWysidNotifications.hideNotification();
    }

    var $templateVersion = jQuery('[id^="template_version_"]');
    if ($templateVersion.length >= 10) $templateVersion[0].remove();
    var currentVersion = acym_helperEditorWysid.versionControl + 1;

    while (jQuery('#template_version_' + currentVersion).length > 0) {
      jQuery('#template_version_' + currentVersion).remove();
      currentVersion++;
    }

    acym_helperEditorWysid.versionControl++;
    jQuery('[name^="mce_"]').remove();
    jQuery('.acym__wysid__column--drag-start').removeClass('acym__wysid__column--drag-start');
    jQuery('.acym__editor__area').append('<input type="hidden" value="" id="template_version_' + acym_helperEditorWysid.versionControl + '">');
    var $template = jQuery('#acym__wysid__template');
    var template = $template.html();
    if (jQuery('#template_version_' + (acym_helperEditorWysid.versionControl - 1)).val() === template) return false;
    jQuery('#template_version_' + acym_helperEditorWysid.versionControl).val(template); // Auto save

    var $campaignID = jQuery('#acym__campaign__recipients__form__campaign');

    if (0 === $campaignID.length || $campaignID.length > 0 && '0' !== $campaignID.val()) {
      var $contentSave = $template.clone();
      $contentSave.find('.acym__wysid__row__selector, .acym__wysid__element__toolbox').remove();
      $contentSave.find('.acym__wysid__tinymce--text--placeholder--empty').removeClass('acym__wysid__tinymce--text--placeholder--empty');
      $contentSave = $contentSave.wrap('<div id="acym__wysid__template-save" class="cell">').html();
      var mailid = jQuery('#editor_mailid').val();

      if (!acym_helper.empty(mailid) && mailid !== '-1' && false === initEdit) {
        var ajaxUrl = ACYM_AJAX_URL + '&ctrl=' + acym_helper.ctrlMails + '&task=autoSave';
        ajaxUrl += '&language=' + acym_editorWysidMultilingual.currentLanguage;
        jQuery.ajax({
          type: 'POST',
          url: ajaxUrl,
          data: {
            autoSave: $contentSave,
            mailId: mailid
          },
          success: function success(res) {},
          error: function error() {
            acym_editorWysidNotifications.addEditorNotification({
              'message': '<div class="cell auto acym__autosave__notification">' + ACYM_JS_TXT.ACYM_ERROR_SAVING + '</div>',
              'level': 'error'
            }, 3000, true);
          }
        });
      }
    }
  },
  checkForUnsavedVersion: function checkForUnsavedVersion() {
    var autoSave = jQuery('#editor_autoSave').val(); // There is an unsaved version of this email, ask the user if we should use it instead

    if (!acym_helper.empty(autoSave)) {
      acym_editorWysidNotifications.addEditorNotification({
        'message': '<div class="cell auto acym__autosave__notification">' + ACYM_JS_TXT.ACYM_AUTOSAVE_USE + '</div>',
        'level': 'info'
      }, false, false, true);
      acym_editorWysidVersioning.keepOldVersion(autoSave);
    }
  },
  setVersionControlCtrlZ: function setVersionControlCtrlZ() {
    jQuery(document).on('keydown', function (e) {
      // We check if the user just typed ctrl+z or cmd+z and that there is an existing previous version
      if (e.key !== 'z' && e.key !== 'Z' || !e.ctrlKey && !e.metaKey) return;
      if (undefined !== tinyMCE.focusedEditor && null !== tinyMCE.focusedEditor) return; // We're writing in a text block in the editor

      if (jQuery('#acym__wysid__editor__source').height() > 0) return; // We're editing the source code of a zone

      if (jQuery('#acym__wysid__context__button').is(':visible')) return; // We're editing the settings of a button block

      if (jQuery('#acym__wysid__context__follow').is(':visible')) return; // We're editing the settings of a follow block

      if (jQuery('#acym__wysid__context__separator').is(':visible')) return; // We're editing the settings of a separator block

      acym_editorWysidVersioning.makeVersionControlChangement(!e.shiftKey);
    });
    jQuery('#acym__wysid__top-toolbar__undo').off('click').on('click', function () {
      acym_editorWysidVersioning.makeVersionControlChangement(true);
    });
    jQuery('#acym__wysid__top-toolbar__redo').off('click').on('click', function () {
      acym_editorWysidVersioning.makeVersionControlChangement(false);
    });
  },
  makeVersionControlChangement: function makeVersionControlChangement(undo) {
    var $templateVersionPlus = jQuery('#template_version_' + (acym_helperEditorWysid.versionControl + 1));
    var $templateVersionMinus = jQuery('#template_version_' + (acym_helperEditorWysid.versionControl - 1));

    if (undo) {
      if ($templateVersionMinus.length > 0 && $templateVersionMinus.val().length === 0) return;
      acym_helperEditorWysid.versionControl--;
      jQuery('#acym__wysid__template').html(jQuery('#template_version_' + acym_helperEditorWysid.versionControl).val());
      if (acym_helperEditorWysid.versionControl === 0) acym_editorWysidVersioning.setUndoAndAutoSave();
    } else {
      if ($templateVersionPlus.length > 0 && $templateVersionPlus.val().length === 0) return;
      acym_helperEditorWysid.versionControl++;
      jQuery('#acym__wysid__template').html(jQuery('#template_version_' + acym_helperEditorWysid.versionControl).val());
    } // The actions below take some time, we hide the overlays just after replacing the content to avoid showing "broken" overlays for a split second


    acym_editorWysidRowSelector.hideOverlays();
    acym_helperEditorWysid.setColumnRefreshUiWYSID(false);
    acym_editorWysidImage.setImageWidthHeightOnInsert();
    acym_editorWysidContextModal.setButtonOptions();
    acym_editorWysidContextModal.setSpaceOptions();
    acym_editorWysidContextModal.setFollowOptions();
    acym_editorWysidContextModal.setSeparatorOptions();
    acym_editorWysidContextModal.setBuiltWithOptions();
    acym_editorWysidDynamic.setDTextActions();
    acym_editorWysidDynamic.setDContentActions();
    acym_editorWysidTinymce.addTinyMceWYSID();
    acym_editorWysidRowSelector.setZoneAndBlockOverlays();
  }
};
var acym_editorWysidWordpress = {
  addMediaWPWYSID: function addMediaWPWYSID(ui, rows) {
    var htmlUi = jQuery(ui).html();
    rows = rows === undefined ? false : rows;
    var file_frame;
    file_frame = wp.media.frames.file_frame = wp.media({
      title: ACYM_JS_TXT.ACYM_SELECT_IMAGE_TO_UPLOAD,
      button: {
        text: ACYM_JS_TXT.ACYM_USE_THIS_IMAGE
      },
      multiple: false
    });
    file_frame.on('select', function () {
      var attachment = file_frame.state().get('selection').first().toJSON();
      var insertImg = true;

      if (attachment.url.indexOf('..') >= 0) {
        insertImg = confirm(ACYM_JS_TXT.ACYM_INSERT_IMG_BAD_NAME);
      }

      if (insertImg) {
        if (rows) {
          var padding = jQuery(ui).css('padding-top');

          if (!jQuery(ui).hasClass('acym__wysid__template__content')) {
            jQuery(ui).css('background-color', '').attr('bgcolor', '');
            jQuery(ui).attr('style', 'background-image: url(\'' + attachment.url + '\'); background-size: cover; background-position: center; background-repeat: no-repeat; padding: ' + padding + ' 0').attr('width', jQuery(ui).width());
          } else {
            jQuery(ui).attr('style', 'background-image: url(\'' + attachment.url + '\'); background-size: cover; background-position: center top; background-repeat: no-repeat; padding: ' + padding + ' 0 40px 0');
            if (jQuery(ui).css('background-image') !== 'none') jQuery('#acym__wysid__background-image__template-delete').css('display', 'flex');
          }

          acym_editorWysidNotifications.addEditorNotification({
            'message': ACYM_JS_TXT.ACYM_BECARFUL_BACKGROUND_IMG,
            'level': 'warning'
          });
        } else {
          var $link = jQuery(ui).find('.acym__wysid__link__image');
          var content = '<tr class="acym__wysid__column__element" style="position: relative; top: inherit; left: inherit; right: inherit; bottom: inherit; height: auto;">';
          content += '<td class="large-12 acym__wysid__column__element__td">';
          content += '<div class="acym__wysid__tinymce--image">';
          content += '<div style="text-align: center" data-mce-style="text-align: center">';

          if ($link.length > 0) {
            content += '<a href="' + $link.attr('href') + '" class="acym__wysid__link__image" target="_blank">';
          }

          content += '<img hspace="0" class="acym__wysid__media__inserted acym__wysid__media__inserted--focus acym__wysid__media__inserted--selected" src="' + attachment.url + '" title="' + acym_helper.escape(attachment.title) + '" alt="' + acym_helper.escape(attachment.alt) + '" style="max-width: 100%; height: auto;  box-sizing: border-box; padding: 0 5px;display:inline-block; margin-left: auto; margin-right: auto;"/>';

          if (attachment.caption !== undefined && attachment.caption.length > 0) {
            content += acym_editorWysidContextModal.getImageCaptionDiv(attachment.caption);
          }

          if ($link.length > 0) {
            content += '</a>';
          }

          content += '</div>';
          content += '</div>';
          content += '</td>';
          content += '</tr>';
          jQuery(ui).replaceWith(content);
          jQuery('.acym__wysid__media__inserted--focus').on('load', function () {
            jQuery(this).removeClass('acym__wysid__media__inserted--focus');
            acym_helperEditorWysid.setColumnRefreshUiWYSID();
            acym_editorWysidImage.setImageWidthHeightOnInsert();
            acym_editorWysidTinymce.addTinyMceWYSID();
          });
          jQuery('#acym__wysid__context__image__alt').val(attachment.alt);
          jQuery('#acym__wysid__context__image__title').val(attachment.title);
          jQuery('#acym__wysid__context__image__caption').val(attachment.caption);
        }
      } else {
        if (!rows) {
          jQuery(ui).replaceWith('');
          acym_helperEditorWysid.setColumnRefreshUiWYSID();
          acym_editorWysidImage.setImageWidthHeightOnInsert();
          acym_editorWysidTinymce.addTinyMceWYSID();
        }
      }
    });
    file_frame.on('escape', function () {
      if (!rows) {
        if (htmlUi.indexOf('insert_photo') !== -1) {
          jQuery(ui).replaceWith('');
        }

        acym_helperEditorWysid.setColumnRefreshUiWYSID();
        acym_editorWysidImage.setImageWidthHeightOnInsert();
        acym_editorWysidTinymce.addTinyMceWYSID();
      }
    });
    file_frame.open();
  }
};